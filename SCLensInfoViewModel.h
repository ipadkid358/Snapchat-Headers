/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:39 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCLensInfoViewModelProtocol.h>
#import <Snapchat/LSAEffectComponentListener.h>
#import <Snapchat/SCLensUIUpdateListener.h>
#import <Snapchat/SCLensFrameRateCounterListener.h>

@class NSDate, SCLens, SCPreferences, SCGCDTimer, LSAEffectComponent, NSString;

@interface SCLensInfoViewModel : NSObject <SCLensInfoViewModelProtocol, LSAEffectComponentListener, SCLensUIUpdateListener, SCLensFrameRateCounterListener> {

	float _fps;
	long long _usedRam;
	long long _archiveSize;
	NSDate* _pushedDate;
	SCLens* _currentLens;
	SCPreferences* _userPreferences;
	SCPreferences* _lensPreferences;
	SCGCDTimer* _updateScenariumMemoryUsageTimer;
	LSAEffectComponent* _effectComponent;
	double _previousLensTotalMemoryUsage;
	double _currentLensMemoryUsage;

}

@property (assign,nonatomic) float fps;                                                 //@synthesize fps=_fps - In the implementation block
@property (assign,nonatomic) long long usedRam;                                         //@synthesize usedRam=_usedRam - In the implementation block
@property (assign,nonatomic) long long archiveSize;                                     //@synthesize archiveSize=_archiveSize - In the implementation block
@property (nonatomic,retain) NSDate * pushedDate;                                       //@synthesize pushedDate=_pushedDate - In the implementation block
@property (nonatomic,retain) SCLens * currentLens;                                      //@synthesize currentLens=_currentLens - In the implementation block
@property (nonatomic,retain) SCPreferences * userPreferences;                           //@synthesize userPreferences=_userPreferences - In the implementation block
@property (nonatomic,retain) SCPreferences * lensPreferences;                           //@synthesize lensPreferences=_lensPreferences - In the implementation block
@property (nonatomic,retain) SCGCDTimer * updateScenariumMemoryUsageTimer;              //@synthesize updateScenariumMemoryUsageTimer=_updateScenariumMemoryUsageTimer - In the implementation block
@property (nonatomic,retain) LSAEffectComponent * effectComponent;                      //@synthesize effectComponent=_effectComponent - In the implementation block
@property (assign,nonatomic) double previousLensTotalMemoryUsage;                       //@synthesize previousLensTotalMemoryUsage=_previousLensTotalMemoryUsage - In the implementation block
@property (assign,nonatomic) double currentLensMemoryUsage;                             //@synthesize currentLensMemoryUsage=_currentLensMemoryUsage - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(LSAEffectComponent *)effectComponent;
-(void)effectComponent:(id)arg1 willTurnOnEffectWithId:(id)arg2 ;
-(void)effectComponent:(id)arg1 didTurnOnEffectWithId:(id)arg2 features:(unsigned long long)arg3 ;
-(void)effectComponent:(id)arg1 willTurnOffEffectWithId:(id)arg2 features:(unsigned long long)arg3 ;
-(void)effectComponent:(id)arg1 didTurnOffEffectWithId:(id)arg2 features:(unsigned long long)arg3 ;
-(void)effectComponent:(id)arg1 effectId:(id)arg2 showHintWithId:(id)arg3 ;
-(void)effectComponent:(id)arg1 hideAllHintsForEffectWithId:(id)arg2 ;
-(void)effectComponent:(id)arg1 effectId:(id)arg2 performHapticFeedback:(unsigned long long)arg3 ;
-(void)effectComponent:(id)arg1 effectId:(id)arg2 showPopUpHintWithId:(id)arg3 interfaceElement:(unsigned long long)arg4 ;
-(void)effectComponent:(id)arg1 effectId:(id)arg2 performInterfaceAction:(unsigned long long)arg3 interfaceElement:(unsigned long long)arg4 interfaceData:(id)arg5 ;
-(void)effectComponent:(id)arg1 loadPersistentStoreForEffectWithId:(id)arg2 ;
-(void)effectComponent:(id)arg1 effectId:(id)arg2 savePersistentStore:(id)arg3 ;
-(void)effectComponent:(id)arg1 didInstantiatedEffectWithId:(id)arg2 isFromCache:(BOOL)arg3 ;
-(void)willShowLenses;
-(void)didHideLenses;
-(void)didUpdateActiveLensOrder:(id)arg1 ;
-(void)didSelectLens:(id)arg1 ;
-(void)willDisplayLens:(id)arg1 ;
-(void)didEndDisplayingLens:(id)arg1 ;
-(SCPreferences *)lensPreferences;
-(id)initWithUserPreferences:(id)arg1 lensPreferences:(id)arg2 effectComponent:(id)arg3 ;
-(void)frameRateCounter:(id)arg1 didUpdateLensFrameProcessingInfo:(SCD_Struct_SC564)arg2 ;
-(SCLens *)currentLens;
-(void)setCurrentLens:(SCLens *)arg1 ;
-(void)updateMemoryUsage;
-(void)updateScenariumLensMemoryUsage;
-(float)fps;
-(double)previousLensTotalMemoryUsage;
-(void)setCurrentLensMemoryUsage:(double)arg1 ;
-(void)setPreviousLensTotalMemoryUsage:(double)arg1 ;
-(double)currentLensMemoryUsage;
-(void)setUsedRam:(long long)arg1 ;
-(void)setUpdateScenariumMemoryUsageTimer:(SCGCDTimer *)arg1 ;
-(void)setPushedDate:(NSDate *)arg1 ;
-(void)setArchiveSize:(long long)arg1 ;
-(SCGCDTimer *)updateScenariumMemoryUsageTimer;
-(void)setFps:(float)arg1 ;
-(long long)usedRam;
-(NSDate *)pushedDate;
-(void)setLensPreferences:(SCPreferences *)arg1 ;
-(void)setEffectComponent:(LSAEffectComponent *)arg1 ;
-(SCPreferences *)userPreferences;
-(void)setUserPreferences:(SCPreferences *)arg1 ;
-(long long)archiveSize;
@end

