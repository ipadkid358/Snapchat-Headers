/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:35 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <GLKit/GLKViewController.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UINavigationControllerDelegate.h>
#import <libobjc.A.dylib/AVCaptureVideoDataOutputSampleBufferDelegate.h>

@class SCUserSession, NSArray, GLKBaseEffect, UIPanGestureRecognizer, EAGLContext, NSString;

@interface SCFaceBioViewController : GLKViewController <UIGestureRecognizerDelegate, UINavigationControllerDelegate, AVCaptureVideoDataOutputSampleBufferDelegate> {

	SCUserSession* _userSession;
	NSArray* _snaps;
	NSArray* _images;
	GLKBaseEffect* _effect;
	UIPanGestureRecognizer* _leftSwipeRecognizer;
	EAGLContext* _context;
	unique_ptr<FaceBioGraphics, std::__1::default_delete<FaceBioGraphics> >* _graphics;
	unique_ptr<LS::Tracking::Face::TrackerWrapper, std::__1::default_delete<LS::Tracking::Face::TrackerWrapper> >* _faceTracker;
	CamIntMat cameraIntrinsicsMatrix;
	unique_ptr<face3DTrack::Face3DModel, std::__1::default_delete<face3DTrack::Face3DModel> >* _face3DModel_P;
	unique_ptr<face3DTrack::Face3DFit, std::__1::default_delete<face3DTrack::Face3DFit> >* _face3DFit_P;
	unique_ptr<face3DTrack::FaceMorph, std::__1::default_delete<face3DTrack::FaceMorph> >* _faceMorph_P;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)handlePopRecognizer:(id)arg1 ;
-(id)initWithUserSession:(id)arg1 snaps:(id)arg2 ;
-(void)_requestImage:(id)arg1 ;
-(void)setupFaceTrackerWithLensDownloadableContent:(id)arg1 ;
-(void)setupFaceBioWithLensDownloadableContent:(id)arg1 ;
-(Mat*)cvMatFromUIImage:(id)arg1 ;
-(BOOL)detectLandmarks:(Mat*)arg1 output:(Array<float, 2, -1, 0, 2, -1>*)arg2 ;
-(void)_updateImages:(id)arg1 ;
-(void)setupAssets;
-(void)dealloc;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(void)viewDidLoad;
-(void)update;
-(void)glkView:(id)arg1 drawInRect:(CGRect)arg2 ;
-(void)setupGL;
-(void)tearDownGL;
@end

