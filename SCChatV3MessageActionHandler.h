/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:12 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCChatMessageActionHandler.h>

@protocol SCChatLogger, SCSnapCashHelperProtocol, SCUserHelperProtocol, SCChatStoryLoader, SCSnapLogger, SCFideliusUnwrapProtocol, SCChatSDKV2SendingModule, SCMediaSendTaskManager;
@class NSString, SCChatV3ConversationStore, SCChatV3MessageSender, SCChatMediaCache, SCChatMediaRequestManager, SCChatMediaStateManager, SCChatConversationUpdater, SCChatV3MessageStateHandler, SCChatMediaReferenceManager, SCChatSnapViewVerifier, SCChatConversationManager, SCChatConversationAPI, SCLazy, SCChatSendBlockAssigner;

@interface SCChatV3MessageActionHandler : NSObject <SCChatMessageActionHandler> {

	NSString* _username;
	SCChatV3ConversationStore* _conversationStore;
	SCChatV3MessageSender* _sender;
	SCChatMediaCache* _mediaCache;
	SCChatMediaRequestManager* _mediaRequestManager;
	SCChatMediaStateManager* _mediaStateManager;
	SCChatConversationUpdater* _updater;
	SCChatV3MessageStateHandler* _messageStateHandler;
	SCChatMediaReferenceManager* _mediaReferenceManager;
	SCChatSnapViewVerifier* _snapViewVerifier;
	SCChatConversationManager* _conversationManager;
	id<SCChatLogger> _logger;
	id<SCSnapCashHelperProtocol> _cashHelper;
	id<SCUserHelperProtocol> _userHelper;
	id<SCChatStoryLoader> _storyLoader;
	id<SCSnapLogger> _snapLogger;
	id<SCFideliusUnwrapProtocol> _fideliusManager;
	id<SCChatSDKV2SendingModule> _chatSdkV2Sender;
	SCChatMediaCache* _chatMediaCache;
	SCChatConversationAPI* _conversationAPI;
	SCLazy* _lazyCustomStickManager;
	SCChatSendBlockAssigner* _blockAssigner;
	id<SCMediaSendTaskManager> _mediaSendTaskManager;

}

@property (__weak) id<SCMediaSendTaskManager> mediaSendTaskManager;              //@synthesize mediaSendTaskManager=_mediaSendTaskManager - In the implementation block
-(void)fetchAuthForConversationId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)conversation:(id)arg1 sendMessage:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)initWithUsername:(id)arg1 conversationStore:(id)arg2 sender:(id)arg3 conversationAPI:(id)arg4 mediaRequestManager:(id)arg5 mediaStateManager:(id)arg6 mediaReferenceManager:(id)arg7 mediaCache:(id)arg8 snapViewVerifier:(id)arg9 updater:(id)arg10 messageStateHandler:(id)arg11 logger:(id)arg12 conversationManager:(id)arg13 cashHelper:(id)arg14 userHelper:(id)arg15 storyLoader:(id)arg16 snapLogger:(id)arg17 fideliusManager:(id)arg18 chatSDKV2Sender:(id)arg19 chatMediaCache:(id)arg20 lazyCustomStickerManager:(id)arg21 ;
-(id<SCMediaSendTaskManager>)mediaSendTaskManager;
-(void)setMediaSendTaskManager:(id<SCMediaSendTaskManager>)arg1 ;
-(void)deleteExpiredMessagesFromConversationId:(id)arg1 ;
-(void)makeChatMedias:(id)arg1 recipients:(id)arg2 groups:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
-(void)loadMedia:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 requestContext:(long long)arg4 ;
-(void)loadStoryReply:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 isGroupConversation:(BOOL)arg4 requestContext:(long long)arg5 ;
-(void)loadMediaCardsForMessage:(id)arg1 ;
-(void)loadStorySnapForId:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 requestContext:(long long)arg4 ;
-(void)loadMapSnapForId:(id)arg1 poiId:(id)arg2 forMessageId:(id)arg3 conversationId:(id)arg4 requestContext:(long long)arg5 ;
-(void)loadSearchStoryForId:(id)arg1 snapId:(id)arg2 forMessageId:(id)arg3 conversationId:(id)arg4 requestContext:(long long)arg5 ;
-(id)_logAndSendSaveStateForMessage:(id)arg1 conversation:(id)arg2 participant:(id)arg3 ;
-(void)_logSaveStateForMessage:(id)arg1 username:(id)arg2 ;
-(BOOL)_canPreserveOrUnpreserveMessage:(id)arg1 preserved:(BOOL)arg2 username:(id)arg3 ;
-(BOOL)_isMediaLoadedForMessage:(id)arg1 ;
-(id)_logAndSendMessagePreservationMessage:(id)arg1 forConversation:(id)arg2 username:(id)arg3 preserved:(BOOL)arg4 ;
-(void)_updateMessageStateForMessageId:(id)arg1 withConversationId:(id)arg2 displayState:(long long)arg3 ;
-(void)_deleteMessageId:(id)arg1 deleteBlock:(BOOL)arg2 fromConversationId:(id)arg3 ;
-(id)_deleteMessage:(id)arg1 deleteBlock:(BOOL)arg2 fromConversation:(id)arg3 ;
-(BOOL)isImmutableChatEnabled;
-(void)_conversationId:(id)arg1 sendApiMesage:(id)arg2 type:(id)arg3 additionalText:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)conversationId:(id)arg1 sendTextMessage:(id)arg2 withAttributes:(id)arg3 withMetricsEventInfo:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)_uploadStory:(id)arg1 conversationId:(id)arg2 sendOnSuccess:(BOOL)arg3 messageCreationBlock:(/*^block*/id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(void)_updateStickerUsageForConversationId:(id)arg1 sticker:(id)arg2 ;
-(void)conversationId:(id)arg1 sendReplyMediaWithMessageType:(long long)arg2 withStory:(id)arg3 mediaProviders:(id)arg4 metricsEventInfo:(id)arg5 completionHandler:(/*^block*/id)arg6 isCustomSticker:(BOOL)arg7 ;
-(void)_uploadReplyMediaForMessage:(id)arg1 conversationId:(id)arg2 sendOnSuccess:(BOOL)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)_handleReplyMedia:(id)arg1 forMessage:(id)arg2 uploadedWithId:(id)arg3 withResponse:(id)arg4 sendOnSuccess:(BOOL)arg5 completionBlock:(/*^block*/id)arg6 ;
-(void)_handleReplyMedia:(id)arg1 forMessage:(id)arg2 failedToUploadWithId:(id)arg3 withResponse:(id)arg4 completionBlock:(/*^block*/id)arg5 ;
-(void)_conversationId:(id)arg1 sendMediaMessageWithType:(long long)arg2 withMediaProviders:(id)arg3 withMessageMetadata:(id)arg4 withMetricsEventInfo:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)_logChatMediaSendStartForMessage:(id)arg1 type:(long long)arg2 messageMetadata:(id)arg3 metricsEventInfo:(id)arg4 ;
-(void)_conversationId:(id)arg1 message:(id)arg2 dataDidPrepareForMedia:(id)arg3 withMediaProvider:(id)arg4 success:(BOOL)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)deleteMessageId:(id)arg1 fromConversationId:(id)arg2 ;
-(void)_conversationId:(id)arg1 message:(id)arg2 didUploadMedia:(id)arg3 success:(BOOL)arg4 ;
-(void)_conversationId:(id)arg1 uploadMedia:(id)arg2 inMessage:(id)arg3 withProvider:(id)arg4 completion:(/*^block*/id)arg5 ;
-(id)_addOrUpdateSendToMessage:(id)arg1 fromConversation:(id)arg2 ;
-(void)_conversationId:(id)arg1 prepareMessageWithMediaProviders:(id)arg2 messageMetadata:(id)arg3 withCompletionHandler:(/*^block*/id)arg4 andMutationBlock:(/*^block*/id)arg5 ;
-(void)_sendLegacyPresences:(id)arg1 extendedPresences:(id)arg2 presencesMetadata:(id)arg3 toRecipients:(id)arg4 forConversation:(id)arg5 ;
-(void)_sendVolatileMessage:(id)arg1 forConversation:(id)arg2 ;
-(id)_retryFailedBlockMessage:(id)arg1 forConversation:(id)arg2 metricsEventInfo:(id)arg3 ;
-(id)_retryFailedMessage:(id)arg1 forConversation:(id)arg2 metricsEventInfo:(id)arg3 ;
-(id)_retryUploadReplyMediasForMessage:(id)arg1 conversation:(id)arg2 ;
-(id)_retryUploadMediasInMessage:(id)arg1 inConversation:(id)arg2 ;
-(void)_handleRetryUploadReplyMediaSuccessWithMessage:(id)arg1 conversation:(id)arg2 responseDictionary:(id)arg3 uploadId:(id)arg4 ;
-(void)_handleRetryUploadFailureWithMessage:(id)arg1 conversation:(id)arg2 response:(id)arg3 uploadId:(id)arg4 ;
-(id)_retryAllFailedMessagesInConversation:(id)arg1 ;
-(id)_chatMetricsEventInfoWithConversation:(id)arg1 ;
-(void)_retryFailedMultiSnapMessages:(id)arg1 ;
-(id)_retryFailedMessages:(id)arg1 conversation:(id)arg2 metricsEventInfo:(id)arg3 ;
-(void)getMessageLocallyWithMessageId:(id)arg1 conversationId:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_ensureMediaLoadStateIsLoaded:(id)arg1 forMediaId:(id)arg2 ;
-(void)fetchMessageWithMessageId:(id)arg1 conversationId:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)_loadMediaCards:(id)arg1 fromText:(id)arg2 forMessageId:(id)arg3 conversationId:(id)arg4 needSpamCheck:(BOOL)arg5 ;
-(void)_correctLoadStateForUrlThumbnailsByUrls:(id)arg1 ;
-(void)_loadUrlMediaCards:(id)arg1 fromText:(id)arg2 forMessageId:(id)arg3 conversationId:(id)arg4 needSpamCheck:(BOOL)arg5 ;
-(void)_correctLoadStateForAddressThumbnailsByAddresses:(id)arg1 ;
-(void)_loadAddressMediaCards:(id)arg1 fromText:(id)arg2 forMessageId:(id)arg3 conversationId:(id)arg4 ;
-(void)_loadSnapchatterForId:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 ;
-(long long)_getStorySnapLoadStateForStorySnapId:(id)arg1 ;
-(void)_setLoadingStateForStorySnapById:(id)arg1 conversationId:(id)arg2 ;
-(void)_loadContributionStoryPublisherForId:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 ;
-(long long)_getMapSnapLoadStateForStorySnapId:(id)arg1 ;
-(long long)_getSearchStoryLoadStateForStorySnapId:(id)arg1 ;
-(long long)_getStoryReplyMediaLoadStateForMediaId:(id)arg1 messageId:(id)arg2 conversationId:(id)arg3 mediaLoadState:(long long)arg4 ;
-(void)_loadGroupStoryReply:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_loadStoryReply:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 senderUsername:(id)arg4 completion:(/*^block*/id)arg5 ;
-(id)_releaseMessagesFromConversation:(id)arg1 upToKnownChatSequenceNumbers:(NSDictionary*)arg2 ;
-(id)_releaseSentMessagesForSender:(id)arg1 forConversation:(id)arg2 ;
-(void)sendDeleteMessagesForConversationId:(id)arg1 upToKnownChatSequenceNumbers:(NSDictionary*)arg2 ;
-(void)_logSCAChatChatViewForMessages:(id)arg1 withReleaseTimestamp:(id)arg2 ;
-(void)_conversationId:(id)arg1 openSnap:(id)arg2 stackId:(id)arg3 isFirstSnapInStack:(BOOL)arg4 atTime:(id)arg5 registerBlock:(/*^block*/id)arg6 ;
-(void)conversationId:(id)arg1 finishViewingSnap:(id)arg2 enforceMessageExists:(BOOL)arg3 cellViewPosition:(long long)arg4 hasAvailableCredits:(BOOL)arg5 ;
-(void)snapWasViewedWithID:(id)arg1 ;
-(void)conversationId:(id)arg1 deleteMediaInMessage:(id)arg2 ;
-(id)_updateSnapStateWithReplayAttempt:(id)arg1 byUser:(id)arg2 ;
-(void)resetStatesInConversations:(id)arg1 isFromBackground:(BOOL)arg2 ;
-(BOOL)_refundCreditIfNecessaryForSnap:(id)arg1 ;
-(id)_markCashMessagesAsViewedInConversation:(id)arg1 ;
-(void)removeAllTasksWithFeedId:(id)arg1 ;
-(void)sendMessageToRecipients:(id)arg1 type:(id)arg2 content:(id)arg3 additionalText:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)applySnapMetadata:(id)arg1 forConversationId:(id)arg2 fromSender:(id)arg3 triggeredBySnapId:(id)arg4 ;
-(void)conversationId:(id)arg1 sendSticker:(id)arg2 fromPack:(id)arg3 fromPosition:(unsigned long long)arg4 withMetricsEventInfo:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(void)sendTextStoryReply:(id)arg1 conversationId:(id)arg2 completionHandler:(/*^block*/id)arg3 story:(id)arg4 typeVersion:(long long)arg5 metricsEventInfo:(id)arg6 ;
-(void)sendStickerStoryReply:(id)arg1 conversationId:(id)arg2 fromPack:(id)arg3 fromPosition:(unsigned long long)arg4 drawerMode:(long long)arg5 completionHandler:(/*^block*/id)arg6 story:(id)arg7 metricsEventInfo:(id)arg8 ;
-(void)sendJoinedCallMessageForConversationId:(id)arg1 ;
-(void)sendLeftCallMessageForConversationId:(id)arg1 ;
-(void)conversationId:(id)arg1 sendMissedCallMessageWithType:(long long)arg2 ;
-(void)toggleSaveForMessageId:(id)arg1 withConversationId:(id)arg2 ;
-(void)batchToggleSaveMessageIds:(id)arg1 conversationId:(id)arg2 toSaved:(BOOL)arg3 ;
-(void)conversationId:(id)arg1 eraseMessage:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)unpreserveLoadedMessagesForConversationId:(id)arg1 ;
-(void)didShowCompleteDisplayForMessageId:(id)arg1 withConversationId:(id)arg2 ;
-(void)didShowPendingDisplayForMessageId:(id)arg1 withConversationId:(id)arg2 ;
-(void)refreshAllMessagesForConversationId:(id)arg1 ;
-(void)conversationId:(id)arg1 sendStatusMessageWithType:(long long)arg2 ;
-(void)sendSaveToCameraRollForMessage:(id)arg1 ;
-(void)conversationId:(id)arg1 updateChatViewSize:(CGSize)arg2 ;
-(void)conversationId:(id)arg1 sendSnapWithProvider:(id)arg2 withMessageMetadata:(id)arg3 metricsEventInfo:(id)arg4 ;
-(void)conversationId:(id)arg1 screenCaptureWithType:(long long)arg2 ;
-(void)conversationId:(id)arg1 addOrUpdateSendToMessageWithMediaProviders:(id)arg2 messageMetadata:(id)arg3 withCompletionHandler:(/*^block*/id)arg4 ;
-(void)conversationId:(id)arg1 sendUploadedMediaWithMediaProviders:(id)arg2 messageMetadata:(id)arg3 chatText:(id)arg4 withCompletionHandler:(/*^block*/id)arg5 ;
-(void)retryFailedBlockMessageId:(id)arg1 forConversationId:(id)arg2 metricsEventInfo:(id)arg3 ;
-(void)retryAllFailedMessagesInConversationId:(id)arg1 ;
-(void)invalidateMediaById:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 ;
-(void)loadMediaCardsForMessageId:(id)arg1 conversationId:(id)arg2 ;
-(void)conversationId:(id)arg1 sendMediaWithMessageType:(long long)arg2 mediaProviders:(id)arg3 withMetricsEventInfo:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)conversationId:(id)arg1 sendCustomStickerWithMessageType:(long long)arg2 mediaProviders:(id)arg3 withMetricsEventInfo:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)releaseMessagesFromConversationId:(id)arg1 upToKnownChatSequenceNumbers:(NSDictionary*)arg2 ;
-(void)releaseSentMessagesForSender:(id)arg1 forConversationId:(id)arg2 ;
-(void)markMessagesAsDisplayedForConversationId:(id)arg1 upToKnownChatSequenceNumbers:(NSDictionary*)arg2 ;
-(void)sendDeleteSnapsForConversationId:(id)arg1 ;
-(void)loadMoreMessagesForConversationId:(id)arg1 retryIfFailed:(BOOL)arg2 ;
-(void)fetchMessageAndMetadataWithMessageId:(id)arg1 conversationId:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)fetchConversation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)getLocalConversation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)getLocalConversationsWithCompletion:(/*^block*/id)arg1 ;
-(void)conversationId:(id)arg1 openSnap:(id)arg2 previousSnapInStack:(id)arg3 atTime:(id)arg4 registerBlock:(/*^block*/id)arg5 ;
-(void)conversationId:(id)arg1 finishViewingSnap:(id)arg2 cellViewPosition:(long long)arg3 hasAvailableCredits:(BOOL)arg4 ;
-(void)conversationId:(id)arg1 userDidTakeScreenshotForSnap:(id)arg2 ;
-(void)conversationId:(id)arg1 userDidScreenRecordForSnap:(id)arg2 ;
-(void)conversationId:(id)arg1 attemptReplayOfSnap:(id)arg2 ;
-(void)updateSnapsForRecipients:(id)arg1 clientId:(id)arg2 snapIdsAndTimestamps:(id)arg3 ;
-(void)attemptReplayOfSnapsInConversation:(id)arg1 ;
-(void)resetStatesInConversation:(id)arg1 isFromBackground:(BOOL)arg2 ;
-(void)invalidateCandidatePaidToReplaySnapsInConversations:(id)arg1 excludingSnapIds:(id)arg2 ;
-(void)conversationId:(id)arg1 setReplayAnimationState:(long long)arg2 forSnap:(id)arg3 ;
-(void)loadSnapchatterForId:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 ;
-(void)reloadStorySnapForId:(id)arg1 forMessageId:(id)arg2 conversationId:(id)arg3 requestContext:(long long)arg4 ;
-(void)reloadMapSnapForId:(id)arg1 poiId:(id)arg2 forMessageId:(id)arg3 conversationId:(id)arg4 requestContext:(long long)arg5 ;
-(void)reloadSearchStoryForId:(id)arg1 snapId:(id)arg2 forMessageId:(id)arg3 conversationId:(id)arg4 requestContext:(long long)arg5 ;
-(void)markSnapchatterIdAsTapped:(id)arg1 forConversationId:(id)arg2 ;
-(void)updateChatDraft:(id)arg1 forConversationId:(id)arg2 ;
-(void)sendLegacyPresences:(id)arg1 extendedPresences:(id)arg2 presencesMetadata:(id)arg3 toRecipients:(id)arg4 forConversation:(id)arg5 ;
-(void)conversationId:(id)arg1 sendVolatileMessage:(id)arg2 ;
-(void)conversationId:(id)arg1 sendConnectedCallMessage:(BOOL)arg2 ;
-(void)removeUsername:(id)arg1 fromConversationId:(id)arg2 ;
-(void)releaseSnapCashMessagesInConversationId:(id)arg1 ;
-(void)conversationId:(id)arg1 currentUsername:(id)arg2 swipeSnapCashPaymentAmountInDollarBillsWithCompletion:(/*^block*/id)arg3 ;
-(void)sendSCCPCashRain:(id)arg1 conversationId:(id)arg2 ;
-(void)createCashMessage:(id)arg1 conversationId:(id)arg2 text:(id)arg3 attributes:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)updateSnapCash:(id)arg1 cvv:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)updateSnapCashInSendingStateMachine:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)updateSnapCash:(id)arg1 squareAPIResponse:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)updateSnapCash:(id)arg1 squareBlockerResponse:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)updateSnapCashTransaction:(id)arg1 signatureResponseDictionary:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)checkRecipientCashEligibilityForConversationId:(id)arg1 senderName:(id)arg2 ;
-(void)updateSnapCashTransaction:(id)arg1 isSuccessfullySent:(BOOL)arg2 ;
-(void)updateSnapCashStatus:(id)arg1 paymentStatus:(long long)arg2 sendStatus:(long long)arg3 ;
-(void)cleanPendingAuthForConversationId:(id)arg1 ;
-(void)setAuthMac:(id)arg1 authPayload:(id)arg2 forConversationId:(id)arg3 ;
-(void)fetchKeyForSnapId:(id)arg1 conversationId:(id)arg2 callback:(/*^block*/id)arg3 ;
-(void)fetchAllConversationIdsWithCompletion:(/*^block*/id)arg1 ;
-(void)conversationId:(id)arg1 updateNotificationStatus:(BOOL)arg2 ;
-(void)fetchPendingLocallyConsumedReplayCreditsWithCompletion:(/*^block*/id)arg1 ;
-(void)fetchNotificationStatusForConversation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)modifyMessageRetentionPolicyForConversationId:(id)arg1 retentionInMinutes:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)_conversationId:(id)arg1 message:(id)arg2 dataDidPrepareForMedia:(id)arg3 withMediaProvider:(id)arg4 success:(BOOL)arg5 ;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
@end

