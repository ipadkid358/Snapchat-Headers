/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:33 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, NSMutableSet, SCQueuePerformer, NSMutableDictionary, SCCraftGcsResourceFetcher, SCCraftResourceManagerConfiguration, SCCraftDebugger, SCCraftLogger;

@interface SCCraftResourceManager : NSObject {

	unsigned long long _numStyles;
	BOOL _loadingStyles;
	NSString* _userId;
	NSMutableSet* _pendingResourcesToLoad;
	SCQueuePerformer* _performer;
	NSMutableDictionary* _styleResourceSuccessBlocks;
	NSMutableDictionary* _styleResourceFailBlocks;
	SCCraftGcsResourceFetcher* _gcsFetcher;
	SCCraftResourceManagerConfiguration* _configuration;
	BOOL _enableForUser;
	BOOL _allowParallelProcessingCalls;
	BOOL _allowServerSideProcessing;
	BOOL _enableSnapprettyMode;
	BOOL _shouldSeamlessClone;
	BOOL _shouldAlignDebug;
	BOOL _enableExperimentalModels;
	SCCraftDebugger* _debugger;
	SCCraftLogger* _logger;

}

@property (nonatomic,retain) SCCraftDebugger * debugger;                     //@synthesize debugger=_debugger - In the implementation block
@property (nonatomic,retain) SCCraftLogger * logger;                         //@synthesize logger=_logger - In the implementation block
@property (assign,nonatomic) BOOL enableForUser;                             //@synthesize enableForUser=_enableForUser - In the implementation block
@property (assign,nonatomic) BOOL allowParallelProcessingCalls;              //@synthesize allowParallelProcessingCalls=_allowParallelProcessingCalls - In the implementation block
@property (assign,nonatomic) BOOL allowServerSideProcessing;                 //@synthesize allowServerSideProcessing=_allowServerSideProcessing - In the implementation block
@property (assign,nonatomic) BOOL enableSnapprettyMode;                      //@synthesize enableSnapprettyMode=_enableSnapprettyMode - In the implementation block
@property (assign,nonatomic) BOOL shouldSeamlessClone;                       //@synthesize shouldSeamlessClone=_shouldSeamlessClone - In the implementation block
@property (assign,nonatomic) BOOL shouldAlignDebug;                          //@synthesize shouldAlignDebug=_shouldAlignDebug - In the implementation block
@property (assign,nonatomic) BOOL enableExperimentalModels;                  //@synthesize enableExperimentalModels=_enableExperimentalModels - In the implementation block
+(BOOL)_resourceAlreadyExistLocally:(id)arg1 ;
+(BOOL)_extractData:(id)arg1 model:(id)arg2 directoryPath:(id)arg3 error:(id*)arg4 ;
+(id)base64Sha1Fingerprint:(id)arg1 ;
+(BOOL)_fingerprintsMatch:(id)arg1 ;
+(void)cleanResourcesForConfiguration:(id)arg1 ;
-(void)setDebugger:(SCCraftDebugger *)arg1 ;
-(SCCraftDebugger *)debugger;
-(void)loadStyleList:(/*^block*/id)arg1 failure:(/*^block*/id)arg2 ;
-(void)loadResourcesForStyleList:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 ;
-(BOOL)allowParallelProcessingCalls;
-(BOOL)enableForUser;
-(BOOL)allowServerSideProcessing;
-(void)refreshStyles;
-(void)setEnableForUser:(BOOL)arg1 ;
-(void)loadStyleResource:(id)arg1 success:(/*^block*/id)arg2 failure:(/*^block*/id)arg3 ;
-(unsigned long long)_hashToInteger:(id)arg1 ;
-(BOOL)_shouldRefreshStyles;
-(void)_loadStyleListFromClient:(/*^block*/id)arg1 failure:(/*^block*/id)arg2 ;
-(void)_loadStyleListFromNetwork:(/*^block*/id)arg1 failure:(/*^block*/id)arg2 ;
-(BOOL)_saveStylesMetadata:(id)arg1 ;
-(id)_parseStyleList:(id)arg1 ;
-(BOOL)_shouldEnableForUser:(id)arg1 maxValueKey:(id)arg2 moduloValueKey:(id)arg3 ;
-(void)setAllowParallelProcessingCalls:(BOOL)arg1 ;
-(id)initWithRequestManager:(id)arg1 userId:(id)arg2 configuration:(id)arg3 ;
-(unsigned long long)numStyles;
-(void)setAllowServerSideProcessing:(BOOL)arg1 ;
-(BOOL)enableSnapprettyMode;
-(void)setEnableSnapprettyMode:(BOOL)arg1 ;
-(BOOL)shouldSeamlessClone;
-(void)setShouldSeamlessClone:(BOOL)arg1 ;
-(BOOL)shouldAlignDebug;
-(void)setShouldAlignDebug:(BOOL)arg1 ;
-(BOOL)enableExperimentalModels;
-(void)setEnableExperimentalModels:(BOOL)arg1 ;
-(SCCraftLogger *)logger;
-(void)setLogger:(SCCraftLogger *)arg1 ;
@end

