/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:40 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCFriendManagerProvider.h>
#import <Snapchat/SCRequestAuthenticator.h>
#import <Snapchat/SCTimeProfilable.h>
#import <Snapchat/SCUpdatesResponseListenerAnnouncerChangeListener.h>
#import <Snapchat/SCUserProvider.h>
#import <Snapchat/SCRegisterAccountV2ViewControllerDelegate.h>
#import <Snapchat/SCAuthenticationService.h>
#import <Snapchat/SCStoriesService.h>
#import <Snapchat/SCLegacyLoginUpdatesDelegate.h>
#import <Snapchat/SCNetworkingRankingUserInfoProvider.h>

@protocol SCServerFeedEventGenerator, OS_dispatch_queue;
@class SCQueuePerformer, SCListenableUpdatesResponseAnnouncer, SOJUUpdatesResponse, NSObject, SCBadgeUpdater, SCUserNavigationTracker, SCScopedAccess, SCStoriesUnarchiver, User, SCNotificationProcessingManager, SCAppNotificationProvider, SCStories, SCConversationMediaLoader, SCStoryLoader, SCSnapLoader, SCChatLoader, NSTimer, NSDate, NSString;

@interface Manager : NSObject <SCFriendManagerProvider, SCRequestAuthenticator, SCTimeProfilable, SCUpdatesResponseListenerAnnouncerChangeListener, SCUserProvider, SCRegisterAccountV2ViewControllerDelegate, SCAuthenticationService, SCStoriesService, SCLegacyLoginUpdatesDelegate, SCNetworkingRankingUserInfoProvider> {

	SCQueuePerformer* _updatesAnnouncerPerformer;
	SCListenableUpdatesResponseAnnouncer* _updatesResponseAnnouncer;
	SOJUUpdatesResponse* _lastUpdatesResponse;
	NSObject* _userLock;
	NSObject* _allUpdatesLock;
	SCBadgeUpdater* _badgeUpdater;
	SCUserNavigationTracker* _userNavigationTracker;
	id<SCServerFeedEventGenerator> _generator;
	SCScopedAccess* _scopedLazyUFSDataCoordinator;
	SCScopedAccess* _scopedLazySnapchattersCoordinator;
	BOOL _shouldRecordFirstSnapWhenLaunchApp;
	BOOL _fetchingAllUpdatesFromServer;
	BOOL _startupToContentReady;
	BOOL _pendingConversationsAfterQuickLogin;
	BOOL _pendingFriendsDependentsAfterQuickLogin;
	BOOL _pendingStoriesAfterQuickLogin;
	SCStoriesUnarchiver* _storiesUnarchiver;
	User* _user;
	SCNotificationProcessingManager* _notificationController;
	SCAppNotificationProvider* _notificationProvider;
	SCStories* _stories;
	SCConversationMediaLoader* _conversationMediaLoader;
	SCStoryLoader* _storyLoader;
	SCSnapLoader* _snapLoader;
	SCChatLoader* _chatLoader;
	NSTimer* _centralTimer;
	NSDate* _referenceDateForFeedTimestamps;
	unsigned long long _sessionCount;
	NSObject*<OS_dispatch_queue> _flushEventsQueue;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) unsigned long long sessionCount;                                       //@synthesize sessionCount=_sessionCount - In the implementation block
@property (nonatomic,readonly) NSObject*<OS_dispatch_queue> flushEventsQueue;                       //@synthesize flushEventsQueue=_flushEventsQueue - In the implementation block
@property (nonatomic,retain) SCStoriesUnarchiver * storiesUnarchiver;                               //@synthesize storiesUnarchiver=_storiesUnarchiver - In the implementation block
@property (nonatomic,retain) User * user;                                                           //@synthesize user=_user - In the implementation block
@property (nonatomic,retain) SCNotificationProcessingManager * notificationController;              //@synthesize notificationController=_notificationController - In the implementation block
@property (nonatomic,retain) SCAppNotificationProvider * notificationProvider;                      //@synthesize notificationProvider=_notificationProvider - In the implementation block
@property (nonatomic,retain) SCStories * stories;                                                   //@synthesize stories=_stories - In the implementation block
@property (nonatomic,retain) SCConversationMediaLoader * conversationMediaLoader;                   //@synthesize conversationMediaLoader=_conversationMediaLoader - In the implementation block
@property (nonatomic,retain) SCStoryLoader * storyLoader;                                           //@synthesize storyLoader=_storyLoader - In the implementation block
@property (nonatomic,retain) SCSnapLoader * snapLoader;                                             //@synthesize snapLoader=_snapLoader - In the implementation block
@property (nonatomic,retain) SCChatLoader * chatLoader;                                             //@synthesize chatLoader=_chatLoader - In the implementation block
@property (nonatomic,retain) NSTimer * centralTimer;                                                //@synthesize centralTimer=_centralTimer - In the implementation block
@property (nonatomic,retain) NSDate * referenceDateForFeedTimestamps;                               //@synthesize referenceDateForFeedTimestamps=_referenceDateForFeedTimestamps - In the implementation block
@property (assign,nonatomic) BOOL shouldRecordFirstSnapWhenLaunchApp;                               //@synthesize shouldRecordFirstSnapWhenLaunchApp=_shouldRecordFirstSnapWhenLaunchApp - In the implementation block
@property (assign,nonatomic) BOOL fetchingAllUpdatesFromServer;                                     //@synthesize fetchingAllUpdatesFromServer=_fetchingAllUpdatesFromServer - In the implementation block
@property (assign,nonatomic) BOOL startupToContentReady;                                            //@synthesize startupToContentReady=_startupToContentReady - In the implementation block
@property (assign,nonatomic) BOOL pendingConversationsAfterQuickLogin;                              //@synthesize pendingConversationsAfterQuickLogin=_pendingConversationsAfterQuickLogin - In the implementation block
@property (assign,nonatomic) BOOL pendingFriendsDependentsAfterQuickLogin;                          //@synthesize pendingFriendsDependentsAfterQuickLogin=_pendingFriendsDependentsAfterQuickLogin - In the implementation block
@property (assign,nonatomic) BOOL pendingStoriesAfterQuickLogin;                                    //@synthesize pendingStoriesAfterQuickLogin=_pendingStoriesAfterQuickLogin - In the implementation block
+(void)fetchDataForLocationWithParameters:(id)arg1 callbackQueue:(id)arg2 referenceId:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(void)fetchPreCacheDataForLocationWithParameters:(id)arg1 requestParser:(id)arg2 callbackQueue:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(void)fetchAllUpdatesWithParameters:(id)arg1 optionalParameters:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)flushEvents:(id)arg1 successBlock:(/*^block*/id)arg2 failureBlock:(/*^block*/id)arg3 ;
+(void)fetchDescriptionForSharedStoryIdWithParameters:(id)arg1 successBlock:(/*^block*/id)arg2 failureBlock:(/*^block*/id)arg3 ;
+(void)registerDeviceTokenWithParameters:(id)arg1 authenticator:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)reportSnapWithParameters:(id)arg1 authenticator:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)sendReportWithParams:(id)arg1 authenticator:(id)arg2 endpoint:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(void)clearUnusedMediaURLsExcludingURLsFromSnaps:(id)arg1 andStories:(id)arg2 ;
+(BOOL)isInitialized;
+(int)context;
+(id)shared;
-(SCStories *)stories;
-(long long)preferredVerificationMethod;
-(id)friendManager;
-(void)didAddListener:(id)arg1 ;
-(SCStoryLoader *)storyLoader;
-(void)logout:(unsigned long long)arg1 ;
-(void)fetchConversationsUpdates;
-(id)authenticator_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
-(BOOL)shouldOpenToCameraAfterBackgroundingOnViewController:(id)arg1 ;
-(void)clearExpiredAndViewedStoriesWithCompletion:(/*^block*/id)arg1 ;
-(NSDate *)referenceDateForFeedTimestamps;
-(BOOL)shouldRecordFirstSnapWhenLaunchApp;
-(void)setShouldRecordFirstSnapWhenLaunchApp:(BOOL)arg1 ;
-(SCSnapLoader *)snapLoader;
-(void)markViewedStories:(BOOL)arg1 ;
-(void)loadMoreConversationsIfPossibleForceOnFailed:(BOOL)arg1 ;
-(void)fetchConversationsUpdatesWithNotificationReport;
-(BOOL)canLoadMoreConversationsAutomatically;
-(void)createFriendFeedRequestWithTriggerType:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)startupToContentReady;
-(BOOL)fetchingAllUpdatesFromServer;
-(void)setStories:(SCStories *)arg1 ;
-(SCStoriesUnarchiver *)storiesUnarchiver;
-(SCConversationMediaLoader *)conversationMediaLoader;
-(void)loadRecentSnapsAndMedia;
-(SCChatLoader *)chatLoader;
-(void)loginDidSucceedWithVerificationNeeded:(id)arg1 ;
-(void)loginDidSucceedWithResponse:(id)arg1 tempIdentity:(id)arg2 userSession:(id)arg3 ;
-(void)loginDidFailWithUsernameOrEmail:(id)arg1 errorInfo:(id)arg2 ;
-(BOOL)hasEnteredAnEmail;
-(BOOL)shouldShowFeedLoadingView;
-(void)startBadgeUpdater;
-(void)finishRegistration:(id)arg1 ;
-(id)registerDidSucceedWithResponse:(id)arg1 tempIdentity:(id)arg2 ;
-(void)fetchConversationsUpdatesAndStories;
-(void)setUpdatesResponseAnnouncer:(id)arg1 ;
-(void)didAppStartupComplete;
-(void)setReferenceDateForFeedTimestamps:(NSDate *)arg1 ;
-(double)timeEnteredBackground;
-(NSObject*<OS_dispatch_queue>)flushEventsQueue;
-(void)setCentralTimer:(NSTimer *)arg1 ;
-(SCAppNotificationProvider *)notificationProvider;
-(void)_didReceiveUpdatesResponse:(id)arg1 ;
-(void)_performPostQuickLoginUpdates;
-(void)setPendingConversationsAfterQuickLogin:(BOOL)arg1 ;
-(void)setPendingFriendsDependentsAfterQuickLogin:(BOOL)arg1 ;
-(void)setPendingStoriesAfterQuickLogin:(BOOL)arg1 ;
-(void)_fetchCheetahFriendFeedWithTriggerType:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)_fetchConversationsWithFriends:(BOOL)arg1 triggerType:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(id)getUpdatedSnapsJsonWithUpdatedSnaps:(id)arg1 ;
-(void)_fetchCheetahFriendFeedWithTriggerType:(long long)arg1 chatFeedIterToken:(id)arg2 knownChatFeedItems:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)_fetchCheetahFriendFeedWithTriggerType:(long long)arg1 layoutType:(long long)arg2 chatFeedIterToken:(id)arg3 knownChatFeedItems:(id)arg4 completion:(/*^block*/id)arg5 ;
-(unsigned long long)fideliusStatus;
-(void)_parseRankingMetaData:(id)arg1 friendsFeedUserSignals:(id)arg2 ;
-(void)_didFetchUpdatesSuccessfullyWithServerInfo:(id)arg1 updatesResponse:(id)arg2 friendsResponse:(id)arg3 identityCheckResponse:(id)arg4 chatConversationsResponse:(id)arg5 groupConversationsResponse:(id)arg6 conversationResponseInfo:(id)arg7 feedResponseInfo:(id)arg8 messagingGatewayInfo:(id)arg9 securityResponseInfo:(id)arg10 fideliusStatus:(unsigned long long)arg11 triggerType:(long long)arg12 isAllUpdates:(BOOL)arg13 completion:(/*^block*/id)arg14 ;
-(void)_addInteractionEventsForServerFeedItems:(id)arg1 triggerType:(long long)arg2 ;
-(/*^block*/id)fetchConversationsFailureBlock;
-(void)_createFriendFeedRequestWithTriggerType:(long long)arg1 layoutType:(long long)arg2 chatFeedIterToken:(id)arg3 sessionId:(id)arg4 requestId:(id)arg5 excludeFriends:(BOOL)arg6 knownChatFeedItems:(id)arg7 completion:(/*^block*/id)arg8 ;
-(void)_fetchChecksumsAndFriendsAndConversationsDeltaFetchInfoWithTriggerType:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)_fetchFriendsAndChecksumsWithTriggerType:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)_fetchConversationDeltaFetchInfoWithTriggerType:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)_fetchFriendsWithCompletion:(/*^block*/id)arg1 ;
-(void)_fetchUpdatesWithCompletionHandler:(/*^block*/id)arg1 isAllUpdates:(BOOL)arg2 includeConversations:(BOOL)arg3 triggerType:(long long)arg4 ;
-(void)_fetchUpdatesSuccessWithResponse:(id)arg1 isAllUpdates:(BOOL)arg2 triggerType:(long long)arg3 fideliusStatus:(unsigned long long)arg4 onCompletion:(/*^block*/id)arg5 ;
-(void)_fetchUpdatesFromLaunchIncludeConversations:(BOOL)arg1 triggerType:(long long)arg2 ;
-(void)fetchAllConversationsWithTriggerType:(long long)arg1 parameters:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
-(void)_fetchMoreConversationsV2;
-(void)_waitUntilChatsLoadedIfNeeded:(/*^block*/id)arg1 ;
-(void)_logFetchUpdatesOnFeedWithIsPullToRefresh:(BOOL)arg1 isAllUpdates:(BOOL)arg2 isFullResponse:(BOOL)arg3 ;
-(void)_didFetchUpdatesWithIsPullToRefresh:(BOOL)arg1 isAllUpdates:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(/*^block*/id)fetchUpdatesSuccessBlockWithTriggerType:(long long)arg1 ;
-(/*^block*/id)fetchConversationsSuccessBlock;
-(BOOL)isOfficialStoryCollaborator;
-(void)setFetchingAllUpdatesFromServer:(BOOL)arg1 ;
-(void)setStartupToContentReady:(BOOL)arg1 ;
-(void)_didFetchUpdatesFailure:(id)arg1 ;
-(id)parametersForFetchUpdates;
-(void)_handleDeltaFetchCompletionWithGroupDeltaRequest:(NSArray*)arg1 chatDeltaRequest:(NSDictionary*)arg2 snapDeltaRequest:(NSDictionary*)arg3 parameters:(id)arg4 successBlock:(/*^block*/id)arg5 failureBlock:(/*^block*/id)arg6 ;
-(void)forceLogout:(unsigned long long)arg1 additionalInfo:(id)arg2 ;
-(void)updateCacheLimit;
-(void)postServerChallenge;
-(void)unarchiveMoreConversations;
-(void)_fetchMoreConversations;
-(BOOL)pendingConversationsAfterQuickLogin;
-(id)_logoutReasonFor:(unsigned long long)arg1 ;
-(void)_logApplicationLogout:(BOOL)arg1 reason:(id)arg2 ;
-(void)logoutForced:(BOOL)arg1 ;
-(void)doLogoutRequest:(BOOL)arg1 ;
-(void)_removeDocumentFilesAfterLogout;
-(BOOL)userHasValidRequest;
-(void)markSnapAsViewed:(id)arg1 cellViewPosition:(long long)arg2 ;
-(NSTimer *)centralTimer;
-(void)markViewedSnaps;
-(void)_flushLoggerEvents;
-(void)_scheduleStorageManagementAfter:(double)arg1 ;
-(void)_setMobEnabledValueFromResponse:(id)arg1 ;
-(void)_setDirectToStorageFromResponse:(id)arg1 ;
-(BOOL)shouldReturnToCamera:(double)arg1 ;
-(BOOL)userDataAvailable;
-(void)markViewedAddedFriends;
-(void)_fetchCheetahFriendFeedWithTriggerType:(long long)arg1 layoutType:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)_didFetchStoriesFailure:(id)arg1 ;
-(void)checkMobile;
-(void)registerDeviceToken:(id)arg1 voipToken:(id)arg2 ;
-(void)startTimerIfNecessary;
-(void)prepareForResignActive;
-(void)prepareForBecomeActiveFromRemoteNotification:(BOOL)arg1 ;
-(void)willEnterForegroundFromRemoteNotification:(BOOL)arg1 isColdStart:(BOOL)arg2 withAppNotification:(id)arg3 ;
-(void)setStoriesUnarchiver:(SCStoriesUnarchiver *)arg1 ;
-(void)setNotificationProvider:(SCAppNotificationProvider *)arg1 ;
-(void)setConversationMediaLoader:(SCConversationMediaLoader *)arg1 ;
-(void)setStoryLoader:(SCStoryLoader *)arg1 ;
-(void)setSnapLoader:(SCSnapLoader *)arg1 ;
-(void)setChatLoader:(SCChatLoader *)arg1 ;
-(BOOL)pendingFriendsDependentsAfterQuickLogin;
-(BOOL)pendingStoriesAfterQuickLogin;
-(id)init;
-(id)authToken;
-(BOOL)isUserCreated;
-(void)tick:(id)arg1 ;
-(id)username;
-(User *)user;
-(void)setUser:(User *)arg1 ;
-(void)didEnterBackground;
-(SCNotificationProcessingManager *)notificationController;
-(void)setNotificationController:(SCNotificationProcessingManager *)arg1 ;
-(unsigned long long)sessionCount;
-(void)setSessionCount:(unsigned long long)arg1 ;
@end

