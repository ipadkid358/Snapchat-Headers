/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:46 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/AVAssetDownloadDelegate.h>
#import <Snapchat/AVContentKeySessionDelegate.h>

@protocol BCOVFPSAuthorizationProxy, BCOVOfflineVideoManagerDelegate;
@class NSMutableDictionary, AVAssetDownloadURLSession, NSMutableArray, BCOVAnalyticsSessionDigester, NSDictionary, NSArray, NSString;

@interface BCOVOfflineVideoManager : NSObject <AVAssetDownloadDelegate, AVContentKeySessionDelegate> {

	NSMutableDictionary* _applicationCertificatesDictionary;
	id<BCOVFPSAuthorizationProxy> _authProxy;
	id<BCOVOfflineVideoManagerDelegate> _delegate;
	AVAssetDownloadURLSession* _sharedBackgroundSession;
	NSMutableArray* _offlineVideoStatusArray;
	NSMutableArray* _manifestCache;
	NSMutableArray* _fairPlayLicenseHelpers;
	BCOVAnalyticsSessionDigester* _analyticsDigester;
	NSDictionary* _options;

}

@property (nonatomic,retain) AVAssetDownloadURLSession * sharedBackgroundSession;                  //@synthesize sharedBackgroundSession=_sharedBackgroundSession - In the implementation block
@property (nonatomic,retain) NSMutableArray * offlineVideoStatusArray;                             //@synthesize offlineVideoStatusArray=_offlineVideoStatusArray - In the implementation block
@property (nonatomic,retain) NSMutableArray * manifestCache;                                       //@synthesize manifestCache=_manifestCache - In the implementation block
@property (nonatomic,retain) NSMutableArray * fairPlayLicenseHelpers;                              //@synthesize fairPlayLicenseHelpers=_fairPlayLicenseHelpers - In the implementation block
@property (nonatomic,retain) BCOVAnalyticsSessionDigester * analyticsDigester;                     //@synthesize analyticsDigester=_analyticsDigester - In the implementation block
@property (nonatomic,retain) NSDictionary * options;                                               //@synthesize options=_options - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * applicationCertificatesDictionary;              //@synthesize applicationCertificatesDictionary=_applicationCertificatesDictionary - In the implementation block
@property (nonatomic,retain) id<BCOVFPSAuthorizationProxy> authProxy;                              //@synthesize authProxy=_authProxy - In the implementation block
@property (assign,nonatomic) id<BCOVOfflineVideoManagerDelegate> delegate;                         //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSArray * offlineVideoTokens; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)brightcoveDirectoryURL;
+(void)initializeOfflineVideoManagerWithDelegate:(id)arg1 options:(id)arg2 ;
+(id)sharedManager;
+(BOOL)isAvailable;
-(id)offlineVideoStatusForToken:(id)arg1 ;
-(id)webVTTDataForLanguage:(id)arg1 offlineVideoToken:(id)arg2 ;
-(BCOVAnalyticsSessionDigester *)analyticsDigester;
-(void)setAnalyticsDigester:(BCOVAnalyticsSessionDigester *)arg1 ;
-(id)statusURLForToken:(id)arg1 ;
-(void)createSharedBackgroundSession;
-(void)restoreDownloadTasks;
-(void)cleanUntrackedFiles;
-(void)setFairPlayLicenseHelpers:(NSMutableArray *)arg1 ;
-(void)setManifestCache:(NSMutableArray *)arg1 ;
-(void)setSharedBackgroundSession:(AVAssetDownloadURLSession *)arg1 ;
-(id)attributesDictionaryForManifestLine:(id)arg1 ;
-(void)retrieveHLSManifest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)variantAttributesDictionariesForVideo:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)selectVariantFromArray:(id)arg1 maximumBitrate:(id)arg2 ;
-(BOOL)validateArguments:(id)arg1 parameters:(id)arg2 completion:(/*^block*/id)arg3 ;
-(NSArray *)offlineVideoTokens;
-(id)videoObjectFromOfflineVideoToken:(id)arg1 ;
-(id)downloadErrorWithDescription:(id)arg1 failureReason:(id)arg2 recoverySuggestion:(id)arg3 errorCode:(int)arg4 underlyingError:(id)arg5 ;
-(void)createVideoMetadataBundle:(id)arg1 video:(id)arg2 source:(id)arg3 parameters:(id)arg4 additionalMetadata:(id)arg5 ;
-(NSMutableArray *)offlineVideoStatusArray;
-(void)sortOfflineVideoStatusArray;
-(void)writeDownloadRequestParametersToStorage:(id)arg1 offlineVideoToken:(id)arg2 ;
-(NSMutableArray *)fairPlayLicenseHelpers;
-(void)writeContentIdentifierURIToMetadataBundle:(id)arg1 offlineVideoToken:(id)arg2 ;
-(void)deleteOfflineVideo:(id)arg1 ;
-(id)fairPlayHelperForOfflineVideoToken:(id)arg1 ;
-(id)readVideoPropertiesDictionaryForToken:(id)arg1 ;
-(void)writeVideoPropertiesDictionary:(id)arg1 offlineVideoToken:(id)arg2 ;
-(id)mutableOfflineVideoStatusForToken:(id)arg1 ;
-(AVAssetDownloadURLSession *)sharedBackgroundSession;
-(void)downloadWebVTTFile:(id)arg1 subtitleLanguage:(id)arg2 offlineVideoToken:(id)arg3 ;
-(void)sendAnalyticsEvent:(id)arg1 video:(id)arg2 additionalProperties:(id)arg3 ;
-(void)removeFairPlayLicenseHelperForOfflineVideoToken:(id)arg1 ;
-(void)removePropertiesInMetadataBundleWithKey:(id)arg1 offlineVideoToken:(id)arg2 ;
-(void)addPropertiesInMetadataBundle:(id)arg1 offlineVideoToken:(id)arg2 ;
-(id)findContentIdentifierInVideoPackageForOfflineVideoToken:(id)arg1 ;
-(void)synchronizeDownloadState:(id)arg1 ;
-(id)videoMetadataDirectoryURLForToken:(id)arg1 ;
-(void)deleteOfflineVideoFolder:(id)arg1 ;
-(void)deleteOfflineVideoMetadataFolder:(id)arg1 ;
-(void)removeOfflineVideoStatusObjectForOfflineVideoToken:(id)arg1 ;
-(id)webVTTURLForToken:(id)arg1 language:(id)arg2 ;
-(id)manifestForURL:(id)arg1 ;
-(void)addManifest:(id)arg1 forURL:(id)arg2 ;
-(void)setOfflineVideoStatusArray:(NSMutableArray *)arg1 ;
-(BOOL)videoPackageOwnedByUs:(id)arg1 ;
-(id)thumbnailURLFromVideo:(id)arg1 ;
-(id)posterURLFromVideo:(id)arg1 ;
-(id)videoPropertiesURLForToken:(id)arg1 ;
-(void)downloadImageAssetsForOfflineVideoToken:(id)arg1 video:(id)arg2 ;
-(id)certificateURLForVideo:(id)arg1 ;
-(id)persistentLicenseURLForToken:(id)arg1 ;
-(id)downloadRequestParametersURLForToken:(id)arg1 ;
-(NSMutableArray *)manifestCache;
-(id)mediaSelectionDescription:(id)arg1 URLAsset:(id)arg2 ;
-(void)contentKeySession:(id)arg1 didProvidePersistableContentKeyRequest:(id)arg2 ;
-(id)offlineVideoTokenForContentIdentifierURI:(id)arg1 ;
-(void)setError:(id)arg1 offlineVideoToken:(id)arg2 ;
-(id)persistentContentKeyForOfflineVideoToken:(id)arg1 ;
-(id)cachedApplicationCertificateForVideo:(id)arg1 ;
-(void)completeContentKeyResponseWithContentKeyRequest:(id)arg1 applicationCertificate:(id)arg2 contentIdentifier:(id)arg3 offlineVideoToken:(id)arg4 ;
-(void)addFairPlayApplicationCertificate:(id)arg1 identifier:(id)arg2 ;
-(void)retrieveApplicationCertificateForVideo:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id<BCOVFPSAuthorizationProxy>)authProxy;
-(BOOL)storePersistentContentKey:(id)arg1 offlineVideoToken:(id)arg2 ;
-(NSMutableDictionary *)applicationCertificatesDictionary;
-(void)setApplicationCertificatesDictionary:(NSMutableDictionary *)arg1 ;
-(void)URLSession:(id)arg1 aggregateAssetDownloadTask:(id)arg2 willDownloadToURL:(id)arg3 ;
-(void)URLSession:(id)arg1 aggregateAssetDownloadTask:(id)arg2 didCompleteForMediaSelection:(id)arg3 ;
-(void)URLSession:(id)arg1 aggregateAssetDownloadTask:(id)arg2 didLoadTimeRange:(SCD_Struct_BC197)arg3 totalTimeRangesLoaded:(id)arg4 timeRangeExpectedToLoad:(SCD_Struct_BC197)arg5 forMediaSelection:(id)arg6 ;
-(void)contentKeySession:(id)arg1 didProvideContentKeyRequest:(id)arg2 ;
-(void)contentKeySession:(id)arg1 contentKeyRequest:(id)arg2 didFailWithError:(id)arg3 ;
-(void)forceStopAllDownloadTasks;
-(void)alternativeRenditionAttributesDictionariesForVideo:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)variantBitratesForVideo:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)estimateDownloadSize:(id)arg1 options:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)preloadFairPlayLicense:(id)arg1 parameters:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)requestVideoDownload:(id)arg1 parameters:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)renewFairPlayLicense:(id)arg1 parameters:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)mediaSelectionGroupForMediaCharacteristic:(id)arg1 offlineVideoToken:(id)arg2 ;
-(id)downloadedMediaSelectionOptionsForMediaCharacteristic:(id)arg1 offlineVideoToken:(id)arg2 ;
-(void)requestMediaSelectionsDownload:(id)arg1 offlineVideoToken:(id)arg2 ;
-(void)pauseVideoDownload:(id)arg1 ;
-(void)resumeVideoDownload:(id)arg1 ;
-(void)cancelVideoDownload:(id)arg1 ;
-(id)offlineVideoStatus;
-(id)readDownloadRequestParametersFromStorage:(id)arg1 ;
-(void)setAuthProxy:(id<BCOVFPSAuthorizationProxy>)arg1 ;
-(void)URLSession:(id)arg1 assetDownloadTask:(id)arg2 didLoadTimeRange:(SCD_Struct_BC197)arg3 totalTimeRangesLoaded:(id)arg4 timeRangeExpectedToLoad:(SCD_Struct_BC197)arg5 ;
-(void)URLSession:(id)arg1 assetDownloadTask:(id)arg2 didResolveMediaSelection:(id)arg3 ;
-(void)URLSession:(id)arg1 assetDownloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3 ;
-(id)init;
-(void)setDelegate:(id<BCOVOfflineVideoManagerDelegate>)arg1 ;
-(void)dealloc;
-(id<BCOVOfflineVideoManagerDelegate>)delegate;
-(NSDictionary *)options;
-(void)setOptions:(NSDictionary *)arg1 ;
-(void)URLSessionDidFinishEventsForBackgroundURLSession:(id)arg1 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(id)initPrivate;
@end

