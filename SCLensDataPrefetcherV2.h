/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:38 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCUserSessionScoped.h>

@protocol SCPerforming;
@class SCLensDataFetcherV2, SCLensPreloadingBehavior, NSString;

@interface SCLensDataPrefetcherV2 : NSObject <SCUserSessionScoped> {

	SCLensDataFetcherV2* _lensDataFetcher;
	id<SCPerforming> _performer;
	SCLensPreloadingBehavior* _lensPreloadingBehavior;

}

@property (nonatomic,retain) SCLensDataFetcherV2 * lensDataFetcher;                          //@synthesize lensDataFetcher=_lensDataFetcher - In the implementation block
@property (nonatomic,retain) id<SCPerforming> performer;                                     //@synthesize performer=_performer - In the implementation block
@property (nonatomic,retain) SCLensPreloadingBehavior * lensPreloadingBehavior;              //@synthesize lensPreloadingBehavior=_lensPreloadingBehavior - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<SCPerforming>)performer;
-(void)setPerformer:(id<SCPerforming>)arg1 ;
-(void)prefetchAssets:(id)arg1 ;
-(void)prefetchLenses:(id)arg1 ;
-(SCLensDataFetcherV2 *)lensDataFetcher;
-(void)prefetchManifestItemsForLens:(id)arg1 ;
-(void)prefetchBitmojiListItems:(id)arg1 bitmojiStickers:(id)arg2 lens:(id)arg3 ;
-(void)prefetchAvatar3DAsset:(id)arg1 lens:(id)arg2 ;
-(void)prefetch3DBitmojiMetadataAssets:(id)arg1 lens:(id)arg2 ;
-(id)initWithLensDataFetcher:(id)arg1 performer:(id)arg2 userSession:(id)arg3 ;
-(void)prefetchAssetsForLens:(id)arg1 ;
-(void)setLensDataFetcher:(SCLensDataFetcherV2 *)arg1 ;
-(SCLensPreloadingBehavior *)lensPreloadingBehavior;
-(void)setLensPreloadingBehavior:(SCLensPreloadingBehavior *)arg1 ;
-(void)invalidate;
@end

