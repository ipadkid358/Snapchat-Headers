/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:19 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <UIKit/UIViewController.h>
#import <Snapchat/SCMotionManagerListener.h>
#import <Snapchat/BCOVPlaybackControllerDelegate.h>
#import <Snapchat/SCOperaVideoControlsViewDelegate.h>
#import <Snapchat/SCOperaRemoteVideoStateDelegate.h>
#import <Snapchat/SCOperaVideoControlsViewDataSource.h>
#import <Snapchat/SCOperaRemoteVideoPropertiesListener.h>
#import <Snapchat/SCOperaRemoteVideoProxyListener.h>
#import <Snapchat/SCOperaPageableViewController.h>
#import <Snapchat/SCOperaLayerViewControllerMediaContainer.h>

@protocol SCOperaImageProvider, SCOperaPageableViewControllerDelegate, SCOperaRemoteVideoControllerDelegate, BCOVPlaybackController;
@class SCOperaRemoteVideoView, AVPlayerItemVideoOutput, CALayer, NSMutableDictionary, SCStopwatch, SCOperaEventListenerAnnouncer, NSDictionary, SCOperaConfiguration, NSString, UIColor, NSArray, AVPlayerLayer, SCOperaRemoteVideoSessionConsumer, NSTimer, SCOperaRemoteVideoState, FBKVOController, NSObject;

@interface SCOperaRemoteVideoViewController : UIViewController <SCMotionManagerListener, BCOVPlaybackControllerDelegate, SCOperaVideoControlsViewDelegate, SCOperaRemoteVideoStateDelegate, SCOperaVideoControlsViewDataSource, SCOperaRemoteVideoPropertiesListener, SCOperaRemoteVideoProxyListener, SCOperaPageableViewController, SCOperaLayerViewControllerMediaContainer> {

	SCOperaRemoteVideoView* _view;
	AVPlayerItemVideoOutput* _videoOutput;
	BOOL _videoHasPlayed;
	BOOL _captionIsInitialized;
	BOOL _shouldShowCaption;
	BOOL _videoHasCaptions;
	CALayer* _subtitleLayer;
	BOOL _ignoreUpdateToSubtitleVideoSize;
	BOOL _isFullscreen;
	NSMutableDictionary* _videoProgress;
	SCStopwatch* _mediaDisplayedTime;
	BOOL _wasBeingPresented;
	BOOL _shouldHideControlsWhilePaused;
	SCOperaEventListenerAnnouncer* _announcer;
	NSDictionary* _context;
	SCOperaConfiguration* _configuration;
	BOOL _isInline;
	NSString* _firstFrameImageKey;
	UIColor* _primaryColor;
	id<SCOperaImageProvider> _imageProvider;
	BOOL _videoRotationEnabled;
	BOOL _isListeningForMotionUpdates;
	double _minRollDegree;
	double _maxRollDegree;
	double _rotationVideoScale;
	BOOL _showActionMenuButtonEnabled;
	NSString* _bufferingActivityIdentifier;
	BOOL _shouldAutoPlayWhenReady;
	BOOL _isReady;
	BOOL _isSeeking;
	id<SCOperaPageableViewControllerDelegate> _pageableViewControllerDelegate;
	id<SCOperaRemoteVideoControllerDelegate> _delegate;
	NSString* _videoID;
	NSArray* _bcovVideos;
	AVPlayerLayer* _playerLayer;
	SCOperaRemoteVideoSessionConsumer* _sessionConsumer;
	NSTimer* _controlsFadeTimer;
	long long _virtualOrientation;
	SCOperaRemoteVideoState* _state;
	FBKVOController* _observeController;
	NSObject*<BCOVPlaybackController> _bcovController;
	NSString* _deviceOrientationManagerToken;

}

@property (nonatomic,retain) NSArray * bcovVideos;                                                                         //@synthesize bcovVideos=_bcovVideos - In the implementation block
@property (nonatomic,retain) AVPlayerLayer * playerLayer;                                                                  //@synthesize playerLayer=_playerLayer - In the implementation block
@property (nonatomic,retain) SCOperaRemoteVideoSessionConsumer * sessionConsumer;                                          //@synthesize sessionConsumer=_sessionConsumer - In the implementation block
@property (nonatomic,retain) NSTimer * controlsFadeTimer;                                                                  //@synthesize controlsFadeTimer=_controlsFadeTimer - In the implementation block
@property (assign,nonatomic) BOOL shouldAutoPlayWhenReady;                                                                 //@synthesize shouldAutoPlayWhenReady=_shouldAutoPlayWhenReady - In the implementation block
@property (assign,nonatomic) long long virtualOrientation;                                                                 //@synthesize virtualOrientation=_virtualOrientation - In the implementation block
@property (nonatomic,retain) SCOperaRemoteVideoState * state;                                                              //@synthesize state=_state - In the implementation block
@property (nonatomic,retain) FBKVOController * observeController;                                                          //@synthesize observeController=_observeController - In the implementation block
@property (nonatomic,retain) NSObject*<BCOVPlaybackController> bcovController;                                             //@synthesize bcovController=_bcovController - In the implementation block
@property (nonatomic,copy) NSString * deviceOrientationManagerToken;                                                       //@synthesize deviceOrientationManagerToken=_deviceOrientationManagerToken - In the implementation block
@property (assign,nonatomic) BOOL isReady;                                                                                 //@synthesize isReady=_isReady - In the implementation block
@property (assign,nonatomic) BOOL isSeeking;                                                                               //@synthesize isSeeking=_isSeeking - In the implementation block
@property (assign,nonatomic,__weak) id<SCOperaPageableViewControllerDelegate> pageableViewControllerDelegate;              //@synthesize pageableViewControllerDelegate=_pageableViewControllerDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<SCOperaRemoteVideoControllerDelegate> delegate;                                     //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSString * videoID;                                                                         //@synthesize videoID=_videoID - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)remoteVideoViewControllerWithConfiguration:(id)arg1 eventAnnouncer:(id)arg2 isInline:(BOOL)arg3 ;
-(void)playbackController:(id)arg1 didAdvanceToPlaybackSession:(id)arg2 ;
-(void)playbackController:(id)arg1 playbackSession:(id)arg2 didReceiveLifecycleEvent:(id)arg3 ;
-(void)playbackController:(id)arg1 playbackSession:(id)arg2 didProgressTo:(double)arg3 ;
-(void)didUpdateRotation:(double)arg1 translation:(CGVector)arg2 ;
-(void)setVirtualOrientation:(long long)arg1 ;
-(long long)virtualOrientation;
-(void)viewDidFullyAppear;
-(void)viewDidFullyDisappear;
-(void)state:(id)arg1 didChangeTag:(long long)arg2 ;
-(id)initWithVideoId:(id)arg1 configuration:(id)arg2 eventAnnouncer:(id)arg3 eventContext:(id)arg4 isInline:(BOOL)arg5 firstFrameImageKey:(id)arg6 primaryColor:(id)arg7 imageProvider:(id)arg8 ;
-(id)initWithVideoId:(id)arg1 configuration:(id)arg2 eventAnnouncer:(id)arg3 eventContext:(id)arg4 isInline:(BOOL)arg5 firstFrameImageKey:(id)arg6 primaryColor:(id)arg7 bcovController:(id)arg8 state:(id)arg9 observeController:(id)arg10 imageProvider:(id)arg11 ;
-(void)addNotificationObservers;
-(void)startListeningForMotionEvent;
-(void)stopListeningForMotionEvent;
-(void)removeNotificationObservers;
-(void)playerItemFailedToPlayToEndTime:(id)arg1 ;
-(void)_updateCaptionBasedOnCurrentDisplayStrategy;
-(void)setDeviceOrientationManagerToken:(NSString *)arg1 ;
-(void)rotateVideoBasedOnOrientation;
-(void)fadeOutControls;
-(void)setShouldAutoPlayWhenReady:(BOOL)arg1 ;
-(void)updateWithVideoId:(id)arg1 eventContext:(id)arg2 firstFrameImageKey:(id)arg3 primaryColor:(id)arg4 videoRotationEnabled:(BOOL)arg5 showActionMenuButtonEnabled:(BOOL)arg6 imageProvider:(id)arg7 ;
-(id)_imageSnapshotFromPlayer;
-(void)_sendEventDidChangeConfiguration;
-(double)totalVideoDurationSeconds;
-(long long)numberOfBytesTransferredToBCOVPlaybackController;
-(void)_sendEventBrightcoveError:(id)arg1 AVFoundationError:(id)arg2 URI:(id)arg3 ;
-(void)fadeInControls;
-(void)toggleCaption:(BOOL)arg1 ;
-(void)updateCaptionStyle;
-(void)setTargetOrientation:(long long)arg1 andRotateView:(BOOL)arg2 ;
-(void)setupControlsFadeTimer;
-(void)rotateVideoWithTransform:(CGAffineTransform)arg1 ;
-(NSTimer *)controlsFadeTimer;
-(void)setControlsFadeTimer:(NSTimer *)arg1 ;
-(void)configureRemoteVideo;
-(void)setBcovVideosFromProperties:(id)arg1 ;
-(void)setBcovVideos:(NSArray *)arg1 ;
-(void)startBufferingVideo;
-(void)terminateVideo;
-(NSArray *)bcovVideos;
-(void)setProgress:(double)arg1 forIndex:(unsigned long long)arg2 ;
-(void)subtitleLayerVideoSizeChanged;
-(void)updateSubtitleLayerScreenSize;
-(void)invalidateControlsFadeTimerAndShowControls;
-(BOOL)shouldAutoPlayWhenReady;
-(void)_addVideoOutput;
-(void)seekToTime:(double)arg1 tolerance:(SCD_Struct_LS191)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)setIsSeeking:(BOOL)arg1 ;
-(void)_addPlaybackBufferObserverForItem:(id)arg1 ;
-(void)currentItemDidChange:(id)arg1 ;
-(void)_removeVideoOut:(id)arg1 ;
-(void)playerItemBufferBecameEmpty:(id)arg1 ;
-(void)playerItemLikelyToKeepUp:(id)arg1 ;
-(id<SCOperaPageableViewControllerDelegate>)pageableViewControllerDelegate;
-(void)_updateLayerViewTransformWithRotation:(double)arg1 ;
-(void)_updateRollDegreeWithCurrentRotation:(double)arg1 ;
-(void)videoControlsView:(id)arg1 didToggleVolume:(BOOL)arg2 ;
-(void)videoControlsView:(id)arg1 didToggleCaption:(BOOL)arg2 ;
-(void)videoControlsView:(id)arg1 didToggleRotateLeft:(BOOL)arg2 ;
-(void)videoControlsView:(id)arg1 didTogglePlay:(BOOL)arg2 ;
-(void)videoControlsViewDidBeginSeeking:(id)arg1 ;
-(void)videoControlsView:(id)arg1 didEndSeekingWithPlayButtonToggled:(BOOL)arg2 ;
-(void)videoControlsViewDidPressExit:(id)arg1 ;
-(void)videoControlsView:(id)arg1 didSeekToTime:(double)arg2 ;
-(void)videoControlsViewDidPressShowActionMenuButton:(id)arg1 ;
-(void)didFetchVideoPropertiesWithSuccess:(BOOL)arg1 ;
-(void)remoteVideoProxyDidAttemptStartup;
-(void)viewWillFullyAppear;
-(void)viewWillFullyAppearAtTime:(SCD_Struct_LS191)arg1 ;
-(void)cancelViewWillFullyAppearAtTime;
-(void)neighborViewDidFullyAppearWithCurrentViewRelativePosition:(unsigned long long)arg1 ;
-(void)viewDidPartiallyAppearWithCurrentViewRelativePosition:(unsigned long long)arg1 ;
-(BOOL)mediaIsBeingPreparedForDisplay;
-(long long)pageabilityForRelativePosition:(unsigned long long)arg1 ;
-(void)setPageableViewControllerDelegate:(id<SCOperaPageableViewControllerDelegate>)arg1 ;
-(BOOL)canHandleRoundCorner;
-(void)didUpdateBottomPageViewProperties:(id)arg1 ;
-(void)setPausedForAttachment:(BOOL)arg1 ;
-(BOOL)isPausedForAttachment;
-(CGRect)mediaViewFrame;
-(double)mediaHeightToWidthAspectRatio;
-(void)loadVideo;
-(BOOL)isShowingVideoFrame;
-(id)snapshotFromPlayer;
-(id)imageSnapshot;
-(void)updateWithScreenshot:(id)arg1 ;
-(void)didSetFullscreen:(BOOL)arg1 ;
-(void)setResumeVideoPosition:(double)arg1 ;
-(SCOperaRemoteVideoSessionConsumer *)sessionConsumer;
-(void)setSessionConsumer:(SCOperaRemoteVideoSessionConsumer *)arg1 ;
-(FBKVOController *)observeController;
-(void)setObserveController:(FBKVOController *)arg1 ;
-(NSObject*<BCOVPlaybackController>)bcovController;
-(void)setBcovController:(NSObject*<BCOVPlaybackController>)arg1 ;
-(NSString *)deviceOrientationManagerToken;
-(void)setDelegate:(id<SCOperaRemoteVideoControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<SCOperaRemoteVideoControllerDelegate>)delegate;
-(SCOperaRemoteVideoState *)state;
-(SCD_Struct_LS191)duration;
-(void)setState:(SCOperaRemoteVideoState *)arg1 ;
-(BOOL)prefersStatusBarHidden;
-(unsigned long long)supportedInterfaceOrientations;
-(void)didReceiveMemoryWarning;
-(void)stop;
-(void)loadView;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)viewWillDisappear:(BOOL)arg1 ;
-(void)viewDidDisappear:(BOOL)arg1 ;
-(void)start;
-(long long)preferredInterfaceOrientationForPresentation;
-(void)didRotateFromInterfaceOrientation:(long long)arg1 ;
-(void)setVolume:(double)arg1 ;
-(void)teardown;
-(void)resume;
-(SCD_Struct_LS191)currentTime;
-(void)pause;
-(BOOL)isPaused;
-(void)didTap;
-(BOOL)isSeeking;
-(CGSize)videoSize;
-(id)player;
-(void)seekToTime:(double)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)pauseVideo;
-(void)playVideo:(BOOL)arg1 ;
-(void)setIsReady:(BOOL)arg1 ;
-(void)showActivityIndicator:(BOOL)arg1 ;
-(id)videoParameters;
-(AVPlayerLayer *)playerLayer;
-(void)setPlayerLayer:(AVPlayerLayer *)arg1 ;
-(BOOL)isOverlay;
-(NSString *)videoID;
-(BOOL)isReady;
@end

