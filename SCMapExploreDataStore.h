/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:40 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCFriendLocationsListener.h>

@class SCUserSession, SCQueuePerformer, SCMapExploreDataStoreListenerAnnouncer, SCMapExplorerStatus, NSMutableSet, NSSet, NSOrderedSet, SCMapExplorerMyStatus, NSDate, NSString;

@interface SCMapExploreDataStore : NSObject <SCFriendLocationsListener> {

	SCUserSession* _userSession;
	SCQueuePerformer* _performer;
	SCMapExploreDataStoreListenerAnnouncer* _listenerAnnouncer;
	SCMapExplorerStatus* _mostRecentlyViewedStatus;
	NSMutableSet* _pendingViewedStatuses;
	NSSet* _viewedStatusesToSync;
	long long _numFailedSyncAttempts;
	long long _numFailedDeleteAttempts;
	BOOL _syncingViews;
	BOOL _loadingStatuses;
	BOOL _loadingMyStatus;
	NSOrderedSet* _statuses;
	SCMapExplorerMyStatus* _myStatus;
	NSDate* _lastSuccessfulStatusesLoadDate;
	NSDate* _lastSuccessfulMyStatusLoadDate;

}

@property (getter=isSyncingViews) BOOL syncingViews;                                        //@synthesize syncingViews=_syncingViews - In the implementation block
@property (getter=isLoadingStatuses) BOOL loadingStatuses;                                  //@synthesize loadingStatuses=_loadingStatuses - In the implementation block
@property (getter=isLoadingMyStatus) BOOL loadingMyStatus;                                  //@synthesize loadingMyStatus=_loadingMyStatus - In the implementation block
@property (retain) NSDate * lastSuccessfulStatusesLoadDate;                                 //@synthesize lastSuccessfulStatusesLoadDate=_lastSuccessfulStatusesLoadDate - In the implementation block
@property (retain) NSDate * lastSuccessfulMyStatusLoadDate;                                 //@synthesize lastSuccessfulMyStatusLoadDate=_lastSuccessfulMyStatusLoadDate - In the implementation block
@property (nonatomic,readonly) NSOrderedSet * statuses;                                     //@synthesize statuses=_statuses - In the implementation block
@property (nonatomic,readonly) SCMapExplorerMyStatus * myStatus;                            //@synthesize myStatus=_myStatus - In the implementation block
@property (nonatomic,readonly) SCMapExplorerStatus * mostRecentlyViewedStatus; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)_isLoadDate:(id)arg1 olderThan:(double)arg2 ;
+(id)_mockMapCallout;
+(id)_mockStatusesFromFriendLocations:(id)arg1 ;
+(id)_mockMyStatus;
+(BOOL)_isStatusValid:(id)arg1 userSession:(id)arg2 ;
+(id)_mockDisplayTextForPeople:(id)arg1 ;
-(id)initWithUserSession:(id)arg1 ;
-(void)friendLocationsDidChange:(id)arg1 affectedUserIds:(id)arg2 ;
-(void)reloadIfOlderThan:(double)arg1 ;
-(void)didUpdateLocationPreferences:(id)arg1 ;
-(NSDate *)lastSuccessfulStatusesLoadDate;
-(NSDate *)lastSuccessfulMyStatusLoadDate;
-(void)reloadStatuses;
-(void)reloadMyStatus;
-(BOOL)isLoadingStatuses;
-(void)_loadStatuses;
-(BOOL)isLoadingMyStatus;
-(void)_loadMyStatus;
-(void)reloadStatusesIfOlderThan:(double)arg1 ;
-(void)reloadMyStatusIfOlderThan:(double)arg1 ;
-(void)_deleteMyStatus:(id)arg1 ;
-(BOOL)isStatusViewed:(id)arg1 ;
-(BOOL)isSyncingViews;
-(void)_syncPendingViewedStatusesWithServer;
-(void)setLoadingStatuses:(BOOL)arg1 ;
-(void)_didFetchStatuses:(id)arg1 error:(id)arg2 ;
-(void)setLoadingMyStatus:(BOOL)arg1 ;
-(void)_didFetchMyStatus:(id)arg1 error:(id)arg2 ;
-(void)_prefetchStickersForStatus:(id)arg1 dispatchGroup:(id)arg2 ;
-(void)_fetchStoriesAsync;
-(void)setLastSuccessfulStatusesLoadDate:(NSDate *)arg1 ;
-(void)setLastSuccessfulMyStatusLoadDate:(NSDate *)arg1 ;
-(void)_didDeleteMyStatus:(id)arg1 newMyStatus:(id)arg2 error:(id)arg3 ;
-(void)setSyncingViews:(BOOL)arg1 ;
-(BOOL)hasLoadedStatusesOnce;
-(BOOL)hasLoadedMyStatusOnce;
-(void)deleteMyStatus:(id)arg1 ;
-(BOOL)hasUnviewedStatuses;
-(unsigned long long)numberOfUnviewedStatuses;
-(BOOL)hasUnviewedMyStatus;
-(id)firstUnviewedCallout;
-(void)markStatusViewed:(id)arg1 ;
-(SCMapExplorerStatus *)mostRecentlyViewedStatus;
-(void)updateServerWithViewedStatuses;
-(void)_clearViewedState;
-(void)_resetTooltipState;
-(NSOrderedSet *)statuses;
-(void)dealloc;
-(void)reload;
-(SCMapExplorerMyStatus *)myStatus;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(void)warmup;
@end

