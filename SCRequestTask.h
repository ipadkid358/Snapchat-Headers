/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:07 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SCRequestAuthenticator;
#import <Snapchat/Snapchat-Structs.h>
@class SCRequest, SCRequestTaskSchedulingInfo, SCRequestTaskLogger;

@interface SCRequestTask : NSObject {

	BOOL _isPaused;
	BOOL _shouldRetry;
	BOOL _isRunning;
	BOOL _success;
	BOOL _forcedRetry;
	BOOL _isCompleteTaskExecuted;
	id<SCRequestAuthenticator> _authenticator;
	SCRequest* _request;
	SCRequestTaskSchedulingInfo* _schedulingInfo;
	SCRequestTaskLogger* _logger;
	unsigned long long _numOfRequestAttempts;
	unsigned long long _numOfRequestAttemptsCancelled;
	unsigned long long _numOfRequestAttemptsPaused;
	unsigned long long _numHTTPRequestCompleted;

}

@property (nonatomic,retain) SCRequestTaskLogger * logger;                                    //@synthesize logger=_logger - In the implementation block
@property (nonatomic,readonly) unsigned long long numOfRequestAttempts;                       //@synthesize numOfRequestAttempts=_numOfRequestAttempts - In the implementation block
@property (nonatomic,readonly) unsigned long long numOfRequestAttemptsCancelled;              //@synthesize numOfRequestAttemptsCancelled=_numOfRequestAttemptsCancelled - In the implementation block
@property (assign,nonatomic) unsigned long long numOfRequestAttemptsPaused;                   //@synthesize numOfRequestAttemptsPaused=_numOfRequestAttemptsPaused - In the implementation block
@property (assign,nonatomic) unsigned long long numHTTPRequestCompleted;                      //@synthesize numHTTPRequestCompleted=_numHTTPRequestCompleted - In the implementation block
@property (nonatomic,readonly) BOOL success;                                                  //@synthesize success=_success - In the implementation block
@property (nonatomic,readonly) BOOL forcedRetry;                                              //@synthesize forcedRetry=_forcedRetry - In the implementation block
@property (assign,nonatomic) BOOL isRunning;                                                  //@synthesize isRunning=_isRunning - In the implementation block
@property (assign,nonatomic) BOOL isCompleteTaskExecuted;                                     //@synthesize isCompleteTaskExecuted=_isCompleteTaskExecuted - In the implementation block
@property (nonatomic,__weak,readonly) id<SCRequestAuthenticator> authenticator;               //@synthesize authenticator=_authenticator - In the implementation block
@property (nonatomic,readonly) SCRequest * request;                                           //@synthesize request=_request - In the implementation block
@property (nonatomic,retain) SCRequestTaskSchedulingInfo * schedulingInfo;                    //@synthesize schedulingInfo=_schedulingInfo - In the implementation block
@property (nonatomic,readonly) BOOL shouldRetry;                                              //@synthesize shouldRetry=_shouldRetry - In the implementation block
+(id)startupInfoProvider;
+(void)setStartupInfoProvider:(id)arg1 ;
+(id)createTaskWithRequest:(id)arg1 authenticator:(id)arg2 traceFile:(SCNetworkTraceFileStructRef)arg3 networkInterceptors:(id)arg4 successQueue:(id)arg5 failureQueue:(id)arg6 successBlock:(/*^block*/id)arg7 failureBlock:(/*^block*/id)arg8 ;
+(id)createTaskWithRequest:(id)arg1 authenticator:(id)arg2 traceFile:(SCNetworkTraceFileStructRef)arg3 networkInterceptors:(id)arg4 completionQueue:(id)arg5 completionBlock:(/*^block*/id)arg6 ;
+(id)createTaskWithRequest:(id)arg1 authenticator:(id)arg2 traceFile:(SCNetworkTraceFileStructRef)arg3 networkInterceptors:(id)arg4 progressiveUpdateQueue:(id)arg5 progressiveUpdateBlock:(/*^block*/id)arg6 ;
-(BOOL)isResumable;
-(id)initWithRequest:(id)arg1 authenticator:(id)arg2 traceFile:(SCNetworkTraceFileStructRef)arg3 ;
-(BOOL)isCompleteTaskExecuted;
-(unsigned long long)numHTTPRequestCompleted;
-(void)setNumHTTPRequestCompleted:(unsigned long long)arg1 ;
-(unsigned long long)numOfRequestAttemptsPaused;
-(void)checkInterceptors:(id)arg1 withRequest:(id)arg2 response:(id)arg3 data:(id)arg4 error:(id)arg5 ;
-(void)setIsCompleteTaskExecuted:(BOOL)arg1 ;
-(void)updateTaskWithTask:(id)arg1 ;
-(void)progressiveUpdate;
-(BOOL)shouldRetryRequestWithError:(id)arg1 response:(id)arg2 ;
-(/*^block*/id)completeTask;
-(void)cancelWithForcedRetryIfRunning:(BOOL)arg1 ;
-(void)_cancelRunningTaskWithCompletionHandler:(/*^block*/id)arg1 forcedRetry:(BOOL)arg2 ;
-(void)_completeCanceledTaskWithCompletionHandler:(/*^block*/id)arg1 ;
-(BOOL)_hasRetryAttemptsLeft;
-(BOOL)_isErrorRetriableWithError:(id)arg1 response:(id)arg2 ;
-(id)_eligibleErrorCodesForRetry;
-(long long)_usedValidRequestAttemptCount;
-(void)runWithCompletionQueue:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)updateTaskURLSessionPriority:(float)arg1 ;
-(void)didEnqueueTask;
-(void)didSubmitTask;
-(void)didInitiateTaskByUser;
-(SCRequestTaskSchedulingInfo *)schedulingInfo;
-(void)setSchedulingInfo:(SCRequestTaskSchedulingInfo *)arg1 ;
-(unsigned long long)numOfRequestAttempts;
-(unsigned long long)numOfRequestAttemptsCancelled;
-(void)setNumOfRequestAttemptsPaused:(unsigned long long)arg1 ;
-(BOOL)forcedRetry;
-(BOOL)isDownloadMediaRequestTaskWithTrackingId;
-(void)cancel;
-(SCRequest *)request;
-(BOOL)isRunning;
-(void)pause;
-(void)setIsRunning:(BOOL)arg1 ;
-(void)cancelByProducingResumeData:(/*^block*/id)arg1 ;
-(BOOL)success;
-(BOOL)shouldRetry;
-(SCRequestTaskLogger *)logger;
-(void)setLogger:(SCRequestTaskLogger *)arg1 ;
-(id<SCRequestAuthenticator>)authenticator;
@end

