/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:41 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCTimeProfilable.h>
#import <libobjc.A.dylib/NSCoding.h>
#import <Snapchat/SCFriendManager.h>

@class SCAsyncDecoder, NSRecursiveLock, SCFriendProfileCollection, FriendsView, SuggestedFriendsView, NSMutableDictionary, NSMutableArray, NSMutableSet, SCRecentFriends, NSArray, NSString, SCQueuePerformer, SCFriendEventListenerAnnouncer;

@interface Friends : NSObject <SCTimeProfilable, NSCoding, SCFriendManager> {

	SCAsyncDecoder* _asyncDecoder;
	NSRecursiveLock* _encodingLock;
	BOOL _encodingForAsyncDecode;
	BOOL _notifyFriendsBitmojiAvatarChanged;
	BOOL _unreadAddedFriendsChanged;
	SCFriendProfileCollection* _friendProfileCollection;
	FriendsView* _friendsSnapshot;
	SuggestedFriendsView* _suggestedFriendsSnapshot;
	NSMutableDictionary* _allFriends;
	NSMutableDictionary* _allFriendsByUserId;
	NSMutableArray* _bestFriendsProperty;
	NSMutableArray* _blockedFriends;
	NSMutableSet* _blockedFriendsNameSet;
	NSMutableDictionary* _suggestedFriendsInfo;
	NSMutableDictionary* _suggestedFriendDisplayInfo;
	NSMutableArray* _friendsWhoAddedYou;
	NSMutableDictionary* _friendsWhoAddedYouDictionary;
	NSMutableArray* _nonexistentFriends;
	SCRecentFriends* _recentFriends;
	NSMutableArray* _sortedFriendsAndPendings;
	NSMutableArray* _sortedFriendsAndPendingsKeys;
	long long _friendFriendCount;
	long long _friendTypeFriendCount;
	long long _friendFollowingPendingFriendCount;
	NSArray* _unreadAddedFriends;
	NSString* _deltaFriendToken;
	SCQueuePerformer* _performer;
	SCFriendEventListenerAnnouncer* _announcer;

}

@property (retain) FriendsView * friendsSnapshot;                                              //@synthesize friendsSnapshot=_friendsSnapshot - In the implementation block
@property (retain) SuggestedFriendsView * suggestedFriendsSnapshot;                            //@synthesize suggestedFriendsSnapshot=_suggestedFriendsSnapshot - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * allFriends;                                 //@synthesize allFriends=_allFriends - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * allFriendsByUserId;                         //@synthesize allFriendsByUserId=_allFriendsByUserId - In the implementation block
@property (nonatomic,retain) NSMutableArray * bestFriendsProperty;                             //@synthesize bestFriendsProperty=_bestFriendsProperty - In the implementation block
@property (nonatomic,retain) NSMutableArray * blockedFriends;                                  //@synthesize blockedFriends=_blockedFriends - In the implementation block
@property (nonatomic,retain) NSMutableSet * blockedFriendsNameSet;                             //@synthesize blockedFriendsNameSet=_blockedFriendsNameSet - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * suggestedFriendsInfo;                       //@synthesize suggestedFriendsInfo=_suggestedFriendsInfo - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * suggestedFriendDisplayInfo;                 //@synthesize suggestedFriendDisplayInfo=_suggestedFriendDisplayInfo - In the implementation block
@property (nonatomic,retain) NSMutableArray * friendsWhoAddedYou;                              //@synthesize friendsWhoAddedYou=_friendsWhoAddedYou - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * friendsWhoAddedYouDictionary;               //@synthesize friendsWhoAddedYouDictionary=_friendsWhoAddedYouDictionary - In the implementation block
@property (nonatomic,retain) NSMutableArray * nonexistentFriends;                              //@synthesize nonexistentFriends=_nonexistentFriends - In the implementation block
@property (nonatomic,retain) SCRecentFriends * recentFriends;                                  //@synthesize recentFriends=_recentFriends - In the implementation block
@property (nonatomic,retain) NSMutableArray * sortedFriendsAndPendings;                        //@synthesize sortedFriendsAndPendings=_sortedFriendsAndPendings - In the implementation block
@property (nonatomic,retain) NSMutableArray * sortedFriendsAndPendingsKeys;                    //@synthesize sortedFriendsAndPendingsKeys=_sortedFriendsAndPendingsKeys - In the implementation block
@property (assign,nonatomic) long long friendFriendCount;                                      //@synthesize friendFriendCount=_friendFriendCount - In the implementation block
@property (assign,nonatomic) long long friendTypeFriendCount;                                  //@synthesize friendTypeFriendCount=_friendTypeFriendCount - In the implementation block
@property (assign,nonatomic) long long friendFollowingPendingFriendCount;                      //@synthesize friendFollowingPendingFriendCount=_friendFollowingPendingFriendCount - In the implementation block
@property (nonatomic,retain) SCFriendProfileCollection * friendProfileCollection;              //@synthesize friendProfileCollection=_friendProfileCollection - In the implementation block
@property (assign,nonatomic) BOOL notifyFriendsBitmojiAvatarChanged;                           //@synthesize notifyFriendsBitmojiAvatarChanged=_notifyFriendsBitmojiAvatarChanged - In the implementation block
@property (assign,nonatomic) BOOL unreadAddedFriendsChanged;                                   //@synthesize unreadAddedFriendsChanged=_unreadAddedFriendsChanged - In the implementation block
@property (nonatomic,retain) NSArray * unreadAddedFriends;                                     //@synthesize unreadAddedFriends=_unreadAddedFriends - In the implementation block
@property (nonatomic,retain) NSString * deltaFriendToken;                                      //@synthesize deltaFriendToken=_deltaFriendToken - In the implementation block
@property (nonatomic,readonly) SCQueuePerformer * performer;                                   //@synthesize performer=_performer - In the implementation block
@property (nonatomic,readonly) SCFriendEventListenerAnnouncer * announcer;                     //@synthesize announcer=_announcer - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sortFriendsByDisplayName:(id)arg1 ;
+(void)suggestedFriendsDidChangeWithUserInfo:(id)arg1 ;
+(void)checkExistenceOfFriendUsername:(id)arg1 includePublicStory:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
+(id)recommendedFriendPredicate;
+(id)sortFriendsByRecommendationScoreDesc:(id)arg1 ;
+(void)searchForVerifiedUsersWithQuery:(id)arg1 userSession:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
+(void)checkExistenceOfFriendUsername:(id)arg1 includePublicStory:(BOOL)arg2 sojuCompletion:(/*^block*/id)arg3 ;
+(void)fetchScoreForFriend:(id)arg1 authenticator:(id)arg2 successQueue:(id)arg3 failureQueue:(id)arg4 completion:(/*^block*/id)arg5 ;
+(void)doSignUpSkipAddSnapchatterWithContext:(id)arg1 ;
+(void)sendRegistrationContactsSeen:(id)arg1 added:(id)arg2 userSession:(id)arg3 ;
+(id)sortOutOfContactsSuggestions:(id)arg1 withOrderedArray:(id)arg2 ;
+(void)findFriendsWithPhoneNumbers:(id)arg1 shouldRecommend:(BOOL)arg2 isFullSync:(BOOL)arg3 source:(id)arg4 authenticator:(id)arg5 successBlock:(/*^block*/id)arg6 failureBlock:(/*^block*/id)arg7 ;
+(void)fetchSyncedContactList:(id)arg1 SuccessBlock:(/*^block*/id)arg2 failureBlock:(/*^block*/id)arg3 ;
+(void)deleteAllContacts:(id)arg1 ;
+(void)showFriendingStatusDebugPopupWithAction:(id)arg1 friendUsername:(id)arg2 sourceType:(long long)arg3 context:(id)arg4 index:(id)arg5 suggestionToken:(id)arg6 ;
+(void)fetchFriendsListWithFriendsRequest:(id)arg1 queue:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)deleteFriendWithParameters:(id)arg1 queue:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)ignoreFriendRequest:(id)arg1 queue:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)addFriendBySource:(long long)arg1 friendUsername:(id)arg2 pageType:(long long)arg3 context:(id)arg4 queue:(id)arg5 successBlock:(/*^block*/id)arg6 failureBlock:(/*^block*/id)arg7 ;
+(void)setDisplayForFriendName:(id)arg1 friendId:(id)arg2 friendDisplay:(id)arg3 queue:(id)arg4 successBlock:(/*^block*/id)arg5 failureBlock:(/*^block*/id)arg6 ;
+(void)unblockFriendName:(id)arg1 friendId:(id)arg2 queue:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(void)doAdditionWithFriend:(id)arg1 context:(id)arg2 sourceType:(long long)arg3 queue:(id)arg4 successBlock:(/*^block*/id)arg5 failureBlock:(/*^block*/id)arg6 ;
+(void)doMultiAdditionSojuFriends:(id)arg1 context:(id)arg2 queue:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(void)doBlockOrReportFriendName:(id)arg1 friendId:(id)arg2 action:(id)arg3 blockReasonId:(id)arg4 queue:(id)arg5 successBlock:(/*^block*/id)arg6 failureBlock:(/*^block*/id)arg7 ;
+(void)muteFriendWithUserId:(id)arg1 queue:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)unmuteFriendWithUserId:(id)arg1 queue:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)_fetchSuggestedFriendsIfNecessary:(long long)arg1 queue:(id)arg2 queuePerformer:(id)arg3 ;
+(void)_findSuggestedFriends:(id)arg1 isNotificationPrefetch:(BOOL)arg2 queue:(id)arg3 queuePerformer:(id)arg4 completion:(/*^block*/id)arg5 ;
+(id)requestsSuggestedFriendContext;
+(void)_hideSuggestedFriend:(id)arg1 context:(id)arg2 queue:(id)arg3 queuePerformer:(id)arg4 completion:(/*^block*/id)arg5 ;
+(void)_hideSuggestedFriendUnitWithPlacement:(id)arg1 queue:(id)arg2 completion:(/*^block*/id)arg3 ;
+(void)_seenSuggestedFriends:(id)arg1 addedSuggestedFriends:(id)arg2 placement:(id)arg3 impressionId:(id)arg4 context:(id)arg5 pageType:(long long)arg6 queue:(id)arg7 queuePerformer:(id)arg8 completion:(/*^block*/id)arg9 ;
+(id)_constructSuggestedFriendResultsFromResponse:(id)arg1 ;
+(id)_constructSuggestedFriendDisplayResultsFromResponse:(id)arg1 ;
+(id)_updateFindSuggestedFriendsResultsTimestamps:(id)arg1 ;
+(void)_fetchSuggestedFriendsWithQueue:(id)arg1 isNotificationPrefetch:(BOOL)arg2 SuccessBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(id)_constructDisplayInformation:(id)arg1 ;
+(void)_seenSuggestedFriends:(id)arg1 addedSuggestedFriends:(id)arg2 placement:(id)arg3 impressionId:(id)arg4 queue:(id)arg5 successBlock:(/*^block*/id)arg6 failureBlock:(/*^block*/id)arg7 ;
+(void)_hideSuggestedFriend:(id)arg1 context:(id)arg2 queue:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(id)suggestedFriendsToSuggestedFriendCellInformationListJson:(id)arg1 ;
+(id)_createCellInformationList:(id)arg1 ;
+(id)_suggestedFriendCellInformationListToJson:(id)arg1 ;
+(id)_createCellInformation:(id)arg1 withCellIndex:(long long)arg2 ;
+(id)asyncDecodePath;
+(id)fetchSourceNames;
+(id)updateDictForAddingFriend:(id)arg1 ;
+(id)updateDictForRemovingFriend:(id)arg1 ;
+(void)logUnblockProfileEvent:(BOOL)arg1 unblockedFriend:(id)arg2 context:(id)arg3 ;
+(/*^block*/id)_displayNameComparator;
+(/*^block*/id)_recommendationScoreComparator;
+(BOOL)hasLeastOrderSectionKeyForFriend:(id)arg1 ;
+(int)context;
+(id)nameForType:(unsigned long long)arg1 ;
-(SCQueuePerformer *)performer;
-(SCFriendEventListenerAnnouncer *)announcer;
-(void)setPerformer:(SCQueuePerformer *)arg1 ;
-(id)friendsRequest;
-(id)userIdForUsername:(id)arg1 ;
-(BOOL)isFriendWithUser:(id)arg1 ;
-(BOOL)friendHasDisplayName:(id)arg1 ;
-(id)displayNameForUsername:(id)arg1 ;
-(BOOL)isUsernameBlocked:(id)arg1 ;
-(BOOL)isRecentlyAddedFriend:(id)arg1 ;
-(void)updateRecentsWithUsername:(id)arg1 timestamp:(id)arg2 ;
-(id)dateFriendAdded:(id)arg1 ;
-(id)dateFriendRequested:(id)arg1 ;
-(BOOL)isTodayTheBirthdayOfUsername:(id)arg1 ;
-(BOOL)isFriend:(id)arg1 ;
-(id)getFriendsWhoAddedYouArray;
-(id)getBlockedFriends;
-(BOOL)isFriendUsernameValid:(id)arg1 ;
-(BOOL)isFriendWhoAddedYou:(id)arg1 ;
-(id)suggestedFriendsFor:(unsigned long long)arg1 ;
-(void)addFriend:(id)arg1 context:(id)arg2 sourceType:(long long)arg3 fromQuickAction:(BOOL)arg4 pageType:(long long)arg5 completion:(/*^block*/id)arg6 ;
-(void)deleteFriend:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)hideSuggestedFriend:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)getAllFriendsExceptBlocked;
-(BOOL)hasBestFriends;
-(id)bestFriends;
-(id)friendForName:(id)arg1 ;
-(void)setDisplay:(id)arg1 forFriend:(id)arg2 context:(id)arg3 ;
-(void)blockFriend:(id)arg1 blockReasonId:(id)arg2 context:(id)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)isFriendCaseInsensitive:(id)arg1 ;
-(void)acceptFriendRequest:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)addMultiFriends:(id)arg1 context:(id)arg2 sourceType:(long long)arg3 pageType:(long long)arg4 callback:(/*^block*/id)arg5 ;
-(void)ignoreFriendRequest:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)addedFriendForFriend:(id)arg1 ;
-(void)setDisplay:(id)arg1 forAddedFriend:(id)arg2 context:(id)arg3 ;
-(id)addedFriendForName:(id)arg1 ;
-(void)updateMuteStateToIsMuted:(BOOL)arg1 forUsername:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
-(void)updateWithKeywordForFriend:(id)arg1 ;
-(id)getOrCreateTempFriendForName:(id)arg1 ;
-(void)generateInteractionEventsForStreakFriends;
-(id)getUnreadAddedFriends;
-(void)updateRecentsWithUsernames:(id)arg1 ;
-(id)displayNamesForUsernames:(id)arg1 ;
-(id)friendForUserId:(id)arg1 ;
-(id)getSortedFriendsAndPendingsWithFilterBlock:(/*^block*/id)arg1 ;
-(id)getSortedFriendsAndPendingsKeysWithFilterBlock:(/*^block*/id)arg1 ;
-(id)recentsWithGroups:(id)arg1 ;
-(id)getRecents;
-(BOOL)isTwoWayFriend:(id)arg1 ;
-(void)addFriend:(id)arg1 context:(id)arg2 sourceType:(long long)arg3 pageType:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)setDisplay:(id)arg1 forFriend:(id)arg2 context:(id)arg3 onComplete:(/*^block*/id)arg4 ;
-(void)unblockFriend:(id)arg1 context:(id)arg2 completion:(/*^block*/id)arg3 ;
-(SCFriendProfileCollection *)friendProfileCollection;
-(id)bestFriendsObjects;
-(BOOL)isTwoWayFriendWithUsername:(id)arg1 ;
-(id)displayNameForUserId:(id)arg1 ;
-(void)seenSuggestedFriends:(id)arg1 addedSuggestedFriends:(id)arg2 placement:(id)arg3 impressionId:(id)arg4 context:(id)arg5 pageType:(long long)arg6 completion:(/*^block*/id)arg7 ;
-(void)fetchFriendsList;
-(void)hideSuggestedFriendUnitWithPlacement:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)addMultiFriendsWithSourceType:(id)arg1 context:(id)arg2 pageType:(long long)arg3 callback:(/*^block*/id)arg4 ;
-(NSMutableDictionary *)allFriends;
-(long long)getFriendTypeFriendCount;
-(void)_buildAllFriends;
-(id)getSortedFriendsAndPendings;
-(id)getAllFriendsExceptBestFriendsAndTeamSnapchat;
-(id)getAllFriends;
-(void)doSignUpSkipAddSnapchatterWithContext:(id)arg1 ;
-(long long)getFriendFollowingPendingFriendCount;
-(void)fetchFriendsListWithCompletion:(/*^block*/id)arg1 triggerType:(long long)arg2 source:(unsigned long long)arg3 ;
-(void)updateWithSoju:(id)arg1 source:(unsigned long long)arg2 triggerType:(long long)arg3 ;
-(id)getSortedFriendsAndPendingsKeysWithoutFriends:(id)arg1 ;
-(id)getSortedFriendsAndPendingsWithoutFriends:(id)arg1 ;
-(void)_promoteSuggestedFriendToTopForAddFriendsFooterPage:(id)arg1 ;
-(void)_takeSuggestedFriendsSnapshot;
-(NSMutableDictionary *)suggestedFriendDisplayInfo;
-(SuggestedFriendsView *)suggestedFriendsSnapshot;
-(id)_generateSuggestedFriendsWithSize:(long long)arg1 ;
-(unsigned long long)_getSuggestionNumLimitForPlacement:(unsigned long long)arg1 ;
-(NSMutableDictionary *)suggestedFriendsInfo;
-(void)_addSuggestedFriendAtBeginingForAllQuickAddPages:(id)arg1 displayInfo:(id)arg2 userId:(id)arg3 ;
-(void)_removeSuggestedFriendFromDisplayInfo:(id)arg1 withFriendId:(id)arg2 ;
-(void)_updateSuggestedFriends:(id)arg1 suggestedFriendDisplayInfo:(id)arg2 ;
-(void)setSuggestedFriendsInfo:(NSMutableDictionary *)arg1 ;
-(void)setSuggestedFriendDisplayInfo:(NSMutableDictionary *)arg1 ;
-(void)setSuggestedFriendsSnapshot:(SuggestedFriendsView *)arg1 ;
-(void)_removeSuggestedFriendWithUserId:(id)arg1 ;
-(void)fetchSuggestedFriendsIfNecessary:(long long)arg1 ;
-(void)findSuggestedFriends:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)prefetchSuggestedFriendsForNotification:(/*^block*/id)arg1 ;
-(void)promoteSuggestionsToTopOfAddFriendsFooter:(id)arg1 ;
-(BOOL)isSuggestedFriendsAvailable:(id)arg1 ;
-(void)addNewContactAsSuggestedFriend:(id)arg1 ;
-(void)clearSuggestedFriend;
-(void)setAllFriends:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)allFriendsByUserId;
-(void)setAllFriendsByUserId:(NSMutableDictionary *)arg1 ;
-(NSMutableArray *)bestFriendsProperty;
-(NSMutableArray *)blockedFriends;
-(void)setBlockedFriends:(NSMutableArray *)arg1 ;
-(NSMutableSet *)blockedFriendsNameSet;
-(void)setBlockedFriendsNameSet:(NSMutableSet *)arg1 ;
-(NSMutableArray *)friendsWhoAddedYou;
-(void)setFriendsWhoAddedYou:(NSMutableArray *)arg1 ;
-(NSMutableDictionary *)friendsWhoAddedYouDictionary;
-(void)setFriendsWhoAddedYouDictionary:(NSMutableDictionary *)arg1 ;
-(NSMutableArray *)nonexistentFriends;
-(void)setNonexistentFriends:(NSMutableArray *)arg1 ;
-(NSMutableArray *)sortedFriendsAndPendings;
-(void)setSortedFriendsAndPendings:(NSMutableArray *)arg1 ;
-(NSMutableArray *)sortedFriendsAndPendingsKeys;
-(void)setSortedFriendsAndPendingsKeys:(NSMutableArray *)arg1 ;
-(long long)friendFriendCount;
-(void)setFriendFriendCount:(long long)arg1 ;
-(long long)friendTypeFriendCount;
-(void)setFriendTypeFriendCount:(long long)arg1 ;
-(long long)friendFollowingPendingFriendCount;
-(void)setFriendFollowingPendingFriendCount:(long long)arg1 ;
-(NSString *)deltaFriendToken;
-(void)setDeltaFriendToken:(NSString *)arg1 ;
-(NSArray *)unreadAddedFriends;
-(void)setUnreadAddedFriends:(NSArray *)arg1 ;
-(void)setBestFriendsProperty:(NSMutableArray *)arg1 ;
-(void)setFriendProfileCollection:(SCFriendProfileCollection *)arg1 ;
-(void)setRecentFriends:(SCRecentFriends *)arg1 ;
-(void)setFriendsSnapshot:(FriendsView *)arg1 ;
-(SCRecentFriends *)recentFriends;
-(FriendsView *)friendsSnapshot;
-(void)ensureNonNilObjectsWithCoder:(id)arg1 ;
-(void)putFriend:(id)arg1 ;
-(void)resetFriendCount;
-(void)notifyFriendsDidChangeWithUserInfo:(id)arg1 ;
-(BOOL)notifyFriendsBitmojiAvatarChanged;
-(void)setNotifyFriendsBitmojiAvatarChanged:(BOOL)arg1 ;
-(BOOL)unreadAddedFriendsChanged;
-(void)_notifyUnreadAddedFriendsDidChange;
-(void)setUnreadAddedFriendsChanged:(BOOL)arg1 ;
-(void)_generateInteractionEventsForFriendsWithTriggerType:(long long)arg1 ;
-(void)_updateWithSoju:(id)arg1 completion:(/*^block*/id)arg2 source:(unsigned long long)arg3 triggerType:(long long)arg4 ;
-(void)updateFriendsWithFriends:(id)arg1 withSyncType:(long long)arg2 ;
-(void)_updateAddedFriendsWithAddedFriends:(id)arg1 ;
-(void)_updateUnreadAddedFriends;
-(void)_updateFriendmojiDictIfNecessary:(id)arg1 readOnlyDict:(id)arg2 ;
-(void)_takeFriendsSnapshot;
-(void)notifyFriendsDidChange;
-(void)_notifyFriendsDeltaDidArrive:(id)arg1 source:(unsigned long long)arg2 ;
-(void)_announceOutgoingFriendsDidUpdate:(id)arg1 updateType:(unsigned long long)arg2 context:(id)arg3 ;
-(id)addedFriendsForNames:(id)arg1 ;
-(id)getAllMutualFriends;
-(id)getFriendsListFriends;
-(id)getAllFriendNames;
-(id)_getAllFriendsByFriendType:(long long)arg1 ;
-(unsigned long long)pendingSnapsCountForUsername:(id)arg1 ;
-(id)updateFriendsWithFriend:(id)arg1 ;
-(void)_generateInteractionEventsForFriends:(id)arg1 emptyFeedIds:(id)arg2 triggerType:(long long)arg3 ;
-(void)notifyFriendAddedOrRemovedWithInfo:(id)arg1 ;
-(void)addFriendBySource:(long long)arg1 friendUsername:(id)arg2 pageType:(long long)arg3 context:(id)arg4 ;
-(void)_doFriendAddition:(id)arg1 context:(id)arg2 sourceType:(long long)arg3 completion:(/*^block*/id)arg4 showErrMsgOnFailure:(BOOL)arg5 ;
-(id)getSojuFriendForAddition:(id)arg1 sourceType:(long long)arg2 ;
-(void)doFriendsMultiAddition:(id)arg1 index:(long long)arg2 usernameToOldFriendsMap:(id)arg3 context:(id)arg4 pageType:(long long)arg5 callback:(/*^block*/id)arg6 ;
-(void)updateWithFriendAdditionOnSuccess:(id)arg1 friendName:(id)arg2 context:(id)arg3 ;
-(void)updateWithOldFriendOnFailure:(id)arg1 friendName:(id)arg2 error:(id)arg3 ;
-(id)removeFriendForName:(id)arg1 ;
-(BOOL)pendingSnapsExistForUsername:(id)arg1 ;
-(void)deleteFriend:(id)arg1 context:(id)arg2 parameters:(id)arg3 errorMessage:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)notifyUserDisplayNameDidChange;
-(void)doBlockOrReport:(id)arg1 action:(id)arg2 blockReasonId:(id)arg3 context:(id)arg4 errorText:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)notifyFriendsDidChangeWithActionType:(id)arg1 ;
-(id)updateFriend:(id)arg1 withFriend:(id)arg2 ;
-(void)_checkIfBitmojiAvatarChanged:(id)arg1 withUpdate:(id)arg2 ;
-(void)_orderAddedFriends;
-(id)_friendsRequestSinceTime:(id)arg1 fromAddedFriends:(id)arg2 ;
-(id)getRecentlyAdded;
-(BOOL)shouldIncludeFriendWhoAddedMe:(id)arg1 ;
-(id)_recentDateForGroupOrFriend:(id)arg1 recentFriends:(id)arg2 ;
-(void)addFriendToBlocked:(id)arg1 ;
-(void)removeFriendFromSortedFriendsAndPendings:(id)arg1 ;
-(id)avatarForUsername:(id)arg1 userSession:(id)arg2 ;
-(id)fullyInitialized;
-(void)fetchAsyncOnQueue:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)updateWithDictionary:(id)arg1 source:(unsigned long long)arg2 ;
-(void)updateRecentsWithChats:(id)arg1 ;
-(id)getBlockedStoryFriends;
-(id)getSortedFriendsAndPendingsKeys;
-(id)getAllFriendDisplayNames;
-(BOOL)isValidFriendName:(id)arg1 ;
-(void)addFriendByName:(id)arg1 pageType:(long long)arg2 context:(id)arg3 ;
-(void)updateStoryPrivacyWithFriendsToBlock:(id)arg1 ;
-(void)updateStoryPrivacyWithFriend:(id)arg1 setBlocked:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)updateUnreadAddedFriends;
-(id)friendsRequestSinceTime:(id)arg1 ;
-(id)friendsForNames:(id)arg1 ;
-(void)takeFriendsSnapshot;
-(id)init;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)clear;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(id)contactForPhoneNumber:(id)arg1 ;
-(long long)getCount;
@end

