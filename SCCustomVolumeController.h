/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:17 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCAudioSessionListener.h>

@protocol SCCustomVolumeControllerDelegate;
@class SCAudioConfiguration, SCScopedAccess, NSString, SCCustomVolumeView, NSHashTable, UIView;

@interface SCCustomVolumeController : NSObject <SCAudioSessionListener> {

	SCAudioConfiguration* _audioConfiguration;
	BOOL _fullscreen;
	BOOL _ignoreMuteOverride;
	SCScopedAccess* _scopedMutableAudioSession;
	BOOL _ignoreNextVolumeChange;
	BOOL _shouldShowView;
	id<SCCustomVolumeControllerDelegate> _delegate;
	NSString* _audioSessionToken;
	double _currentVolume;
	long long _virtualOrientation;
	SCCustomVolumeView* _volumeView;
	NSHashTable* _overridingObjects;
	UIView* _view;

}

@property (nonatomic,retain) NSString * audioSessionToken;                                      //@synthesize audioSessionToken=_audioSessionToken - In the implementation block
@property (assign,nonatomic) BOOL shouldShowView;                                               //@synthesize shouldShowView=_shouldShowView - In the implementation block
@property (assign,nonatomic) double currentVolume;                                              //@synthesize currentVolume=_currentVolume - In the implementation block
@property (assign,nonatomic) long long virtualOrientation;                                      //@synthesize virtualOrientation=_virtualOrientation - In the implementation block
@property (nonatomic,retain) SCCustomVolumeView * volumeView;                                   //@synthesize volumeView=_volumeView - In the implementation block
@property (nonatomic,retain) NSHashTable * overridingObjects;                                   //@synthesize overridingObjects=_overridingObjects - In the implementation block
@property (nonatomic,retain) UIView * view;                                                     //@synthesize view=_view - In the implementation block
@property (assign,nonatomic,__weak) id<SCCustomVolumeControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL ignoreNextVolumeChange;                                       //@synthesize ignoreNextVolumeChange=_ignoreNextVolumeChange - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)audioSession:(id)arg1 didChangeVolume:(double)arg2 ;
-(NSHashTable *)overridingObjects;
-(void)_stopOverridingMuteIfNecessary;
-(void)revertToNativeVolumeUI;
-(void)_restoreNativeVolumeIfNecessary;
-(void)setShouldShowView:(BOOL)arg1 ;
-(void)overrideNativeVolumeForObject:(id)arg1 shouldOverrideMute:(BOOL)arg2 ;
-(void)_overrideMuteIfNecessary;
-(BOOL)shouldShowView;
-(BOOL)ignoreNextVolumeChange;
-(void)setIgnoreNextVolumeChange:(BOOL)arg1 ;
-(void)hideVolumeView;
-(NSString *)audioSessionToken;
-(void)setAudioSessionToken:(NSString *)arg1 ;
-(id)muteButtonPlaybackConfiguration;
-(BOOL)isOverridingMuteSwitch;
-(void)setCurrentVolume:(double)arg1 ;
-(BOOL)shouldUpdateVolume;
-(void)updateVolumeView;
-(double)currentVolume;
-(id)_topMostVisibleWindow;
-(void)_updateVolumeViewFrameAnimated:(BOOL)arg1 ;
-(void)setVirtualOrientation:(long long)arg1 ;
-(void)restoreNativeVolumeForObject:(id)arg1 ;
-(void)restoreNativeVolume;
-(void)overrideNativeVolumeForObject:(id)arg1 ;
-(void)overrideMuteSwitch;
-(void)stopMuteSwitchOverride;
-(long long)virtualOrientation;
-(void)setOverridingObjects:(NSHashTable *)arg1 ;
-(void)setVolumeView:(SCCustomVolumeView *)arg1 ;
-(id)init;
-(void)setDelegate:(id<SCCustomVolumeControllerDelegate>)arg1 ;
-(void)dealloc;
-(id<SCCustomVolumeControllerDelegate>)delegate;
-(UIView *)view;
-(void)setView:(UIView *)arg1 ;
-(void)setFullscreen:(BOOL)arg1 ;
-(SCCustomVolumeView *)volumeView;
@end

