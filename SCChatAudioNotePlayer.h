/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:26 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AVAudioPlayerDelegate.h>
#import <Snapchat/SCAudioSessionListener.h>

@protocol SCChatAudioNotePlayerDelegate;
@class AVAudioPlayer, NSString, NSDictionary, SCAudioConfiguration, SCScopedAccess;

@interface SCChatAudioNotePlayer : NSObject <AVAudioPlayerDelegate, SCAudioSessionListener> {

	AVAudioPlayer* _audioPlayer;
	id<SCChatAudioNotePlayerDelegate> _delegate;
	NSString* _mediaId;
	NSDictionary* _encryptionDict;
	unsigned long long _state;
	NSString* _audioSessionToken;
	SCAudioConfiguration* _audioConfiguration;
	double _playbackPauseTime;
	SCScopedAccess* _scopedMutableAudioSession;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)sharedInstance;
-(void)audioSessionDidBeginInterruption:(id)arg1 ;
-(void)audioSession:(id)arg1 didEndInterruption:(BOOL)arg2 ;
-(void)audioSessionRouteDidChangeReasonNewDeviceAvailable:(id)arg1 ;
-(void)audioSessionRouteDidChangeReasonOldDeviceUnavailable:(id)arg1 ;
-(void)fadeVolumeWithDuration:(id)arg1 ;
-(void)_playAudioNoteWithData:(id)arg1 ;
-(void)removeProximitySensorObserver;
-(void)proximityChanged;
-(void)playOrPauseAudioNoteWithMediaId:(id)arg1 encryptionDict:(id)arg2 delegate:(id)arg3 ;
-(BOOL)currentAudioNoteMediaIdEquals:(id)arg1 ;
-(void)addProximitySensorObserverWithCallback:(/*^block*/id)arg1 ;
-(void)updateDelegate:(id)arg1 ;
-(id)init;
-(void)dealloc;
-(void)reset;
-(void)stop;
-(BOOL)isPlaying;
-(void)play;
-(void)pause;
-(BOOL)isStopped;
-(BOOL)isPaused;
-(double)currentPlaybackTime;
-(void)togglePlayPause;
-(void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2 ;
-(void)audioPlayerDecodeErrorDidOccur:(id)arg1 error:(id)arg2 ;
@end

