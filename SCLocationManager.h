/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:11 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/CLLocationManagerDelegate.h>
#import <Snapchat/FBTweakObserver.h>
#import <Snapchat/SCTimeProfilable.h>

@class SCQueuePerformer, NSHashTable, NSMutableArray, CLLocation, SCSpeed, CLHeading, NSDictionary, SCLocationManagerState, CLLocationManager, NSString;

@interface SCLocationManager : NSObject <CLLocationManagerDelegate, FBTweakObserver, SCTimeProfilable> {

	SCQueuePerformer* _performer;
	NSHashTable* _observers;
	NSMutableArray* _locationPermissionBlocks;
	NSMutableArray* _backgroundLocationPermissionBlocks;
	BOOL _hasAuthorizationStatus;
	BOOL _hasRecentAuthorizationStatus;
	int _lastAuthorizationStatus;
	CLLocation* _location;
	SCSpeed* _speed;
	CLHeading* _heading;
	NSDictionary* _beaconsByRegion;
	SCLocationManagerState* _state;
	CLLocationManager* _locationManager;

}

@property (copy) SCLocationManagerState * state;                               //@synthesize state=_state - In the implementation block
@property (nonatomic,retain) CLLocationManager * locationManager;              //@synthesize locationManager=_locationManager - In the implementation block
@property (copy) CLLocation * location;                                        //@synthesize location=_location - In the implementation block
@property (copy) SCSpeed * speed;                                              //@synthesize speed=_speed - In the implementation block
@property (copy) CLHeading * heading;                                          //@synthesize heading=_heading - In the implementation block
@property (copy) NSDictionary * beaconsByRegion;                               //@synthesize beaconsByRegion=_beaconsByRegion - In the implementation block
@property (assign) int lastAuthorizationStatus;                                //@synthesize lastAuthorizationStatus=_lastAuthorizationStatus - In the implementation block
@property (assign) BOOL hasAuthorizationStatus;                                //@synthesize hasAuthorizationStatus=_hasAuthorizationStatus - In the implementation block
@property (assign) BOOL hasRecentAuthorizationStatus;                          //@synthesize hasRecentAuthorizationStatus=_hasRecentAuthorizationStatus - In the implementation block
@property (readonly) BOOL lastAuthorized; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)locationAuthorizationNotDetermined;
+(BOOL)locationAuthorizationRestricted;
+(int)locationAuthorizationStatus;
+(void)updateLocationAuthorizationStatus:(int)arg1 ;
+(void)warmupLocationAuthorizationStatusWithCompletion:(/*^block*/id)arg1 onQueue:(id)arg2 ;
+(BOOL)locationAuthorizedInBackground;
+(void)clearLocationAuthorizationStatus;
+(void)warmupLocationAuthorizationStatus;
+(id)sharedInstance;
+(int)context;
+(BOOL)locationAuthorizationDenied;
+(BOOL)locationAuthorized;
-(void)tweakDidChange:(id)arg1 ;
-(void)setObserverStateDidChangeForObserver:(id)arg1 ;
-(void)requestLocationWithTimeout:(double)arg1 desiredAccuracy:(double)arg2 observerIdentifier:(id)arg3 callbackQueue:(id)arg4 callback:(/*^block*/id)arg5 ;
-(void)_recalculateDesiredLocationSettings;
-(void)_createCLLocationManagerIfNecessary;
-(BOOL)_hasRequestedBackgroundLocationAuthorization;
-(void)_setHasRequestedBackgroundLocationAuthorization;
-(void)fetchLocationAuthorized:(/*^block*/id)arg1 onQueue:(id)arg2 ;
-(void)fetchLocationAuthorizationStatus:(/*^block*/id)arg1 onQueue:(id)arg2 ;
-(BOOL)hasRecentAuthorizationStatus;
-(void)setHasRecentAuthorizationStatus:(BOOL)arg1 ;
-(void)_didReceiveLocations:(id)arg1 ;
-(NSDictionary *)beaconsByRegion;
-(void)setBeaconsByRegion:(NSDictionary *)arg1 ;
-(BOOL)lastAuthorized;
-(void)requestLocationPermissionWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)requestBackgroundLocationPermissionWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)fetchLocationAuthorized:(/*^block*/id)arg1 ;
-(void)fetchLocationAuthorizationStatus:(/*^block*/id)arg1 ;
-(id)init;
-(void)setSpeed:(SCSpeed *)arg1 ;
-(SCLocationManagerState *)state;
-(void)setState:(SCLocationManagerState *)arg1 ;
-(void)addObserver:(id)arg1 ;
-(CLHeading *)heading;
-(void)removeObserver:(id)arg1 ;
-(SCSpeed *)speed;
-(CLLocation *)location;
-(void)setLocation:(CLLocation *)arg1 ;
-(void)setHeading:(CLHeading *)arg1 ;
-(CLLocationManager *)locationManager;
-(void)setLocationManager:(CLLocationManager *)arg1 ;
-(int)lastAuthorizationStatus;
-(void)setLastAuthorizationStatus:(int)arg1 ;
-(void)locationManager:(id)arg1 didUpdateHeading:(id)arg2 ;
-(void)locationManager:(id)arg1 didRangeBeacons:(id)arg2 inRegion:(id)arg3 ;
-(void)locationManager:(id)arg1 rangingBeaconsDidFailForRegion:(id)arg2 withError:(id)arg3 ;
-(void)locationManager:(id)arg1 didFailWithError:(id)arg2 ;
-(void)locationManager:(id)arg1 didChangeAuthorizationStatus:(int)arg2 ;
-(void)locationManager:(id)arg1 didUpdateLocations:(id)arg2 ;
-(void)setHasAuthorizationStatus:(BOOL)arg1 ;
-(BOOL)hasAuthorizationStatus;
@end

