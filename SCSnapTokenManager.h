/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:07 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCUserSessionScoped.h>

@class NSMutableSet, SCSnapTokenTokenStorage, SCSnapTokenNetworkRequests, NSString, SCQueuePerformer;

@interface SCSnapTokenManager : NSObject <SCUserSessionScoped> {

	BOOL _invalidated;
	NSMutableSet* _pendingAccessTokenFetchWaiters;
	NSMutableSet* _pendingSnapSessionFetchWaiters;
	SCSnapTokenTokenStorage* _tokenStorage;
	SCSnapTokenNetworkRequests* _networkRequests;
	NSString* _userId;
	SCQueuePerformer* _performer;

}

@property (nonatomic,readonly) NSMutableSet * pendingAccessTokenFetchWaiters;              //@synthesize pendingAccessTokenFetchWaiters=_pendingAccessTokenFetchWaiters - In the implementation block
@property (nonatomic,readonly) NSMutableSet * pendingSnapSessionFetchWaiters;              //@synthesize pendingSnapSessionFetchWaiters=_pendingSnapSessionFetchWaiters - In the implementation block
@property (assign,nonatomic) BOOL invalidated;                                             //@synthesize invalidated=_invalidated - In the implementation block
@property (nonatomic,readonly) SCSnapTokenTokenStorage * tokenStorage;                     //@synthesize tokenStorage=_tokenStorage - In the implementation block
@property (nonatomic,readonly) SCSnapTokenNetworkRequests * networkRequests;               //@synthesize networkRequests=_networkRequests - In the implementation block
@property (nonatomic,copy,readonly) NSString * userId;                                     //@synthesize userId=_userId - In the implementation block
@property (nonatomic,readonly) SCQueuePerformer * performer;                               //@synthesize performer=_performer - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_createNSErrorWithCode:(unsigned long long)arg1 errorReason:(id)arg2 origError:(id)arg3 ;
-(SCQueuePerformer *)performer;
-(id)initWithTokenStorage:(id)arg1 networkRequests:(id)arg2 userId:(id)arg3 ;
-(void)_handleInvalidate;
-(SCSnapTokenTokenStorage *)tokenStorage;
-(void)_startAccessTokenFetchForOp:(id)arg1 ;
-(void)_accessTokenDoneWithErrorForOp:(id)arg1 error:(id)arg2 ;
-(void)_fetchAccessTokenFromStorageDoneForOp:(id)arg1 token:(id)arg2 ;
-(void)_accessTokenDoneWithSuccessForOp:(id)arg1 accessToken:(id)arg2 ;
-(unsigned char)_shouldPrefetchForToken:(id)arg1 ;
-(void)_doPrefetchForOriginalOp:(id)arg1 ;
-(void)_getRefreshTokenToExchangeForOp:(id)arg1 ;
-(void)_refreshTokenFetchDoneForOp:(id)arg1 token:(id)arg2 ;
-(void)_startSnapSessionFetchForOp:(id)arg1 ;
-(void)_networkFetchAccessTokenForOp:(id)arg1 refreshToken:(id)arg2 ;
-(NSMutableSet *)pendingSnapSessionFetchWaiters;
-(SCSnapTokenNetworkRequests *)networkRequests;
-(void)_handleSnapSessionSuccessWithSojuResponse:(id)arg1 ;
-(void)_emitRefreshTokenBlizzardEventForError:(unsigned long long)arg1 ;
-(void)_handleSnapSessionFetchFailureWithError:(id)arg1 ;
-(NSMutableSet *)pendingAccessTokenFetchWaiters;
-(void)_handleAccessTokenNetworkFetchSuccessForSojuResponse:(id)arg1 ;
-(void)_handleAccessTokenNetworkFetchForError:(id)arg1 ;
-(void)_logAccessTokenFetchSuccessLatencyForOp:(id)arg1 ;
-(void)cleanOldTokensOnLogin;
-(void)clearInvalidAccessTokenAndPrefetchForNextUse:(id)arg1 accessType:(unsigned long long)arg2 ;
-(void)fetchAccessTokenAsyncWithAccessType:(unsigned long long)arg1 successQueue:(id)arg2 failureQueue:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
-(void)_storeNetworkAccessTokenInStorageForAccessType:(unsigned long long)arg1 sojuResponse:(id)arg2 ;
-(void)invalidate;
-(NSString *)userId;
-(BOOL)invalidated;
-(void)setInvalidated:(BOOL)arg1 ;
@end

