/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:54 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <UIKit/UIResponder.h>
#import <Snapchat/SCCrashLoggerDelegate.h>
#import <Snapchat/SCTimeProfilable.h>
#import <Snapchat/SCInAppNotificationPressedDelegate.h>
#import <Snapchat/SCLegacyLifecycle.h>
#import <UIKit/UIApplicationDelegate.h>
#import <Snapchat/UNUserNotificationCenterDelegate.h>
#import <Snapchat/PKPushRegistryDelegate.h>

@class UIWindow, SCFailedUserEventNotificationController, PKPushRegistry, SCSnapchatScopeGraph, SCAppStateMonitor, SCAppNotification, SCCapturerToken, SCQueuePerformer, SCUserSession, UINavigationController, SCLocalNotificationsController, SCUserNotificationCenterController, SCInAppNotificationController, SCAppStateTracker, NSString;

@interface SCAppDelegate : UIResponder <SCCrashLoggerDelegate, SCTimeProfilable, SCInAppNotificationPressedDelegate, SCLegacyLifecycle, UIApplicationDelegate, UNUserNotificationCenterDelegate, PKPushRegistryDelegate> {

	BOOL didLaunchWithDidFinishLaunching;
	BOOL didLaunchWhenProtectedDataUnavailable;
	BOOL didBecomeActiveWithRemoteNotification;
	BOOL didRecordBluetoothForegroundEvent;
	BOOL didUserTriggerEmergencyMode;
	SCFailedUserEventNotificationController* _failedUserEventNotificationController;
	PKPushRegistry* _pushRegistry;
	SCSnapchatScopeGraph* _scopeGraph;
	SCAppStateMonitor* _appStateMonitor;
	SCAppNotification* _remoteNotificationFromLaunch;
	SCCapturerToken* _token;
	SCQueuePerformer* _performer;
	SCUserSession* _userSession;
	BOOL _isProtectedDataAvailable;
	long long _nextAppState;
	UINavigationController* _navController;
	UIWindow* _window;
	SCAppNotification* _launchingNotification;
	SCLocalNotificationsController* _localNotificationsController;
	SCUserNotificationCenterController* _userNotificationCenterController;
	SCInAppNotificationController* _inAppNotificationController;
	SCAppStateTracker* _appStateTracker;

}

@property (nonatomic,retain) SCAppNotification * launchingNotification;                                          //@synthesize launchingNotification=_launchingNotification - In the implementation block
@property (nonatomic,retain) SCLocalNotificationsController * localNotificationsController;                      //@synthesize localNotificationsController=_localNotificationsController - In the implementation block
@property (nonatomic,retain) SCUserNotificationCenterController * userNotificationCenterController;              //@synthesize userNotificationCenterController=_userNotificationCenterController - In the implementation block
@property (nonatomic,readonly) SCInAppNotificationController * inAppNotificationController;                      //@synthesize inAppNotificationController=_inAppNotificationController - In the implementation block
@property (nonatomic,retain) SCAppStateTracker * appStateTracker;                                                //@synthesize appStateTracker=_appStateTracker - In the implementation block
@property (assign,nonatomic) long long nextAppState;                                                             //@synthesize nextAppState=_nextAppState - In the implementation block
@property (nonatomic,retain) UINavigationController * navController;                                             //@synthesize navController=_navController - In the implementation block
@property (nonatomic,retain) UIWindow * window;                                                                  //@synthesize window=_window - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(int)context;
+(void)load;
-(long long)nextAppState;
-(void)didLogInWithUserSession:(id)arg1 isNewRegistration:(BOOL)arg2 ;
-(void)didLogOut;
-(void)handleNotificationPressed:(id)arg1 withAction:(id)arg2 ;
-(id)_largeDatastores;
-(void)_initializeUserSession;
-(void)_sendPrestartUdpPacket;
-(void)_freeDiskSpaceIfNeeded;
-(void)_registerPushKitNotifications;
-(void)_reportCrashEventToBlizzardWithAppVersion:(id)arg1 isCrashLoop:(BOOL)arg2 ;
-(void)setAppStateTracker:(SCAppStateTracker *)arg1 ;
-(SCAppStateTracker *)appStateTracker;
-(void)reportPreviousMemoryCrashIfNecessary;
-(void)_userTriggeredEmergencyMode;
-(double)_preAppOpenLatency;
-(void)initializeStage0BackgroundServices;
-(void)initializeMissionCriticalServicesWithAppNotificationAvailable:(BOOL)arg1 ;
-(void)initializeStage1BackgroundServices;
-(void)presentViewControllerForNotification:(id)arg1 ;
-(void)_fetchServerConfigIfPossible;
-(void)setNextAppState:(long long)arg1 ;
-(void)initializeWithProtectedDataAvailable;
-(void)_registerUserNotificationsIfNeeded;
-(void)initializeStage2BackgroundServicesWithUserSession:(id)arg1 ;
-(long long)_blizzardEventEnumForApplicationState:(long long)arg1 ;
-(void)_reportCrashReason:(id)arg1 appStateOnCrash:(id)arg2 previousAppVersion:(id)arg3 events:(id)arg4 didCallExit:(BOOL)arg5 ;
-(void)_dispatchBlocksToWaitUntilStartComplete;
-(void)_flushTraceFileIfNeeded;
-(void)_handleOpenAppToNonCameraVC;
-(void)presentViewControllerFromBackgroundForNotification:(id)arg1 ;
-(void)processRemoteNotification:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)handleActionedNotification:(id)arg1 ;
-(BOOL)_handleOpenURL:(id)arg1 sourceApplication:(id)arg2 additionalInfo:(id)arg3 ;
-(void)observeNotifications;
-(void)navigationControllerWillChangeViewController:(id)arg1 ;
-(void)queryActiveApplicationContextState:(id)arg1 ;
-(void)postponedApplicationDidBecomeActive;
-(BOOL)shouldDisplayCrashFeedbackPrompt;
-(SCAppNotification *)launchingNotification;
-(void)setLaunchingNotification:(SCAppNotification *)arg1 ;
-(SCLocalNotificationsController *)localNotificationsController;
-(void)setLocalNotificationsController:(SCLocalNotificationsController *)arg1 ;
-(SCUserNotificationCenterController *)userNotificationCenterController;
-(void)setUserNotificationCenterController:(SCUserNotificationCenterController *)arg1 ;
-(SCInAppNotificationController *)inAppNotificationController;
-(id)init;
-(UIWindow *)window;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(BOOL)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4 ;
-(void)applicationDidReceiveMemoryWarning:(id)arg1 ;
-(void)applicationWillTerminate:(id)arg1 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)applicationWillResignActive:(id)arg1 ;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2 ;
-(BOOL)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2 ;
-(BOOL)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2 ;
-(void)userNotificationCenter:(id)arg1 didReceiveNotificationResponse:(id)arg2 withCompletionHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 fetchCompletionHandler:(/*^block*/id)arg3 ;
-(BOOL)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(/*^block*/id)arg3 ;
-(void)setWindow:(UIWindow *)arg1 ;
-(void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2 ;
-(void)application:(id)arg1 didReceiveLocalNotification:(id)arg2 ;
-(void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forLocalNotification:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2 ;
-(void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2 ;
-(void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2 ;
-(UINavigationController *)navController;
-(void)pushRegistry:(id)arg1 didUpdatePushCredentials:(id)arg2 forType:(id)arg3 ;
-(void)pushRegistry:(id)arg1 didReceiveIncomingPushWithPayload:(id)arg2 forType:(id)arg3 ;
-(void)pushRegistry:(id)arg1 didInvalidatePushTokenForType:(id)arg2 ;
-(void)setNavController:(UINavigationController *)arg1 ;
@end

