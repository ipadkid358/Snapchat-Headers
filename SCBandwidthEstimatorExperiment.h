/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:07 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCNetworkConnectivityListener.h>

@protocol SCFilterBase;
@class SCQueuePerformer, NSMutableSet, NSObject, NSMutableDictionary, NSString;

@interface SCBandwidthEstimatorExperiment : NSObject <SCNetworkConnectivityListener> {

	double _filterCoefficient;
	SCQueuePerformer* _performer;
	NSMutableSet* _concurrentRequestSet;
	NSObject*<SCFilterBase> _downloadExperimentFilter;
	double _lastSampleTime;
	NSMutableDictionary* _bandwidthEstimatorRecordMap;
	long long _downloadBandwidth;
	long long _downloadWorkload;
	long long _lastRecordedDownloadBandwidth;

}

@property (assign) long long downloadBandwidth;                          //@synthesize downloadBandwidth=_downloadBandwidth - In the implementation block
@property (assign) long long downloadWorkload;                           //@synthesize downloadWorkload=_downloadWorkload - In the implementation block
@property (assign) long long lastRecordedDownloadBandwidth;              //@synthesize lastRecordedDownloadBandwidth=_lastRecordedDownloadBandwidth - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)shared;
-(void)networkConnectivityStatusDidChange:(long long)arg1 ;
-(void)finishRecordBandwidthWithRequestKey:(id)arg1 contentLength:(long long)arg2 ;
-(void)startRecordWithRequestKey:(id)arg1 contentLength:(long long)arg2 ;
-(void)_setUpNetworkAndAppStateObservation;
-(void)setDownloadBandwidth:(long long)arg1 ;
-(long long)downloadBandwidth;
-(long long)lastRecordedDownloadBandwidth;
-(long long)downloadWorkload;
-(void)_resetFiltering;
-(void)_updateConcurrentRequestWithRequestKey:(id)arg1 contentLength:(long long)arg2 requestStart:(BOOL)arg3 ;
-(BOOL)_shouldStartRecordWithRequestKey:(id)arg1 contentLength:(long long)arg2 ;
-(BOOL)_shouldFinishRecordBecauseOfDurationWithRequestKey:(id)arg1 ;
-(void)_updateBandwidthEstimatorWithRequestKey:(id)arg1 contentLength:(long long)arg2 ;
-(void)setDownloadWorkload:(long long)arg1 ;
-(void)setLastRecordedDownloadBandwidth:(long long)arg1 ;
-(id)init;
@end

