/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:36 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SCPerforming;
@class SCUserSession, NSDateFormatter, SCGalleryTagClusterIndexer, SCGalleryTakenNearbySearch, NSMutableDictionary, NSMutableSet, EGODatabase, EGODatabaseStatement, NSArray, NSDictionary, GeoParser, SCGallerySearchLocalizationHelper;

@interface SCGallerySearch : NSObject {

	SCUserSession* _userSession;
	id<SCPerforming> _performer;
	NSDateFormatter* _dateFormatter;
	SCGalleryTagClusterIndexer* _tagClusterIndexer;
	SCGalleryTakenNearbySearch* _takenNearbySearcher;
	NSMutableDictionary* _visualTagConfidenceMapping;
	NSMutableSet* _distinctVisualTagSet;
	NSMutableSet* _distinctTimeTagSet;
	NSMutableSet* _distinctGeoTagSet;
	NSMutableSet* _distinctMetaTagSet;
	NSMutableSet* _distinctUserSpecificTagSet;
	NSMutableSet* _distinctTranslatableTagSet;
	long long _modelVersion;
	EGODatabase* _database;
	EGODatabaseStatement* _querySnapIdsByTag;
	EGODatabaseStatement* _queryConfidenceWithSnapIdAndTag;
	EGODatabaseStatement* _querySnapInfoByStringMatching;
	EGODatabaseStatement* _querySnapCountFromStringMatching;
	EGODatabaseStatement* _queryNumberOfSnapsPerConceptCluster;
	EGODatabaseStatement* _querySnapsForOneConceptCluster;
	EGODatabaseStatement* _queryTagsAndConfsForSnapId;
	EGODatabaseStatement* _querySnapIdVisualTagConfsByCluster;
	EGODatabaseStatement* _queryTagsTotalCounts;
	EGODatabaseStatement* _queryLocationTotalCounts;
	EGODatabaseStatement* _queryLocationForSnapId;
	EGODatabaseStatement* _queryLocationForSnapIds;
	EGODatabaseStatement* _queryTimeTagTotalCounts;
	EGODatabaseStatement* _querySnapsForOneTimeTag;
	EGODatabaseStatement* _querySnapIdsForGeofilterId;
	EGODatabaseStatement* _queryFaceRelatedTags;
	EGODatabaseStatement* _queryRowidsBySnapId;
	EGODatabaseStatement* _queryDistinctVisualTags;
	EGODatabaseStatement* _queryDistinctLocationTags;
	EGODatabaseStatement* _queryDistinctTimeTags;
	EGODatabaseStatement* _queryDistinctMetaTags;
	EGODatabaseStatement* _queryAllSnapIdsAndTagVersions;
	EGODatabaseStatement* _querySnapIdsWithGeofilter;
	EGODatabaseStatement* _querySnapIdsByCaptionExactMatch;
	EGODatabaseStatement* _querySnapIdsByCaptionPrefixMatch;
	EGODatabaseStatement* _deleteSnapFromSnapIdTableByRowid;
	EGODatabaseStatement* _deleteSnapFromSnapTagTableByRowid;
	EGODatabaseStatement* _deleteSnapClusterTagFromSnapId;
	EGODatabaseStatement* _deleteLocationClusterTagFromSnapId;
	EGODatabaseStatement* _deleteSnapFromSnapDescriptionTableByRowid;
	EGODatabaseStatement* _deleteSnapTimeClusterTagFromSnapId;
	EGODatabaseStatement* _deleteVisualTagsFromSnapId;
	EGODatabaseStatement* _deleteFromSyncedTableForSnapId;
	EGODatabaseStatement* _beginTransaction;
	EGODatabaseStatement* _commitTransaction;
	NSArray* _serverQuerySearchResults;
	NSArray* _fallbackSearchResults;
	NSDictionary* _thresholdForConcepts;
	float _overallThreshold;
	GeoParser* _geoParser;
	SCGallerySearchLocalizationHelper* _localizationHelper;

}
-(void)removeAllData;
-(id)initWithUserSession:(id)arg1 ;
-(id)_databaseURL;
-(void)fetchTagAndConfForSnapId:(id)arg1 synchronous:(BOOL)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)fetchLocationNameForSnapId:(id)arg1 synchronous:(BOOL)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)deleteSnapWithSnapIds:(id)arg1 ;
-(void)fetchAllSnapIdToTagVersionMapWithQueue:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)addToTagSetFromTags:(id)arg1 inTagType:(long long)arg2 ;
-(BOOL)isInsideSearchPerformer;
-(id)_normalizeString:(id)arg1 ;
-(id)_tokenize:(id)arg1 ;
-(id)searchWithClusterNames:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)_fetchDistinctTags:(id)arg1 ;
-(id)_assembleSearchResultsFromSearchIntermediateResults:(id)arg1 includePrivate:(BOOL)arg2 ;
-(void)_reloadThresholdForConcepts;
-(id)_searchResultsForQuery:(id)arg1 inputLocale:(id)arg2 includePrivate:(BOOL)arg3 source:(long long)arg4 request:(id)arg5 queue:(id)arg6 completionHandler:(/*^block*/id)arg7 ;
-(id)_similarResultsForQuery:(id)arg1 includePrivate:(BOOL)arg2 request:(id)arg3 queue:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)_snapMatchInfosFromMatchingConcept:(id)arg1 ;
-(float)_acceptanceForConcept:(id)arg1 ;
-(id)_rowidsForSnapId:(id)arg1 ;
-(id)_getTagsFromString:(id)arg1 ;
-(int)_querySqliteForNumberOfResultsWithFullTextSearch:(id)arg1 ;
-(BOOL)_isValidConcept:(id)arg1 inputLanguageId:(id)arg2 ;
-(id)_findMatchedConceptSimilarityPairsForQueryToken:(id)arg1 fromTagSet:(id)arg2 ;
-(id)_findMatchedConceptsForQueryToken:(id)arg1 withMatchedGeoTagSet:(id)arg2 withMatchedTimeTagSet:(id)arg3 ;
-(id)_getQuerys:(id)arg1 withDictionary:(id)arg2 withMatchedGeoTagSet:(id)arg3 withMatchedTimeTagSet:(id)arg4 ;
-(id)_appendQuerys:(id)arg1 withTags:(id)arg2 ;
-(unsigned long long)_hashTokenArray:(id)arg1 ;
-(id)_getConceptArraysFromUserQuery:(id)arg1 withMatchedGeoTagSet:(id)arg2 withMatchedTimeTagSet:(id)arg3 ;
-(id)_snapMatchInfosFromFuzzyTimeParsing:(id)arg1 ;
-(void)_addIntermediateSearchResults:(id)arg1 toSearchResults:(id)arg2 includePrivate:(BOOL)arg3 ;
-(id)_segmentUserQueryIntoConcepts:(id)arg1 inputLanguageId:(id)arg2 ;
-(id)_autocompleteConceptToSnapMatchInfosDictForPrefix:(id)arg1 ;
-(id)_prefixMatchingConceptToSnapMatchInfosDictForPrefix:(id)arg1 languageId:(id)arg2 ;
-(id)_outerJoinDictionary:(id)arg1 andDictionary:(id)arg2 ;
-(id)_snapMatchInfosFromTimeParsing:(id)arg1 ;
-(id)_snapMatchInfosFromGeoParsing:(id)arg1 matchingQuery:(id*)arg2 allowAutocorrect:(BOOL)arg3 ;
-(id)_autocompleteUserSpecificConcept:(id)arg1 ;
-(id)_snapMatchInfosFromUserSpecificConcept:(id)arg1 ;
-(id)_unionResultsWithSameResultTitle:(id)arg1 newResult:(id)arg2 ;
-(BOOL)_isInterpretableWithoutTagMatching:(id)arg1 ;
-(BOOL)_isUserSpecificConcept:(id)arg1 ;
-(void)_appendSearchResults:(id)arg1 toSearchResults:(id)arg2 ;
-(id)_searchResultsFromSuggestedResults:(id)arg1 ;
-(id)_searchResultFromCaptionMatching:(id)arg1 source:(long long)arg2 ;
-(id)_storyTitleSearchResultWithUserQuery:(id)arg1 includePrivate:(BOOL)arg2 ;
-(void)_searchResultsFromFuzzyMatching:(id)arg1 includePrivate:(BOOL)arg2 searchResults:(id)arg3 geoNearbyResults:(id)arg4 timeAroundResults:(id)arg5 request:(id)arg6 queue:(id)arg7 completionHandler:(/*^block*/id)arg8 ;
-(void)_searchResultsFromPrefixMatching:(id)arg1 inputLocale:(id)arg2 includePrivate:(BOOL)arg3 searchResults:(id)arg4 geoNearbyResults:(id)arg5 timeAroundResults:(id)arg6 request:(id)arg7 queue:(id)arg8 completionHandler:(/*^block*/id)arg9 ;
-(id)_snapMatchInfosFromTagMatching:(id)arg1 ;
-(double)_tagConfidenceForSnap:(id)arg1 tag:(id)arg2 ;
-(id)_querySqliteForOffsetsWithFullTextSearch:(id)arg1 ;
-(id)_snapMatchInfosForCaptionMatchingText:(id)arg1 source:(long long)arg2 ;
-(void)_logPotentialDatabaseError:(id)arg1 ;
-(BOOL)_isColumnWithName:(id)arg1 InTable:(id)arg2 ;
-(id)_databaseErrorMessage:(id)arg1 ;
-(id)_assembleSearchResultWithSnapMatchInfos:(id)arg1 entries:(id)arg2 snaps:(id)arg3 resultTitle:(id)arg4 ;
-(id)fetchSearchResultWithSnapIds:(id)arg1 resultTitle:(id)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)fetchSearchResultWithSnapIdGroups:(id)arg1 resultTitle:(id)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(id)searchWithTypeahead:(id)arg1 inputLocale:(id)arg2 includePrivate:(BOOL)arg3 source:(long long)arg4 queue:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)searchWithConcepts:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)searchTimeLocationClusterWithTimetags:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)searchWithGeofilterId:(id)arg1 includePrivate:(BOOL)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)conceptCountsWithQueue:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)locationCountsWithQueue:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)timeTagCountsWithQueue:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchAllSnapIdForFaceRelatedTagWithCompletionQueue:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)fetchAllSnapIdToGeofilterIdMap:(/*^block*/id)arg1 ;
-(void)searchableThresholdForConcept:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_setupDatabase;
-(void)dealloc;
-(void)perform:(/*^block*/id)arg1 ;
-(void)_applicationDidReceiveMemoryWarning:(id)arg1 ;
@end

