/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:17 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SCXRenderLayerDelegate;
#import <Snapchat/Snapchat-Structs.h>
@class MGLMapView, SCXRenderContext, NSMutableArray, SCXHeatmapRenderer, SCXBlackOverlayRenderer, SCXDoodleSpriteRenderer, SCXStandingObjectsRenderer, SCXOverlaySpriteRenderer, SCXTapCircleRenderer, SCXPathRenderer, SCXShadedRadiusRenderer, SCXWeatherRenderer, SCXThumbnailViewStateManager, SCXTapAnimationViewStateManager, EAGLContext, SCThrottleTimer, CADisplayLink, SCXOpenGLStyleLayer, SCXRenderLockManager, NSString, SCXWeather, NSArray, NSMutableSet;

@interface SCXRenderLayer : NSObject {

	MGLMapView* _mapView;
	SCXRenderContext* _renderContext;
	NSMutableArray* _nonHeatmapRenderers;
	NSMutableArray* _heatmapRenderers;
	SCXHeatmapRenderer* _heatmap;
	SCXBlackOverlayRenderer* _blackOverlay;
	SCXDoodleSpriteRenderer* _backgroundSprites;
	SCXStandingObjectsRenderer* _standingObjects;
	SCXOverlaySpriteRenderer* _overlaySprites;
	SCXTapCircleRenderer* _tapAnimationRenderer;
	SCXPathRenderer* _pathRenderer;
	SCXShadedRadiusRenderer* _shadedRadiusRenderer;
	SCXWeatherRenderer* _weatherRenderer;
	SCXThumbnailViewStateManager* _thumbnailViewStateManager;
	SCXTapAnimationViewStateManager* _tapAnimationViewStateManager;
	EAGLContext* _workaroundContext;
	SCThrottleTimer* _displayThrottleTimer;
	BOOL _wantsVisibilityRender;
	CADisplayLink* _spriteAnimationDisplayLink;
	SCXOpenGLStyleLayer* _nonHeatmapOpenGLStyleLayer;
	SCXOpenGLStyleLayer* _heatmapOpenGLStyleLayer;
	BOOL _loggedLockedDraw;
	BOOL _heatmapDecidedToContinueRendering;
	BOOL _isTileFetchingPaused;
	BOOL _shouldPeriodicallyRefreshTileSetId;
	SCXRenderLockManager* _renderLockManager;
	id<SCXRenderLayerDelegate> _delegate;
	NSString* _willEnterBackgroundNotificationName;

}

@property (nonatomic,__weak,readonly) MGLMapView * mapView;                                 //@synthesize mapView=_mapView - In the implementation block
@property (nonatomic,readonly) SCXRenderLockManager * renderLockManager;                    //@synthesize renderLockManager=_renderLockManager - In the implementation block
@property (assign,nonatomic) float poiLayerOpacity; 
@property (assign,nonatomic) float heatmapLayerOpacity; 
@property (assign,nonatomic) float spriteLayerOpacity; 
@property (assign,nonatomic) float blackOverlayLayerOpacity; 
@property (nonatomic,retain) SCXWeather * weatherEffect; 
@property (nonatomic,copy) NSString * weatherLiveEditHostname; 
@property (assign,nonatomic) float unlockablePoiOpacity; 
@property (nonatomic,readonly) BOOL contentTilesLoaded; 
@property (nonatomic,readonly) BOOL allStoryThumbnailsLoaded; 
@property (nonatomic,readonly) BOOL allSpritesLoaded; 
@property (nonatomic,readonly) unsigned long long totalHeatPoints; 
@property (nonatomic,readonly) unsigned long long viewportMaxGameMarkersCount; 
@property (assign,nonatomic) BOOL ignoringSpriteCollisions; 
@property (nonatomic,retain) NSArray * overridePois; 
@property (nonatomic,readonly) NSMutableSet * nonCollidedPoiIds; 
@property (assign,nonatomic) BOOL isTileFetchingPaused;                                     //@synthesize isTileFetchingPaused=_isTileFetchingPaused - In the implementation block
@property (assign,nonatomic) BOOL shouldPeriodicallyRefreshTileSetId;                       //@synthesize shouldPeriodicallyRefreshTileSetId=_shouldPeriodicallyRefreshTileSetId - In the implementation block
@property (assign,nonatomic,__weak) id<SCXRenderLayerDelegate> delegate;                    //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,copy) NSString * willEnterBackgroundNotificationName;                  //@synthesize willEnterBackgroundNotificationName=_willEnterBackgroundNotificationName - In the implementation block
-(void)mapViewRegionIsChanging:(id)arg1 ;
-(float)blackOverlayLayerOpacity;
-(NSString *)weatherLiveEditHostname;
-(float)spriteLayerOpacity;
-(void)mediaManager:(id)arg1 didLoadEmoji:(id)arg2 ;
-(void)mediaManager:(id)arg1 didCreateLabel:(id)arg2 ;
-(void)mediaManager:(id)arg1 didLoadThumbnail:(id)arg2 ;
-(void)bindTextureToSprite:(id)arg1 imageIdentifier:(id)arg2 imageFetcher:(/*^block*/id)arg3 completion:(/*^block*/id)arg4 ;
-(float)heatmapLayerOpacity;
-(BOOL)ignoringSpriteCollisions;
-(unsigned long long)viewportMaxGameMarkersCount;
-(NSMutableSet *)nonCollidedPoiIds;
-(void)setIgnoringSpriteCollisions:(BOOL)arg1 ;
-(BOOL)shouldPeriodicallyRefreshTileSetId;
-(BOOL)isTileFetchingPaused;
-(void)tileManager:(id)arg1 didLoadTiles:(id)arg2 ;
-(void)mapViewWillBePresented;
-(void)setShouldPeriodicallyRefreshTileSetId:(BOOL)arg1 ;
-(int)numTilesLoaded;
-(void)setIsTileFetchingPaused:(BOOL)arg1 ;
-(void)tileMetadataManager:(id)arg1 didLoadTileMetadataForTileIds:(id)arg2 ;
-(float)poiLayerOpacity;
-(void)setPoiLayerOpacity:(float)arg1 ;
-(void)setHeatmapLayerOpacity:(float)arg1 ;
-(void)setSpriteLayerOpacity:(float)arg1 ;
-(void)setBlackOverlayLayerOpacity:(float)arg1 ;
-(float)unlockablePoiOpacity;
-(void)setUnlockablePoiOpacity:(float)arg1 ;
-(BOOL)contentTilesLoaded;
-(BOOL)allStoryThumbnailsLoaded;
-(BOOL)allSpritesLoaded;
-(void)setWeatherLiveEditHostname:(NSString *)arg1 ;
-(unsigned long long)totalHeatPoints;
-(void)_setMapNeedsDisplay;
-(void)_cleanupNonHeatmapLayer;
-(NSString *)willEnterBackgroundNotificationName;
-(void)_applicationWillEnterBackground:(id)arg1 ;
-(void)_registerBackgroundingNotificationHandlers;
-(SCXRenderLockManager *)renderLockManager;
-(void)_logLockedDrawOnce;
-(void)_allowLoggingLockedDraw;
-(void)_prepareMediaManagerIfNecessary;
-(void)_prepareRenderers:(id)arg1 ;
-(void)_render:(id)arg1 context:(MGLStyleLayerDrawingContext)arg2 ;
-(BOOL)_shouldContinueRenderingHeatmap:(id)arg1 ;
-(void)_completeRenderers:(id)arg1 ;
-(void)_addLayer:(id)arg1 belowLayerWithIdentifier:(id)arg2 ;
-(BOOL)_shouldContinueRenderingNonHeatmap:(id)arg1 ;
-(void)_addHeatmapLayerToMapView:(id)arg1 belowLayerWithIdentifier:(id)arg2 ;
-(void)_addNonHeatmapLayerToMapView:(id)arg1 belowLayerWithIdentifier:(id)arg2 ;
-(void)mapViewDidChange:(id)arg1 ;
-(void)_deregisterBackgroundingNotificationHandlers;
-(BOOL)_contextHasNonHeatmapAnimationsInProgress:(id)arg1 ;
-(BOOL)_contextHasHeatmapAnimationsInProgress:(id)arg1 ;
-(BOOL)_scalePointOfInterest:(id)arg1 duration:(double)arg2 finalScale:(id)arg3 completion:(/*^block*/id)arg4 ;
-(BOOL)undepressPointOfInterest:(id)arg1 duration:(double)arg2 completion:(/*^block*/id)arg3 ;
-(void)scheduleDisplay;
-(void)setOverridePois:(id)arg1 poiTileSetId:(id)arg2 ;
-(void)_sortSprites:(id)arg1 ;
-(void)addOverlaySpriteToMap:(id)arg1 ;
-(void)_setLocationForCalloutSprite:(id)arg1 poi:(id)arg2 withCalloutImage:(id)arg3 ;
-(void)_setWidthForCalloutSprite:(id)arg1 withCalloutImage:(id)arg2 ;
-(void)_updateOpacityForSprite:(id)arg1 opacity:(float)arg2 duration:(double)arg3 completion:(/*^block*/id)arg4 ;
-(void)_updateLocationForSprite:(id)arg1 location:(id)arg2 duration:(double)arg3 ;
-(void)_updateWidthInterpolatorForSprite:(id)arg1 widthInterpolator:(/*^block*/id)arg2 duration:(double)arg3 ;
-(id)spritesAtScreenPoint:(CGPoint)arg1 ;
-(void)removeOverlaySpriteFromMap:(id)arg1 ;
-(void)_sortClusters:(id)arg1 ;
-(void)_sortDoodleSprites:(id)arg1 ;
-(void)_sortInnerClusters:(id)arg1 ;
-(void)_spriteAnimationTick;
-(void)forceDisplay;
-(BOOL)_contextHasAnimationsInProgress:(id)arg1 ;
-(id)initWithTileFetcher:(id)arg1 mediaFetcher:(id)arg2 gameStateProvider:(id)arg3 mapViewListenerAnnouncer:(id)arg4 options:(id)arg5 ;
-(void)addToMapbox:(id)arg1 ;
-(void)removeFromMapView;
-(void)debugLogData;
-(id)pointsOfInterestAtScreenPoint:(CGPoint)arg1 ;
-(id)pointsOfInterestAtScreenPoint:(CGPoint)arg1 withActionType:(int)arg2 ;
-(id)pointsOfInterestInScreenBounds;
-(void)logAllPointsOfInterestOnScreen;
-(void)logTileSetInfo;
-(CGRect)thumbnailFrameForPointOfInterest:(id)arg1 ;
-(void)setThumbnailHidden:(BOOL)arg1 forPointOfInterest:(id)arg2 ;
-(BOOL)depressPointOfInterest:(id)arg1 duration:(double)arg2 completion:(/*^block*/id)arg3 ;
-(BOOL)enlargePointOfInterest:(id)arg1 duration:(double)arg2 ;
-(BOOL)shrinkPointOfInterest:(id)arg1 duration:(double)arg2 ;
-(void)addLoadingSpinnerToPointOfInterest:(id)arg1 ;
-(void)removeLoadingSpinnerFromPointOfInterest:(id)arg1 ;
-(/*^block*/id)addTapAnywhereAnimationAtCoords:(CLLocationCoordinate2D)arg1 ;
-(void)shadeRadiusAroundPoi:(id)arg1 radius:(double)arg2 duration:(double)arg3 ;
-(void)hideRadiusAroundPoi:(id)arg1 duration:(double)arg2 ;
-(double)maxFuzzRadiusInViewport;
-(void)animatePOILayerOpacity:(id)arg1 ;
-(void)animateHeatmapLayerOpacity:(id)arg1 ;
-(void)animateSpriteLayerOpacity:(id)arg1 ;
-(void)animateBlackOverlayLayerOpacity:(id)arg1 ;
-(void)setOverridePois:(NSArray *)arg1 ;
-(NSArray *)overridePois;
-(void)updateOptions:(id)arg1 tileFetcher:(id)arg2 ;
-(void)showCalloutForPoi:(id)arg1 title:(id)arg2 ;
-(BOOL)isCalloutSpriteForPoi:(id)arg1 atPoint:(CGPoint)arg2 ;
-(void)hideCalloutForPoi:(id)arg1 ;
-(void)addClustersToMap:(id)arg1 ;
-(void)removeClustersFromMap:(id)arg1 ;
-(void)addDoodleSpriteToMap:(id)arg1 ;
-(void)removeDoodleSpriteFromMap:(id)arg1 ;
-(id)tileMetadataForCoordinate:(CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 ;
-(void)updateSpriteRenderOrder;
-(void)_startSpriteAnimationTimer;
-(id)getCurrentHeatTileSetId;
-(id)getCurrentPoiTileSetId;
-(id)getCurrentGameTileSetId;
-(id)pointsOfInterestSizeEquation;
-(void)setWeatherEffect:(SCXWeather *)arg1 ;
-(SCXWeather *)weatherEffect;
-(void)addTravelPathToMap:(id)arg1 ;
-(void)removeTravelPathFromMap:(id)arg1 ;
-(void)renderLockManager:(id)arg1 effectiveLockTypeDidChangeFrom:(long long)arg2 to:(long long)arg3 ;
-(void)setWillEnterBackgroundNotificationName:(NSString *)arg1 ;
-(/*^block*/id)_drawClusterStatus:(id)arg1 animated:(BOOL)arg2 spriteManager:(id)arg3 widthInterpolator:(/*^block*/id)arg4 userSession:(id)arg5 ;
-(/*^block*/id)_drawSoloStatus:(id)arg1 animated:(BOOL)arg2 spriteManager:(id)arg3 widthInterpolator:(/*^block*/id)arg4 userSession:(id)arg5 ;
-(/*^block*/id)drawStatus:(id)arg1 animated:(BOOL)arg2 spriteManager:(id)arg3 widthInterpolator:(/*^block*/id)arg4 userSession:(id)arg5 ;
-(void)setNeedsDisplay;
-(void)setDelegate:(id<SCXRenderLayerDelegate>)arg1 ;
-(void)dealloc;
-(id<SCXRenderLayerDelegate>)delegate;
-(void)_applicationDidEnterBackground:(id)arg1 ;
-(void)_applicationWillEnterForeground:(id)arg1 ;
-(void)mapView:(id)arg1 regionDidChangeAnimated:(BOOL)arg2 ;
-(MGLMapView *)mapView;
@end

