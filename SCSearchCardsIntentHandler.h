/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:48 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCBrowserViewControllerDelegate.h>
#import <Snapchat/SCAlertGearDelegate.h>
#import <Snapchat/MFMessageComposeViewControllerDelegate.h>
#import <Snapchat/SCSearchReplyCameraPresenterDelegate.h>
#import <Snapchat/SCSearchModalPresenting.h>
#import <Snapchat/SCStartChatDelegate.h>
#import <Snapchat/SCReplyDelegate.h>
#import <Snapchat/SCSearchStoryShareSessionDelegate.h>
#import <Snapchat/SCSearchStorySharePopupPresenterDelegate.h>
#import <Snapchat/SCSearchStoriesPresenterDelegate.h>
#import <Snapchat/SCSearchEventListener.h>
#import <UIKit/UIViewControllerTransitioningDelegate.h>
#import <Snapchat/SCMapViewControllerDelegate.h>
#import <Snapchat/SCSearchMiniProfilePresenterDelegate.h>
#import <Snapchat/SCSearchModerationHandlerDelegate.h>
#import <Snapchat/SCSearchDiscoverStoriesPresenterDelegate.h>
#import <Snapchat/SCMiniProfileViewControllerDelegate.h>
#import <Snapchat/SCGroupMiniProfileViewControllerDelegate.h>
#import <Snapchat/SCSearchMomentsOperaPresenterDelegate.h>
#import <Snapchat/SCStoryMiniProfileViewControllerDelegate.h>
#import <Snapchat/SCSearchIntentHandler.h>

@protocol SCSearchIntent, SCSearchCardsIntentHandlerDelegate, SCStartChatDelegate, NavigationDelegate, SendSnapNavigationControllerDelegate, SCSearchResultsViewControllerDelegate;
@class SCSearchSession, SCSearchStoryShareSession, SCSearchStorySharePopupPresenter, SCSearchReplyCameraPresenter, SCLazy, SCSearchEventListenerAnnouncer, NSDictionary, NSArray, SCOperaPresenter, SCOperaPlaylistEditionsPlugin, SCSearchModerationHandler, SCSearchCachedRequestManager, SCSearchStoriesEverywhereService, SCMiniProfileActionHandler, UIViewController, UINavigationController, SCSearchNavigationCoordinator, SCMiniProfileViewController, SCAlertGear, AddFriendsDelegateObject, NSString;

@interface SCSearchCardsIntentHandler : NSObject <SCBrowserViewControllerDelegate, SCAlertGearDelegate, MFMessageComposeViewControllerDelegate, SCSearchReplyCameraPresenterDelegate, SCSearchModalPresenting, SCStartChatDelegate, SCReplyDelegate, SCSearchStoryShareSessionDelegate, SCSearchStorySharePopupPresenterDelegate, SCSearchStoriesPresenterDelegate, SCSearchEventListener, UIViewControllerTransitioningDelegate, SCMapViewControllerDelegate, SCSearchMiniProfilePresenterDelegate, SCSearchModerationHandlerDelegate, SCSearchDiscoverStoriesPresenterDelegate, SCMiniProfileViewControllerDelegate, SCGroupMiniProfileViewControllerDelegate, SCSearchMomentsOperaPresenterDelegate, SCStoryMiniProfileViewControllerDelegate, SCSearchIntentHandler> {

	SCSearchSession* _searchSession;
	SCSearchStoryShareSession* _storyShareSession;
	SCSearchStorySharePopupPresenter* _storySharePopupPresenter;
	SCSearchReplyCameraPresenter* _replyCameraPresenter;
	SCLazy* _publicContentMiniProfilePresenterCreator;
	id<SCSearchIntent> _currentIntent;
	/*^block*/id _friendMiniProfileCallbackBlock;
	/*^block*/id _groupProfileCallbackBlock;
	/*^block*/id _discoverEditionDismissCallbackBlock;
	/*^block*/id _storyDismissCallbackBlock;
	/*^block*/id _subscribePublisherCallbackBlock;
	/*^block*/id _leaveGroupStoryCallbackBlock;
	SCSearchEventListenerAnnouncer* _eventAnnouncer;
	NSDictionary* _extraLoggingData;
	NSArray* _subIntentHandlers;
	SCOperaPresenter* _operaPresenter;
	SCOperaPlaylistEditionsPlugin* _editionsPlugin;
	SCSearchModerationHandler* _moderationHandler;
	SCLazy* _gallerySearchActionHandlerCreator;
	SCSearchCachedRequestManager* _cachedRequestManager;
	SCSearchStoriesEverywhereService* _storiesEverywhereService;
	SCMiniProfileActionHandler* _miniProfileActionHandler;
	id<SCSearchCardsIntentHandlerDelegate> _delegate;
	id<SCStartChatDelegate> _startChatDelegate;
	id<NavigationDelegate> _navigationDelegate;
	id<SendSnapNavigationControllerDelegate> _sendSnapNavigationControllerDelegate;
	id<SCSearchResultsViewControllerDelegate> _searchResultsViewControllerDelegate;
	UIViewController* _parentController;
	UINavigationController* _navigationController;
	SCSearchNavigationCoordinator* _searchNavigationCoordinator;
	SCMiniProfileViewController* _miniProfileViewController;
	SCAlertGear* _alertGear;
	AddFriendsDelegateObject* _addFriendsDelegate;

}

@property (assign,nonatomic,__weak) SCMiniProfileViewController * miniProfileViewController;                                    //@synthesize miniProfileViewController=_miniProfileViewController - In the implementation block
@property (nonatomic,retain) SCAlertGear * alertGear;                                                                           //@synthesize alertGear=_alertGear - In the implementation block
@property (nonatomic,retain) AddFriendsDelegateObject * addFriendsDelegate;                                                     //@synthesize addFriendsDelegate=_addFriendsDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<SCSearchCardsIntentHandlerDelegate> delegate;                                            //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic,__weak) id<SCStartChatDelegate> startChatDelegate;                                                  //@synthesize startChatDelegate=_startChatDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<NavigationDelegate> navigationDelegate;                                                  //@synthesize navigationDelegate=_navigationDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<SendSnapNavigationControllerDelegate> sendSnapNavigationControllerDelegate;              //@synthesize sendSnapNavigationControllerDelegate=_sendSnapNavigationControllerDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<SCSearchResultsViewControllerDelegate> searchResultsViewControllerDelegate;              //@synthesize searchResultsViewControllerDelegate=_searchResultsViewControllerDelegate - In the implementation block
@property (assign,nonatomic,__weak) UIViewController * parentController;                                                        //@synthesize parentController=_parentController - In the implementation block
@property (assign,nonatomic,__weak) UINavigationController * navigationController;                                              //@synthesize navigationController=_navigationController - In the implementation block
@property (assign,nonatomic,__weak) SCSearchNavigationCoordinator * searchNavigationCoordinator;                                //@synthesize searchNavigationCoordinator=_searchNavigationCoordinator - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)announcerIdentifier;
+(id)requestsContext;
-(void)didTriggerEventWithEventName:(id)arg1 announcerIdentifier:(id)arg2 extraData:(id)arg3 ;
-(BOOL)handleIntent:(id)arg1 ;
-(SCSearchNavigationCoordinator *)searchNavigationCoordinator;
-(void)setSearchNavigationCoordinator:(SCSearchNavigationCoordinator *)arg1 ;
-(void)setChatUsername:(id)arg1 chatPageSource:(long long)arg2 navigationAction:(long long)arg3 ;
-(void)navigateToChatView;
-(void)setSendSnapNavigationControllerDelegate:(id<SendSnapNavigationControllerDelegate>)arg1 ;
-(AddFriendsDelegateObject *)addFriendsDelegate;
-(void)setStartChatDelegate:(id<SCStartChatDelegate>)arg1 ;
-(void)setChatUsername:(id)arg1 deepLinkURL:(id)arg2 chatPageSource:(long long)arg3 navigationAction:(long long)arg4 ;
-(void)miniProfileController:(id)arg1 wantsToNavigateToChatWithDeepLinkURL:(id)arg2 ;
-(void)miniProfileViewControllerDidPressSettingsButton:(id)arg1 ;
-(void)miniProfileViewController:(id)arg1 didSendSnap:(id)arg2 ;
-(void)miniProfileViewControllerDidAddFriend:(id)arg1 friend:(id)arg2 ;
-(void)miniProfileViewControllerNeedsToLogPressSnapButton:(id)arg1 ;
-(void)miniProfileViewControllerDidOpenSendView:(id)arg1 ;
-(void)miniProfileViewControllerDidSelectOptionShareStoryURL:(id)arg1 ;
-(void)miniProfileViewControllerDidSelectOptionShowInsights:(id)arg1 ;
-(void)setAddFriendsDelegate:(AddFriendsDelegateObject *)arg1 ;
-(id<SCStartChatDelegate>)startChatDelegate;
-(void)setAlertGear:(SCAlertGear *)arg1 ;
-(id<SendSnapNavigationControllerDelegate>)sendSnapNavigationControllerDelegate;
-(SCAlertGear *)alertGear;
-(void)alertGear:(id)arg1 didSetDisplay:(id)arg2 friend:(id)arg3 shouldScroll:(BOOL)arg4 ;
-(BOOL)alertGear:(id)arg1 notificationStatusForFriend:(id)arg2 ;
-(void)alertGear:(id)arg1 didNotificationStatusChangeForFriend:(id)arg2 ;
-(void)customOperationForDeleteorIgnore:(id)arg1 ;
-(void)customOperationForBlock:(id)arg1 blockReasonId:(id)arg2 ;
-(void)customOperationForReport:(id)arg1 ;
-(void)groupMiniProfileControllerDidPressChatButton:(id)arg1 ;
-(void)groupMiniProfileControllerDidPressSnapButton:(id)arg1 ;
-(void)groupMiniProfileController:(id)arg1 wantsToNavigateToChatForFriend:(id)arg2 deepLinkURL:(id)arg3 ;
-(void)groupMiniProfileControllerDidUpdateGroup:(id)arg1 ;
-(void)groupMiniProfileController:(id)arg1 requestsAction:(long long)arg2 ;
-(void)removeFeedToChatTapDectionView;
-(BOOL)replyingToStoryWithChat;
-(void)didFollowThrough;
-(void)setGroupConversationById:(id)arg1 navigationAction:(long long)arg2 ;
-(void)replyWithParameter:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)navigateToChatViewAnimated:(BOOL)arg1 ;
-(void)setGroupConversationById:(id)arg1 deeplinkURL:(id)arg2 navigationAction:(long long)arg3 ;
-(void)browserViewIsClosing;
-(id)presentingViewControllerForSearchStoriesPresenter:(id)arg1 ;
-(BOOL)isCustomPresentationForSearchStoriesPresenter:(id)arg1 ;
-(void)searchStoryPresenterWillBeginPresentingStory:(id)arg1 ;
-(void)searchStoryPresenterDidFinishDismissingStory:(id)arg1 ;
-(SCMiniProfileViewController *)miniProfileViewController;
-(void)_leaveGroupStoryForPublication:(id)arg1 ;
-(void)searchModalPresenterPresentViewController:(id)arg1 animated:(BOOL)arg2 ;
-(void)searchMomentsOperaPresenterDidDismissStory:(id)arg1 ;
-(void)_presentGroupStorySettingsForPublication:(id)arg1 ;
-(void)searchModalPresenterDismissViewController:(id)arg1 animated:(BOOL)arg2 ;
-(void)storyMiniProfileViewControllerDidTapActionButton:(id)arg1 ;
-(id)storyMiniProfileViewControllerOperaDataModelToPresent:(id)arg1 ;
-(void)storyMiniProfileViewControllerDidSelectOptionShareStoryURL:(id)arg1 ;
-(void)storyMiniProfileViewControllerDidSelectOptionSendStory:(id)arg1 ;
-(void)_chatWithFriend:(id)arg1 ;
-(BOOL)handleIntent:(id)arg1 notification:(id)arg2 ;
-(BOOL)handleIntent:(id)arg1 notification:(id)arg2 notificationDismissed:(BOOL)arg3 ;
-(void)_chatWithGroupId:(id)arg1 ;
-(void)setSearchResultsViewControllerDelegate:(id<SCSearchResultsViewControllerDelegate>)arg1 ;
-(void)_presentStorySharePopupForDynamicStory:(id)arg1 withThumbnailSize:(CGSize)arg2 dynamicStorySourceView:(id)arg3 actionModel:(id)arg4 ;
-(void)_miniProfileActionHandler:(id)arg1 didUpdateSubscribeState:(unsigned long long)arg2 ;
-(void)_logSearchAction:(long long)arg1 forActionDestination:(id)arg2 ;
-(void)searchStorySharePopupPresenter:(id)arg1 didPressSendButtonWithDynamicStory:(id)arg2 coverImage:(id)arg3 ;
-(void)searchStorySharePopupPresenter:(id)arg1 didPressWatchNowButtonWithDynamicStory:(id)arg2 dynamicStorySourceView:(id)arg3 ;
-(id)presentingViewControllerForPopupPresenter:(id)arg1 ;
-(void)moderationHandler:(id)arg1 presentViewController:(id)arg2 ;
-(void)moderationHandler:(id)arg1 dismissViewController:(id)arg2 ;
-(void)_playDynamicStory:(id)arg1 withSourceView:(id)arg2 isCircleTransition:(BOOL)arg3 ;
-(void)_chatWithGroupId:(id)arg1 notification:(id)arg2 notificationDismissed:(BOOL)arg3 ;
-(void)_chatWithFriend:(id)arg1 notification:(id)arg2 deepLinkURL:(id)arg3 notificationDismissed:(BOOL)arg4 ;
-(void)_presentMiniProfileWithFriend:(id)arg1 ;
-(void)_presentGroupMiniProfileWithGroupId:(id)arg1 ;
-(void)_playFriendStory:(id)arg1 withSourceView:(id)arg2 viewLocation:(unsigned long long)arg3 isCircleTransition:(BOOL)arg4 ;
-(void)_handleBrowserIntentWithHtml:(id)arg1 url:(id)arg2 sourceView:(id)arg3 ;
-(void)_showMyContactsVC:(BOOL)arg1 skipPhoneVerification:(BOOL)arg2 ;
-(void)_presentNewSearchViewControllerWithSearchQuery:(id)arg1 ;
-(void)_updateExtraLoggingDataWithDict:(id)arg1 ;
-(void)_sendStoryWithDynamicStory:(id)arg1 coverImage:(id)arg2 ;
-(void)_playDynamicStories:(id)arg1 startIndex:(unsigned long long)arg2 withSourceView:(id)arg3 isCircleTransition:(BOOL)arg4 ;
-(void)_playPublisherStory:(id)arg1 withUrl:(id)arg2 withSourceView:(id)arg3 isTile:(BOOL)arg4 viewLocation:(long long)arg5 ;
-(void)_presentMiniProfileWithPublication:(id)arg1 ;
-(void)_fetchAndPlayDynamicStoryWithSuggestionQuery:(id)arg1 ;
-(id)_getDownloadContextFor:(id)arg1 ;
-(void)setMiniProfileViewController:(SCMiniProfileViewController *)arg1 ;
-(id)_loggingInfoAction:(long long)arg1 ;
-(void)navigateToDeeplink:(id)arg1 withSourceView:(id)arg2 ;
-(id<SCSearchResultsViewControllerDelegate>)searchResultsViewControllerDelegate;
-(void)_leaveGroupStoryCallback;
-(void)_logSubscribeState:(unsigned long long)arg1 forChannel:(id)arg2 ;
-(void)_performSendStory:(id)arg1 image:(id)arg2 ;
-(void)_chatWithFriend:(id)arg1 deepLinkURL:(id)arg2 ;
-(void)_subscribeDiscoverChannel:(id)arg1 ;
-(void)_callStoryDismissCallbackBlock;
-(id)fullScreenDummyPresentingViewController;
-(id)presentingViewControllerForMiniProfilePresenter:(id)arg1 ;
-(void)didTapDiscoverSubscribeButtonWithChannel:(id)arg1 ;
-(void)didTapWatchButtonWithFriendStories:(id)arg1 withSourceView:(id)arg2 ;
-(void)didTapWatchButtonWithPublication:(id)arg1 withSourceView:(id)arg2 ;
-(id)presentingViewControllerForSearchDiscoverStoriesPresenter:(id)arg1 ;
-(void)searchDiscoverStoriesPresenterDidDismissStory:(id)arg1 ;
-(void)setDelegate:(id<SCSearchCardsIntentHandlerDelegate>)arg1 ;
-(id<SCSearchCardsIntentHandlerDelegate>)delegate;
-(UINavigationController *)navigationController;
-(id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3 ;
-(id)animationControllerForDismissedController:(id)arg1 ;
-(void)setNavigationController:(UINavigationController *)arg1 ;
-(void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2 ;
-(id)userSession;
-(id<NavigationDelegate>)navigationDelegate;
-(void)setParentController:(UIViewController *)arg1 ;
-(UIViewController *)parentController;
-(id)initWithSession:(id)arg1 ;
-(void)tearDown;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(void)setNavigationDelegate:(id<NavigationDelegate>)arg1 ;
@end

