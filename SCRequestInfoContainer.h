/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:07 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLSessionTaskDelegate.h>
#import <libobjc.A.dylib/NSURLSessionDataDelegate.h>
#import <libobjc.A.dylib/NSURLSessionDownloadDelegate.h>

@protocol OS_dispatch_queue, SCRequestConcurrencyObserver;
@class NSObject, SCAPIRequestInfo, NSProgress, NSString;

@interface SCRequestInfoContainer : NSObject <NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate> {

	NSObject*<OS_dispatch_queue> _progressiveUpdateCallbackQueue;
	/*^block*/id _progressiveUpdateBlock;
	/*^block*/id _downloadProgressCallback;
	/*^block*/id _uploadProgressCallback;
	SCAPIRequestInfo* _requestInfo;
	NSProgress* _uploadProgress;
	NSProgress* _downloadProgress;
	id<SCRequestConcurrencyObserver> _concurrencyObserver;

}

@property (nonatomic,retain) SCAPIRequestInfo * requestInfo;                                    //@synthesize requestInfo=_requestInfo - In the implementation block
@property (nonatomic,retain) NSProgress * uploadProgress;                                       //@synthesize uploadProgress=_uploadProgress - In the implementation block
@property (nonatomic,retain) NSProgress * downloadProgress;                                     //@synthesize downloadProgress=_downloadProgress - In the implementation block
@property (nonatomic,retain) id<SCRequestConcurrencyObserver> concurrencyObserver;              //@synthesize concurrencyObserver=_concurrencyObserver - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)statusCodeErrorForRequest:(id)arg1 response:(id)arg2 data:(id)arg3 ;
-(void)setUploadProgress:(NSProgress *)arg1 ;
-(NSProgress *)uploadProgress;
-(void)setRequestConcurrencyObserver:(id)arg1 ;
-(void)monitorDownloadProgressWithCallback:(/*^block*/id)arg1 ;
-(void)monitorUploadProgressWithCallback:(/*^block*/id)arg1 ;
-(void)monitorProgressiveDownloadWithQueue:(id)arg1 callback:(/*^block*/id)arg2 ;
-(void)_progressiveUpdateDataTask:(id)arg1 data:(id)arg2 error:(id)arg3 completed:(BOOL)arg4 ;
-(id<SCRequestConcurrencyObserver>)concurrencyObserver;
-(void)setConcurrencyObserver:(id<SCRequestConcurrencyObserver>)arg1 ;
-(id)init;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5 ;
-(SCAPIRequestInfo *)requestInfo;
-(NSProgress *)downloadProgress;
-(void)setDownloadProgress:(NSProgress *)arg1 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4 ;
-(void)setRequestInfo:(SCAPIRequestInfo *)arg1 ;
@end

