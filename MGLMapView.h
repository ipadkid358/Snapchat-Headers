/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:45 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <UIKit/UIView.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <libobjc.A.dylib/GLKViewDelegate.h>
#import <libobjc.A.dylib/CLLocationManagerDelegate.h>
#import <Snapchat/MGLSMCalloutViewDelegate.h>
#import <Snapchat/MGLCalloutViewDelegate.h>
#import <Snapchat/MGLMultiPointDelegate.h>
#import <Snapchat/MGLAnnotationImageDelegate.h>

@protocol MGLMapViewDelegate, MGLCalloutView;
@class NSMutableArray, NSDate, CADisplayLink, MGLCompassDirectionFormatter, NSArray, NSMutableSet, MGLReachability, MGLStyle, MGLScaleBar, UIImageView, UIButton, MGLUserLocation, EAGLContext, GLKView, UITapGestureRecognizer, UIPanGestureRecognizer, UIPinchGestureRecognizer, UIRotationGestureRecognizer, UILongPressGestureRecognizer, NSMutableDictionary, UIView, MGLUserLocationAnnotationView, CLLocationManager, MGLMapViewProxyAccessibilityElement, MGLAnnotationContainerView, SCXOpenGLStyleLayer, NSURL, MGLMapCamera, NSString;

@interface MGLMapView : UIView <UIGestureRecognizerDelegate, GLKViewDelegate, CLLocationManagerDelegate, MGLSMCalloutViewDelegate, MGLCalloutViewDelegate, MGLMultiPointDelegate, MGLAnnotationImageDelegate> {

	Map* _mbglMap;
	MBGLView* _mbglView;
	unique_ptr<MGLRenderFrontend, std::__1::default_delete<MGLRenderFrontend> >* _rendererFrontend;
	shared_ptr<mbgl::ThreadPool>* _mbglThreadPool;
	BOOL _opaque;
	NSMutableArray* _bundledStyleURLs;
	unordered_map<unsigned int, MGLAnnotationContext, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MGLAnnotationContext> > >* _annotationContextsByAnnotationTag;
	map<id<MGLAnnotation>, unsigned int, std::__1::less<id<MGLAnnotation> >, std::__1::allocator<std::__1::pair<const id<MGLAnnotation>, unsigned int> > >* _annotationTagsByAnnotation;
	unsigned _selectedAnnotationTag;
	BOOL _userLocationAnnotationIsSelected;
	CGSize _unionedAnnotationRepresentationSize;
	CGSize _largestAnnotationViewSize;
	vector<unsigned int, std::__1::allocator<unsigned int> >* _annotationsNearbyLastTap;
	CGPoint _initialImplicitCalloutViewOffset;
	NSDate* _userLocationAnimationCompletionDate;
	BOOL _isChangingAnnotationLayers;
	BOOL _isWaitingForRedundantReachableNotification;
	BOOL _isTargetingInterfaceBuilder;
	double _pendingLatitude;
	double _pendingLongitude;
	CADisplayLink* _displayLink;
	BOOL _needsDisplayRefresh;
	unsigned long long _changeDelimiterSuppressionDepth;
	CLLocationCoordinate2D _previousPinchCenterCoordinate;
	unsigned long long _previousPinchNumberOfTouches;
	double _distanceFromOldUserLocation;
	BOOL _delegateHasAlphasForShapeAnnotations;
	BOOL _delegateHasStrokeColorsForShapeAnnotations;
	BOOL _delegateHasFillColorsForShapeAnnotations;
	BOOL _delegateHasLineWidthsForShapeAnnotations;
	MGLCompassDirectionFormatter* _accessibilityCompassFormatter;
	NSArray* _visiblePlaceFeatures;
	NSArray* _visibleRoadFeatures;
	NSMutableSet* _featureAccessibilityElements;
	BOOL _accessibilityValueAnnouncementIsPending;
	MGLReachability* _reachability;
	BOOL _showsUserLocation;
	BOOL _showsUserHeadingIndicator;
	BOOL _displayHeadingCalibration;
	BOOL _zoomEnabled;
	BOOL _scrollEnabled;
	BOOL _rotateEnabled;
	BOOL _pitchEnabled;
	BOOL _dormant;
	id<MGLMapViewDelegate> _delegate;
	MGLStyle* _style;
	MGLScaleBar* _scaleBar;
	UIImageView* _compassView;
	UIImageView* _logoView;
	UIButton* _attributionButton;
	MGLUserLocation* _userLocation;
	unsigned long long _userTrackingMode;
	unsigned long long _userLocationVerticalAlignment;
	double _decelerationRate;
	EAGLContext* _context;
	GLKView* _glView;
	UIImageView* _glSnapshotView;
	NSMutableArray* _scaleBarConstraints;
	NSMutableArray* _compassViewConstraints;
	NSMutableArray* _logoViewConstraints;
	NSMutableArray* _attributionButtonConstraints;
	UITapGestureRecognizer* _singleTapGestureRecognizer;
	UITapGestureRecognizer* _doubleTap;
	UITapGestureRecognizer* _twoFingerTap;
	UIPanGestureRecognizer* _pan;
	UIPinchGestureRecognizer* _pinch;
	UIRotationGestureRecognizer* _rotate;
	UILongPressGestureRecognizer* _quickZoom;
	UIPanGestureRecognizer* _twoFingerDrag;
	NSMutableDictionary* _annotationImagesByIdentifier;
	UIView*<MGLCalloutView> _calloutViewForSelectedAnnotation;
	MGLUserLocationAnnotationView* _userLocationAnnotationView;
	unsigned long long _userTrackingState;
	CLLocationManager* _locationManager;
	double _scale;
	double _angle;
	double _quickZoomStart;
	MGLMapViewProxyAccessibilityElement* _mapViewProxyAccessibilityElement;
	MGLAnnotationContainerView* _annotationContainerView;
	NSMutableDictionary* _annotationViewReuseQueueByIdentifier;
	CLLocationCoordinate2D _targetCoordinate;
	UIEdgeInsets _contentInset;

}

@property (assign,nonatomic) double latitude; 
@property (assign,nonatomic) double longitude; 
@property (assign,nonatomic) double zoomLevel; 
@property (assign,nonatomic) double minimumZoomLevel; 
@property (assign,nonatomic) double maximumZoomLevel; 
@property (assign,nonatomic) BOOL allowsZooming; 
@property (assign,nonatomic) BOOL allowsScrolling; 
@property (assign,nonatomic) BOOL allowsRotating; 
@property (assign,nonatomic) BOOL allowsTilting; 
@property (assign,nonatomic) BOOL showsUserLocation; 
@property (assign,nonatomic) BOOL showsHeading; 
@property (assign,nonatomic,__weak) SCXOpenGLStyleLayer * legacyStyleLayer; 
@property (nonatomic,readonly) UIPanGestureRecognizer * mgl_panGestureRecognizer; 
@property (nonatomic,readonly) UIPinchGestureRecognizer * mgl_pinchGestureRecognizer; 
@property (nonatomic,readonly) UIRotationGestureRecognizer * mgl_rotationGestureRecognizer; 
@property (nonatomic,readonly) UITapGestureRecognizer * mgl_doubleTapGestureRecognizer; 
@property (nonatomic,readonly) UITapGestureRecognizer * mgl_singleTapGestureRecognizer; 
@property (nonatomic,readonly) UITapGestureRecognizer * mgl_twoFingerTapGestureRecognizer; 
@property (nonatomic,readonly) UIPanGestureRecognizer * mgl_twoFingerPanGestureRecognizer; 
@property (nonatomic,readonly) UILongPressGestureRecognizer * mgl_quickZoomGestureRecognizer; 
@property (nonatomic,retain) EAGLContext * context;                                                               //@synthesize context=_context - In the implementation block
@property (nonatomic,retain) GLKView * glView;                                                                    //@synthesize glView=_glView - In the implementation block
@property (nonatomic,retain) UIImageView * glSnapshotView;                                                        //@synthesize glSnapshotView=_glSnapshotView - In the implementation block
@property (nonatomic,retain) NSMutableArray * scaleBarConstraints;                                                //@synthesize scaleBarConstraints=_scaleBarConstraints - In the implementation block
@property (nonatomic,retain) MGLScaleBar * scaleBar;                                                              //@synthesize scaleBar=_scaleBar - In the implementation block
@property (nonatomic,retain) UIImageView * compassView;                                                           //@synthesize compassView=_compassView - In the implementation block
@property (nonatomic,retain) NSMutableArray * compassViewConstraints;                                             //@synthesize compassViewConstraints=_compassViewConstraints - In the implementation block
@property (nonatomic,retain) UIImageView * logoView;                                                              //@synthesize logoView=_logoView - In the implementation block
@property (nonatomic,retain) NSMutableArray * logoViewConstraints;                                                //@synthesize logoViewConstraints=_logoViewConstraints - In the implementation block
@property (nonatomic,retain) UIButton * attributionButton;                                                        //@synthesize attributionButton=_attributionButton - In the implementation block
@property (nonatomic,retain) NSMutableArray * attributionButtonConstraints;                                       //@synthesize attributionButtonConstraints=_attributionButtonConstraints - In the implementation block
@property (nonatomic,retain) MGLStyle * style;                                                                    //@synthesize style=_style - In the implementation block
@property (nonatomic,retain) UITapGestureRecognizer * singleTapGestureRecognizer;                                 //@synthesize singleTapGestureRecognizer=_singleTapGestureRecognizer - In the implementation block
@property (nonatomic,retain) UITapGestureRecognizer * doubleTap;                                                  //@synthesize doubleTap=_doubleTap - In the implementation block
@property (nonatomic,retain) UITapGestureRecognizer * twoFingerTap;                                               //@synthesize twoFingerTap=_twoFingerTap - In the implementation block
@property (nonatomic,retain) UIPanGestureRecognizer * pan;                                                        //@synthesize pan=_pan - In the implementation block
@property (nonatomic,retain) UIPinchGestureRecognizer * pinch;                                                    //@synthesize pinch=_pinch - In the implementation block
@property (nonatomic,retain) UIRotationGestureRecognizer * rotate;                                                //@synthesize rotate=_rotate - In the implementation block
@property (nonatomic,retain) UILongPressGestureRecognizer * quickZoom;                                            //@synthesize quickZoom=_quickZoom - In the implementation block
@property (nonatomic,retain) UIPanGestureRecognizer * twoFingerDrag;                                              //@synthesize twoFingerDrag=_twoFingerDrag - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * annotationImagesByIdentifier;                                  //@synthesize annotationImagesByIdentifier=_annotationImagesByIdentifier - In the implementation block
@property (nonatomic,retain) UIView*<MGLCalloutView> calloutViewForSelectedAnnotation;                            //@synthesize calloutViewForSelectedAnnotation=_calloutViewForSelectedAnnotation - In the implementation block
@property (nonatomic,retain) MGLUserLocationAnnotationView * userLocationAnnotationView;                          //@synthesize userLocationAnnotationView=_userLocationAnnotationView - In the implementation block
@property (assign,nonatomic) unsigned long long userTrackingState;                                                //@synthesize userTrackingState=_userTrackingState - In the implementation block
@property (nonatomic,retain) CLLocationManager * locationManager;                                                 //@synthesize locationManager=_locationManager - In the implementation block
@property (assign,nonatomic) double scale;                                                                        //@synthesize scale=_scale - In the implementation block
@property (assign,nonatomic) double angle;                                                                        //@synthesize angle=_angle - In the implementation block
@property (assign,nonatomic) double quickZoomStart;                                                               //@synthesize quickZoomStart=_quickZoomStart - In the implementation block
@property (assign,getter=isDormant,nonatomic) BOOL dormant;                                                       //@synthesize dormant=_dormant - In the implementation block
@property (getter=isRotationAllowed,nonatomic,readonly) BOOL rotationAllowed; 
@property (nonatomic,retain) MGLMapViewProxyAccessibilityElement * mapViewProxyAccessibilityElement;              //@synthesize mapViewProxyAccessibilityElement=_mapViewProxyAccessibilityElement - In the implementation block
@property (nonatomic,retain) MGLAnnotationContainerView * annotationContainerView;                                //@synthesize annotationContainerView=_annotationContainerView - In the implementation block
@property (nonatomic,retain) MGLUserLocation * userLocation;                                                      //@synthesize userLocation=_userLocation - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * annotationViewReuseQueueByIdentifier;                          //@synthesize annotationViewReuseQueueByIdentifier=_annotationViewReuseQueueByIdentifier - In the implementation block
@property (assign,nonatomic,__weak) id<MGLMapViewDelegate> delegate;                                              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) NSArray * bundledStyleURLs; 
@property (nonatomic,retain) NSURL * styleURL; 
@property (nonatomic,retain) NSArray * styleClasses; 
@property (assign,nonatomic) BOOL showsUserLocation;                                                              //@synthesize showsUserLocation=_showsUserLocation - In the implementation block
@property (getter=isUserLocationVisible,nonatomic,readonly) BOOL userLocationVisible; 
@property (assign,nonatomic) unsigned long long userTrackingMode;                                                 //@synthesize userTrackingMode=_userTrackingMode - In the implementation block
@property (assign,nonatomic) unsigned long long userLocationVerticalAlignment;                                    //@synthesize userLocationVerticalAlignment=_userLocationVerticalAlignment - In the implementation block
@property (assign,nonatomic) BOOL showsUserHeadingIndicator;                                                      //@synthesize showsUserHeadingIndicator=_showsUserHeadingIndicator - In the implementation block
@property (assign,nonatomic) BOOL displayHeadingCalibration;                                                      //@synthesize displayHeadingCalibration=_displayHeadingCalibration - In the implementation block
@property (assign,nonatomic) CLLocationCoordinate2D targetCoordinate;                                             //@synthesize targetCoordinate=_targetCoordinate - In the implementation block
@property (assign,getter=isZoomEnabled,nonatomic) BOOL zoomEnabled;                                               //@synthesize zoomEnabled=_zoomEnabled - In the implementation block
@property (assign,getter=isScrollEnabled,nonatomic) BOOL scrollEnabled;                                           //@synthesize scrollEnabled=_scrollEnabled - In the implementation block
@property (assign,getter=isRotateEnabled,nonatomic) BOOL rotateEnabled;                                           //@synthesize rotateEnabled=_rotateEnabled - In the implementation block
@property (assign,getter=isPitchEnabled,nonatomic) BOOL pitchEnabled;                                             //@synthesize pitchEnabled=_pitchEnabled - In the implementation block
@property (assign,nonatomic) double decelerationRate;                                                             //@synthesize decelerationRate=_decelerationRate - In the implementation block
@property (assign,nonatomic) CLLocationCoordinate2D centerCoordinate; 
@property (assign,nonatomic) double direction; 
@property (assign,nonatomic) MGLCoordinateBounds visibleCoordinateBounds; 
@property (nonatomic,copy) MGLMapCamera * camera; 
@property (assign,nonatomic) UIEdgeInsets contentInset;                                                           //@synthesize contentInset=_contentInset - In the implementation block
@property (nonatomic,readonly) NSArray * annotations; 
@property (nonatomic,readonly) NSArray * visibleAnnotations; 
@property (nonatomic,copy) NSArray * selectedAnnotations; 
@property (nonatomic,readonly) NSArray * overlays; 
@property (assign,nonatomic) unsigned long long debugMask; 
@property (assign,getter=isDebugActive,nonatomic) BOOL debugActive; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)resourceImageNamed:(id)arg1 ;
+(id)keyPathsForValuesAffectingStyle;
+(id)keyPathsForValuesAffectingStyleURL;
+(id)keyPathsForValuesAffectingZoomEnabled;
+(id)keyPathsForValuesAffectingScrollEnabled;
+(id)keyPathsForValuesAffectingRotateEnabled;
+(id)keyPathsForValuesAffectingPitchEnabled;
+(id)keyPathsForValuesAffectingCenterCoordinate;
+(id)keyPathsForValuesAffectingZoomLevel;
+(id)keyPathsForValuesAffectingDirection;
+(id)keyPathsForValuesAffectingPitch;
+(id)keyPathsForValuesAffectingCamera;
+(id)keyPathsForValuesAffectingUserLocation;
+(id)keyPathsForValuesAffectingStyleURL__;
+(id)keyPathsForValuesAffectingLatitude;
+(id)keyPathsForValuesAffectingLongitude;
+(id)keyPathsForValuesAffectingAllowsZooming;
+(id)keyPathsForValuesAffectingAllowsScrolling;
+(id)keyPathsForValuesAffectingAllowsRotating;
+(id)keyPathsForValuesAffectingAllowsTilting;
+(id)keyPathsForValuesAffectingShowsHeading;
+(CGSize)mapScreenshotSizeForGeofence:(CGRect)arg1 ;
-(NSURL *)styleURL;
-(void)calloutViewClicked:(id)arg1 ;
-(BOOL)calloutViewShouldHighlight:(id)arg1 ;
-(void)calloutViewWillAppear:(id)arg1 ;
-(void)calloutViewDidAppear:(id)arg1 ;
-(void)annotationImageNeedsRedisplay:(id)arg1 ;
-(void)setStyleURL:(NSURL *)arg1 ;
-(void)createGLView;
-(void)setDormant:(BOOL)arg1 ;
-(void)handlePinchGesture:(id)arg1 ;
-(void)handleRotateGesture:(id)arg1 ;
-(void)handleDoubleTapGesture:(id)arg1 ;
-(void)handleSingleTapGesture:(id)arg1 ;
-(void)handleTwoFingerDragGesture:(id)arg1 ;
-(void)handleTwoFingerTapGesture:(id)arg1 ;
-(void)willTerminate;
-(void)sleepGL:(id)arg1 ;
-(void)wakeGL:(id)arg1 ;
-(GLKView *)glView;
-(void)validateDisplayLink;
-(BOOL)isDormant;
-(void)updateUserLocationAnnotationView;
-(MGLScaleBar *)scaleBar;
-(BOOL)showsUserHeadingIndicator;
-(void)updateHeadingForDeviceOrientation;
-(void)setContentInset:(UIEdgeInsets)arg1 animated:(BOOL)arg2 ;
-(void)_setCenterCoordinate:(CLLocationCoordinate2D)arg1 animated:(BOOL)arg2 ;
-(void)didUpdateLocationWithUserTrackingAnimated:(BOOL)arg1 ;
-(void)updateFromDisplayLink;
-(void)validateLocationServices;
-(UIImageView *)glSnapshotView;
-(void)setGlSnapshotView:(UIImageView *)arg1 ;
-(unsigned long long)debugMask;
-(void)updateTintColorForView:(id)arg1 ;
-(MGLAnnotationContainerView *)annotationContainerView;
-(void)resetNorthAnimated:(BOOL)arg1 ;
-(unsigned long long)userTrackingState;
-(void)cameraWillChangeAnimated:(BOOL)arg1 ;
-(void)cameraDidChangeAnimated:(BOOL)arg1 ;
-(void)trackGestureEvent:(id)arg1 forRecognizer:(id)arg2 ;
-(void)notifyGestureDidBegin;
-(id)cameraByPanningWithTranslation:(CGPoint)arg1 panGesture:(id)arg2 ;
-(void)cameraIsChanging;
-(void)notifyGestureDidEndWithDrift:(BOOL)arg1 ;
-(CGPoint)anchorPointForGesture:(id)arg1 ;
-(id)cameraByZoomingToZoomLevel:(double)arg1 aroundAnchorPoint:(CGPoint)arg2 ;
-(void)unrotateIfNeededForGesture;
-(BOOL)isRotationAllowed;
-(UIPinchGestureRecognizer *)pinch;
-(id)cameraByRotatingToDirection:(double)arg1 aroundAnchorPoint:(CGPoint)arg2 ;
-(void)animateWithDelay:(double)arg1 animations:(/*^block*/id)arg2 ;
-(MGLMapViewProxyAccessibilityElement *)mapViewProxyAccessibilityElement;
-(MGLUserLocationAnnotationView *)userLocationAnnotationView;
-(id)annotationForGestureRecognizer:(id)arg1 persistingResults:(BOOL)arg2 ;
-(CGRect)positioningRectForAnnotation:(id)arg1 defaultCalloutPoint:(CGPoint)arg2 ;
-(void)selectAnnotation:(id)arg1 animated:(BOOL)arg2 calloutPositioningRect:(CGRect)arg3 ;
-(unsigned)annotationTagAtPoint:(CGPoint)arg1 persistingResults:(BOOL)arg2 ;
-(id)annotationWithTag:(unsigned)arg1 ;
-(void)setQuickZoomStart:(double)arg1 ;
-(double)quickZoomStart;
-(id)cameraByTiltingToPitch:(double)arg1 ;
-(id)cameraThatFitsCoordinateBounds:(MGLCoordinateBounds)arg1 ;
-(id)cameraForCameraOptions:(const CameraOptions*)arg1 ;
-(CGPoint)userLocationAnnotationViewCenter;
-(CGPoint)contentCenter;
-(double)angleBetweenPoints:(CGPoint)arg1 east:(CGPoint)arg2 ;
-(id)imageOfAnnotationWithTag:(unsigned)arg1 ;
-(void)updateCalloutView;
-(void)setDebugMask:(unsigned long long)arg1 ;
-(BOOL)isDebugActive;
-(void)setDebugActive:(BOOL)arg1 ;
-(UITapGestureRecognizer *)doubleTap;
-(UILongPressGestureRecognizer *)quickZoom;
-(UITapGestureRecognizer *)twoFingerTap;
-(UIPanGestureRecognizer *)twoFingerDrag;
-(void)setCenterCoordinate:(CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 direction:(double)arg3 animated:(BOOL)arg4 ;
-(void)setCenterCoordinate:(CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 direction:(double)arg3 animated:(BOOL)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)_setCenterCoordinate:(CLLocationCoordinate2D)arg1 edgePadding:(UIEdgeInsets)arg2 zoomLevel:(double)arg3 direction:(double)arg4 duration:(double)arg5 animationTimingFunction:(id)arg6 completionHandler:(/*^block*/id)arg7 ;
-(void)setZoomLevel:(double)arg1 animated:(BOOL)arg2 ;
-(MGLCoordinateBounds)convertRect:(CGRect)arg1 toCoordinateBoundsFromView:(id)arg2 ;
-(void)setVisibleCoordinateBounds:(MGLCoordinateBounds)arg1 animated:(BOOL)arg2 ;
-(void)setVisibleCoordinateBounds:(MGLCoordinateBounds)arg1 edgePadding:(UIEdgeInsets)arg2 animated:(BOOL)arg3 ;
-(void)setVisibleCoordinates:(const CLLocationCoordinate2D*)arg1 count:(unsigned long long)arg2 edgePadding:(UIEdgeInsets)arg3 animated:(BOOL)arg4 ;
-(void)setVisibleCoordinates:(const CLLocationCoordinate2D*)arg1 count:(unsigned long long)arg2 edgePadding:(UIEdgeInsets)arg3 direction:(double)arg4 animated:(BOOL)arg5 ;
-(void)setVisibleCoordinates:(const CLLocationCoordinate2D*)arg1 count:(unsigned long long)arg2 edgePadding:(UIEdgeInsets)arg3 direction:(double)arg4 duration:(double)arg5 animationTimingFunction:(id)arg6 ;
-(void)setVisibleCoordinates:(const CLLocationCoordinate2D*)arg1 count:(unsigned long long)arg2 edgePadding:(UIEdgeInsets)arg3 direction:(double)arg4 duration:(double)arg5 animationTimingFunction:(id)arg6 completionHandler:(/*^block*/id)arg7 ;
-(void)_setVisibleCoordinates:(const CLLocationCoordinate2D*)arg1 count:(unsigned long long)arg2 edgePadding:(UIEdgeInsets)arg3 direction:(double)arg4 duration:(double)arg5 animationTimingFunction:(id)arg6 completionHandler:(/*^block*/id)arg7 ;
-(void)_setDirection:(double)arg1 animated:(BOOL)arg2 ;
-(void)setCamera:(id)arg1 withDuration:(double)arg2 animationTimingFunction:(id)arg3 ;
-(void)setCamera:(id)arg1 withDuration:(double)arg2 animationTimingFunction:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)setCamera:(id)arg1 withDuration:(double)arg2 animationTimingFunction:(id)arg3 edgePadding:(UIEdgeInsets)arg4 completionHandler:(/*^block*/id)arg5 ;
-(CameraOptions)cameraOptionsObjectForAnimatingToCamera:(id)arg1 edgePadding:(UIEdgeInsets)arg2 ;
-(void)flyToCamera:(id)arg1 withDuration:(double)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)flyToCamera:(id)arg1 withDuration:(double)arg2 peakAltitude:(double)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_flyToCamera:(id)arg1 edgePadding:(UIEdgeInsets)arg2 withDuration:(double)arg3 peakAltitude:(double)arg4 completionHandler:(/*^block*/id)arg5 ;
-(id)cameraThatFitsCoordinateBounds:(MGLCoordinateBounds)arg1 edgePadding:(UIEdgeInsets)arg2 ;
-(LatLng)convertPoint:(CGPoint)arg1 toLatLngFromView:(id)arg2 ;
-(CGPoint)convertLatLng:(LatLng)arg1 toPointToView:(id)arg2 ;
-(LatLngBounds)convertRect:(CGRect)arg1 toLatLngBoundsFromView:(id)arg2 ;
-(CGRect)convertLatLngBounds:(LatLngBounds)arg1 toRectToView:(id)arg2 ;
-(double)metersPerPointAtLatitude:(double)arg1 ;
-(NSArray *)styleClasses;
-(void)setStyleClasses:(id)arg1 transitionDuration:(double)arg2 ;
-(BOOL)hasStyleClass:(id)arg1 ;
-(void)addStyleClass:(id)arg1 ;
-(void)removeStyleClass:(id)arg1 ;
-(id)visibleAnnotationsInRect:(CGRect)arg1 ;
-(vector<unsigned int, std::__1::allocator<unsigned int> >*)annotationTagsInRect:(CGRect)arg1 ;
-(vector<unsigned int, std::__1::allocator<unsigned int> >*)shapeAnnotationTagsInRect:(CGRect)arg1 ;
-(id)annotationViewForAnnotation:(id)arg1 ;
-(id)invisibleAnnotationImage;
-(NSMutableDictionary *)annotationImagesByIdentifier;
-(void)installAnnotationImage:(id)arg1 ;
-(id)dequeueReusableAnnotationImageWithIdentifier:(id)arg1 ;
-(id)defaultAnnotationImage;
-(void)updateAnnotationContainerViewWithAnnotationViews:(id)arg1 ;
-(void)setAnnotationContainerView:(MGLAnnotationContainerView *)arg1 ;
-(unsigned)annotationTagForAnnotation:(id)arg1 ;
-(id)annotationViewReuseQueueForIdentifier:(id)arg1 ;
-(MGLCoordinateBounds)visibleCoordinateBounds;
-(id)calloutViewForAnnotation:(id)arg1 ;
-(void)setCalloutViewForSelectedAnnotation:(UIView*<MGLCalloutView>)arg1 ;
-(void)handleCalloutAccessoryTapGesture:(id)arg1 ;
-(CGRect)positioningRectForCalloutForAnnotationWithTag:(unsigned)arg1 ;
-(CGRect)frameOfImage:(id)arg1 centeredAtCoordinate:(CLLocationCoordinate2D)arg2 ;
-(UIView*<MGLCalloutView>)calloutViewForSelectedAnnotation;
-(void)showAnnotations:(id)arg1 edgePadding:(UIEdgeInsets)arg2 animated:(BOOL)arg3 ;
-(void)applyIconIdentifier:(id)arg1 toAnnotationsWithImageReuseIdentifier:(id)arg2 ;
-(void)validateUserHeadingUpdating;
-(void)setUserLocationAnnotationView:(MGLUserLocationAnnotationView *)arg1 ;
-(void)setUserTrackingState:(unsigned long long)arg1 ;
-(double)currentMinimumZoom;
-(void)locationManager:(id)arg1 didUpdateLocations:(id)arg2 animated:(BOOL)arg3 ;
-(void)setUserLocationVerticalAlignment:(unsigned long long)arg1 animated:(BOOL)arg2 ;
-(void)setTargetCoordinate:(CLLocationCoordinate2D)arg1 animated:(BOOL)arg2 ;
-(CLLocationCoordinate2D)targetCoordinate;
-(void)updateUserLocationAnnotationViewAnimatedWithDuration:(double)arg1 ;
-(void)didUpdateLocationWithTargetAnimated:(BOOL)arg1 ;
-(void)didUpdateLocationSignificantlyAnimated:(BOOL)arg1 ;
-(void)didUpdateLocationIncrementallyAnimated:(BOOL)arg1 ;
-(void)unrotateIfNeededAnimated:(BOOL)arg1 ;
-(UIEdgeInsets)edgePaddingForFollowing;
-(double)directionByFollowingWithCourse;
-(UIEdgeInsets)edgePaddingForFollowingWithCourse;
-(unsigned long long)userLocationVerticalAlignment;
-(BOOL)displayHeadingCalibration;
-(id)visibleFeaturesAtPoint:(CGPoint)arg1 inStyleLayersWithIdentifiers:(id)arg2 ;
-(id)visibleFeaturesAtPoint:(CGPoint)arg1 inStyleLayersWithIdentifiers:(id)arg2 predicate:(id)arg3 ;
-(id)visibleFeaturesInRect:(CGRect)arg1 inStyleLayersWithIdentifiers:(id)arg2 ;
-(id)visibleFeaturesInRect:(CGRect)arg1 inStyleLayersWithIdentifiers:(id)arg2 predicate:(id)arg3 ;
-(BOOL)isSuppressingChangeDelimiters;
-(void)updateCompass;
-(void)announceAccessibilityValue;
-(void)updateAnnotationViews;
-(void)enqueueAnnotationViewForAnnotationContext:(MGLAnnotationContext*)arg1 ;
-(void)calloutViewTapped:(id)arg1 ;
-(double)alphaForShapeAnnotation:(id)arg1 ;
-(Color)strokeColorForShapeAnnotation:(id)arg1 ;
-(Color)fillColorForPolygonAnnotation:(id)arg1 ;
-(double)lineWidthForPolylineAnnotation:(id)arg1 ;
-(id)initWithFrame:(CGRect)arg1 styleURL:(id)arg2 ;
-(void)reloadStyle:(id)arg1 ;
-(Map*)mbglMap;
-(Size)framebufferSize;
-(void)setNeedsGLDisplay;
-(void)handleCompassTapGesture:(id)arg1 ;
-(void)handleQuickZoomGesture:(id)arg1 ;
-(void)toggleDebug;
-(void)resetNorth;
-(void)resetPosition;
-(void)emptyMemoryCache;
-(void)setZoomLevel:(double)arg1 coordinate:(CLLocationCoordinate2D)arg2 ;
-(void)setZoomLevel:(double)arg1 center:(CGPoint)arg2 ;
-(void)setMaximumZoomLevel:(double)arg1 ;
-(void)setVisibleCoordinateBounds:(MGLCoordinateBounds)arg1 ;
-(void)setVisibleCoordinateBounds:(MGLCoordinateBounds)arg1 edgePadding:(UIEdgeInsets)arg2 direction:(double)arg3 animated:(BOOL)arg4 ;
-(void)flyToCamera:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(id)cameraThatFitsShape:(id)arg1 direction:(double)arg2 edgePadding:(UIEdgeInsets)arg3 ;
-(void*)matrixForConvertCoordinate;
-(void)freeMatrixForConvertCoordinate:(void*)arg1 ;
-(CGPoint)convertCoordinate:(CLLocationCoordinate2D)arg1 withMatrix:(void*)arg2 toPointToView:(id)arg3 ;
-(CGRect)convertCoordinateBounds:(MGLCoordinateBounds)arg1 toRectToView:(id)arg2 ;
-(double)metersPerPixelAtLatitude:(double)arg1 ;
-(NSArray *)bundledStyleURLs;
-(id)styleID;
-(void)setStyleID:(id)arg1 ;
-(void)setStyleClasses:(NSArray *)arg1 ;
-(NSArray *)visibleAnnotations;
-(void)setUserLocationVerticalAlignment:(unsigned long long)arg1 ;
-(void)setTargetCoordinate:(CLLocationCoordinate2D)arg1 ;
-(void)setShowsUserHeadingIndicator:(BOOL)arg1 ;
-(id)visibleFeaturesAtPoint:(CGPoint)arg1 ;
-(id)visibleFeaturesInRect:(CGRect)arg1 ;
-(void)mapViewWillStartLoadingMap;
-(void)mapViewDidFinishLoadingMap;
-(void)mapViewDidFailLoadingMapWithError:(id)arg1 ;
-(void)mapViewWillStartRenderingFrame;
-(void)mapViewDidFinishRenderingFrameFullyRendered:(BOOL)arg1 ;
-(void)mapViewWillStartRenderingMap;
-(void)mapViewDidFinishRenderingMapFullyRendered:(BOOL)arg1 ;
-(void)didFinishLoadingStyle;
-(BOOL)isFullyLoaded;
-(void)setScaleBar:(MGLScaleBar *)arg1 ;
-(void)setCompassView:(UIImageView *)arg1 ;
-(void)setDisplayHeadingCalibration:(BOOL)arg1 ;
-(void)setGlView:(GLKView *)arg1 ;
-(NSMutableArray *)scaleBarConstraints;
-(void)setScaleBarConstraints:(NSMutableArray *)arg1 ;
-(NSMutableArray *)compassViewConstraints;
-(void)setCompassViewConstraints:(NSMutableArray *)arg1 ;
-(NSMutableArray *)logoViewConstraints;
-(void)setLogoViewConstraints:(NSMutableArray *)arg1 ;
-(NSMutableArray *)attributionButtonConstraints;
-(void)setAttributionButtonConstraints:(NSMutableArray *)arg1 ;
-(UITapGestureRecognizer *)singleTapGestureRecognizer;
-(void)setSingleTapGestureRecognizer:(UITapGestureRecognizer *)arg1 ;
-(void)setDoubleTap:(UITapGestureRecognizer *)arg1 ;
-(void)setTwoFingerTap:(UITapGestureRecognizer *)arg1 ;
-(void)setPinch:(UIPinchGestureRecognizer *)arg1 ;
-(void)setRotate:(UIRotationGestureRecognizer *)arg1 ;
-(void)setQuickZoom:(UILongPressGestureRecognizer *)arg1 ;
-(void)setTwoFingerDrag:(UIPanGestureRecognizer *)arg1 ;
-(void)setAnnotationImagesByIdentifier:(NSMutableDictionary *)arg1 ;
-(void)setMapViewProxyAccessibilityElement:(MGLMapViewProxyAccessibilityElement *)arg1 ;
-(NSMutableDictionary *)annotationViewReuseQueueByIdentifier;
-(void)setAnnotationViewReuseQueueByIdentifier:(NSMutableDictionary *)arg1 ;
-(id)styleURL__;
-(void)setStyleURL__:(id)arg1 ;
-(BOOL)allowsZooming;
-(void)setAllowsZooming:(BOOL)arg1 ;
-(BOOL)allowsRotating;
-(void)setAllowsRotating:(BOOL)arg1 ;
-(BOOL)allowsTilting;
-(void)setAllowsTilting:(BOOL)arg1 ;
-(BOOL)showsHeading;
-(void)setShowsHeading:(BOOL)arg1 ;
-(BOOL)_didGrabGestureRecognizers;
-(void)_grabGestureRecognizers;
-(void)setGestureMappings:(id)arg1 ;
-(id)gestureMappings;
-(void)_grabGestureRecognizersIfNeeded;
-(id)_fetchGestureForKey:(id)arg1 ;
-(UIPanGestureRecognizer *)mgl_panGestureRecognizer;
-(UIPinchGestureRecognizer *)mgl_pinchGestureRecognizer;
-(UIRotationGestureRecognizer *)mgl_rotationGestureRecognizer;
-(UITapGestureRecognizer *)mgl_doubleTapGestureRecognizer;
-(UITapGestureRecognizer *)mgl_singleTapGestureRecognizer;
-(UITapGestureRecognizer *)mgl_twoFingerTapGestureRecognizer;
-(UIPanGestureRecognizer *)mgl_twoFingerPanGestureRecognizer;
-(UILongPressGestureRecognizer *)mgl_quickZoomGestureRecognizer;
-(SCXOpenGLStyleLayer *)legacyStyleLayer;
-(void)setLegacyStyleLayer:(SCXOpenGLStyleLayer *)arg1 ;
-(void)insertCustomStyleLayerWithIdentifier:(id)arg1 preparationHandler:(/*^block*/id)arg2 drawingHandler:(/*^block*/id)arg3 completionHandler:(/*^block*/id)arg4 belowStyleLayerWithIdentifier:(id)arg5 ;
-(void)removeCustomStyleLayerWithIdentifier:(id)arg1 ;
-(void)setCustomStyleLayersNeedDisplay;
-(void)forceDisplayCustomStyleLayers;
-(CGRect)mapViewBoundsForGeofence:(CGRect)arg1 andScreenShotSize:(CGSize)arg2 ;
-(MGLCoordinateBounds)coordinateBoundsFromMapViewBounds:(CGRect)arg1 ;
-(id)translateCanvasPointsToGeoCoordinates:(id)arg1 ;
-(id)translateCanvasGeocoordinatesToPoints:(id)arg1 ;
-(MGLCoordinateBounds)coordinateBoundsFromGeoCoordinates:(id)arg1 withTopPadding:(double)arg2 bottomPadding:(double)arg3 leftPadding:(double)arg4 rightPadding:(double)arg5 ;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setOpaque:(BOOL)arg1 ;
-(Size)size;
-(id)initWithCoder:(id)arg1 ;
-(void)setDelegate:(id<MGLMapViewDelegate>)arg1 ;
-(void)dealloc;
-(void)didMoveToWindow;
-(void)setHidden:(BOOL)arg1 ;
-(id<MGLMapViewDelegate>)delegate;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(void)setScrollEnabled:(BOOL)arg1 ;
-(void)touchesBegan:(id)arg1 withEvent:(id)arg2 ;
-(void)setScale:(double)arg1 ;
-(void)didReceiveMemoryWarning;
-(BOOL)isScrollEnabled;
-(UIEdgeInsets)contentInset;
-(MGLStyle *)style;
-(double)scale;
-(id)snapshot;
-(EAGLContext *)context;
-(BOOL)isOpaque;
-(BOOL)canBecomeFirstResponder;
-(void)tintColorDidChange;
-(void)didMoveToSuperview;
-(void)setDirection:(double)arg1 ;
-(double)direction;
-(void)setContentInset:(UIEdgeInsets)arg1 ;
-(void)setZoomEnabled:(BOOL)arg1 ;
-(BOOL)isZoomEnabled;
-(double)decelerationRate;
-(void)setDecelerationRate:(double)arg1 ;
-(void)setStyle:(MGLStyle *)arg1 ;
-(void)setAllowsScrolling:(BOOL)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)setContext:(EAGLContext *)arg1 ;
-(void)commonInit;
-(void)setAngle:(double)arg1 ;
-(double)angle;
-(void)glkView:(id)arg1 drawInRect:(CGRect)arg2 ;
-(void)setPan:(UIPanGestureRecognizer *)arg1 ;
-(UIPanGestureRecognizer *)pan;
-(void)setUserLocation:(MGLUserLocation *)arg1 ;
-(void)reachabilityChanged:(id)arg1 ;
-(void)setCamera:(MGLMapCamera *)arg1 ;
-(CLLocationCoordinate2D)centerCoordinate;
-(unsigned long long)userTrackingMode;
-(void)setUserTrackingMode:(unsigned long long)arg1 ;
-(void)setZoomLevel:(double)arg1 ;
-(void)setCenterCoordinate:(CLLocationCoordinate2D)arg1 ;
-(void)setLatitude:(double)arg1 ;
-(void)setLongitude:(double)arg1 ;
-(Renderer*)renderer;
-(double)maximumZoomLevel;
-(double)minimumZoomLevel;
-(void)setMinimumZoomLevel:(double)arg1 ;
-(CGPoint)convertCoordinate:(CLLocationCoordinate2D)arg1 toPointToView:(id)arg2 ;
-(void)deviceOrientationDidChange:(id)arg1 ;
-(BOOL)isRotateEnabled;
-(BOOL)showsUserLocation;
-(BOOL)isUserLocationVisible;
-(void)setUserTrackingMode:(unsigned long long)arg1 animated:(BOOL)arg2 ;
-(void)showAnnotations:(id)arg1 animated:(BOOL)arg2 ;
-(UIImageView *)compassView;
-(void)deselectAnnotation:(id)arg1 animated:(BOOL)arg2 ;
-(void)setCenterCoordinate:(CLLocationCoordinate2D)arg1 animated:(BOOL)arg2 ;
-(void)setCenterCoordinate:(CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 animated:(BOOL)arg3 ;
-(void)setCamera:(id)arg1 animated:(BOOL)arg2 ;
-(void)addOverlay:(id)arg1 ;
-(void)removeOverlay:(id)arg1 ;
-(NSArray *)overlays;
-(CLLocationManager *)locationManager;
-(void)setLocationManager:(CLLocationManager *)arg1 ;
-(BOOL)allowsScrolling;
-(void)locationManager:(id)arg1 didUpdateHeading:(id)arg2 ;
-(BOOL)locationManagerShouldDisplayHeadingCalibration:(id)arg1 ;
-(void)locationManager:(id)arg1 didFailWithError:(id)arg2 ;
-(double)zoomLevel;
-(void)handlePanGesture:(id)arg1 ;
-(id)viewForAnnotation:(id)arg1 ;
-(NSArray *)annotations;
-(NSArray *)selectedAnnotations;
-(void)setRotateEnabled:(BOOL)arg1 ;
-(void)setPitchEnabled:(BOOL)arg1 ;
-(void)setShowsUserLocation:(BOOL)arg1 ;
-(void)setSelectedAnnotations:(NSArray *)arg1 ;
-(MGLUserLocation *)userLocation;
-(id)dequeueReusableAnnotationViewWithIdentifier:(id)arg1 ;
-(void)locationManager:(id)arg1 didUpdateLocations:(id)arg2 ;
-(MGLMapCamera *)camera;
-(void)removeAnnotations:(id)arg1 ;
-(void)removeOverlays:(id)arg1 ;
-(void)addAnnotations:(id)arg1 ;
-(void)addAnnotation:(id)arg1 ;
-(void)removeAnnotation:(id)arg1 ;
-(void)addOverlays:(id)arg1 ;
-(double)latitude;
-(double)longitude;
-(void)selectAnnotation:(id)arg1 animated:(BOOL)arg2 ;
-(void)setSelectedAnnotation:(id)arg1 ;
-(id)selectedAnnotation;
-(void)setAttributionButton:(UIButton *)arg1 ;
-(UIButton *)attributionButton;
-(void)setDirection:(double)arg1 animated:(BOOL)arg2 ;
-(UIRotationGestureRecognizer *)rotate;
-(CGRect)contentFrame;
-(BOOL)isPitchEnabled;
-(CLLocationCoordinate2D)convertPoint:(CGPoint)arg1 toCoordinateFromView:(id)arg2 ;
-(void)setLogoView:(UIImageView *)arg1 ;
-(UIImageView *)logoView;
@end

