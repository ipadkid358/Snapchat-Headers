/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:16 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSCacheDelegate.h>

@protocol SCXThumbnailTextureFetcher, SCPerforming, SCXMediaManagerDelegate;
@class NSCache, NSMutableSet, NSMutableDictionary, EAGLContext, SCXGLTextureInfo, NSMutableArray, NSDateFormatter, NSString;

@interface SCXMediaManager : NSObject <NSCacheDelegate> {

	id<SCXThumbnailTextureFetcher> _fetcher;
	NSCache* _textureCache;
	NSMutableSet* _loadingMediaIds;
	NSMutableDictionary* _requestedMediaIdsToRequestKeys;
	NSCache* _labelTextureCache;
	NSMutableSet* _requestedLabelIds;
	NSCache* _emojiTextureCache;
	NSMutableSet* _requestedEmojiIds;
	NSCache* _spriteTextureCache;
	id<SCPerforming> _glResourcesPerformer;
	EAGLContext* _sharedGLContext;
	SCXGLTextureInfo* _errorThumbnail;
	NSMutableArray* _pendingTextureCreationBlocks;
	BOOL _isTextureCreationPaused;
	BOOL _shouldMipmap;
	id<SCXMediaManagerDelegate> _delegate;
	NSDateFormatter* _cacheTimeFormatter;

}

@property (nonatomic,retain) NSDateFormatter * cacheTimeFormatter;              //@synthesize cacheTimeFormatter=_cacheTimeFormatter - In the implementation block
@property (assign,nonatomic) BOOL shouldMipmap;                                 //@synthesize shouldMipmap=_shouldMipmap - In the implementation block
@property (__weak) id<SCXMediaManagerDelegate> delegate;                        //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned)_textureFromImage:(id)arg1 mipmap:(BOOL)arg2 temporaryStorage:(char*)arg3 error:(BOOL*)arg4 ;
+(unsigned)textureFromImage:(id)arg1 mipmap:(BOOL)arg2 error:(BOOL*)arg3 ;
-(void)createGLTexturesForImageData:(/*^block*/id)arg1 identifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(NSDateFormatter *)cacheTimeFormatter;
-(void)_drainPendingTextureCreationRequests;
-(id)_textureFromImage:(id)arg1 mipmap:(BOOL)arg2 calculateTransparentPaddingInsets:(BOOL)arg3 idPrefix:(id)arg4 ;
-(void)_enqueueOrRunTextureCreationBlock:(/*^block*/id)arg1 ;
-(id)getThumbnailTexture:(id)arg1 ;
-(id)initWithFetcher:(id)arg1 ;
-(void)setShouldMipmap:(BOOL)arg1 ;
-(void)pauseNewTextureCreationCommands;
-(void)resumeNewTextureCreationCommands;
-(id)getErrorThumbnailTexture;
-(id)getLabelTexture:(id)arg1 ;
-(id)getEmojiTexture:(id)arg1 ;
-(void)createEmojiTexture:(id)arg1 ;
-(void)createLabelTexture:(id)arg1 withPoiHeight:(float)arg2 ;
-(void)loadThumbnail:(id)arg1 ;
-(void)cancelLoadingThumbnailId:(id)arg1 ;
-(BOOL)shouldMipmap;
-(void)setCacheTimeFormatter:(NSDateFormatter *)arg1 ;
-(void)setDelegate:(id<SCXMediaManagerDelegate>)arg1 ;
-(id<SCXMediaManagerDelegate>)delegate;
-(void)cache:(id)arg1 willEvictObject:(id)arg2 ;
-(void)prepare:(id)arg1 ;
@end

