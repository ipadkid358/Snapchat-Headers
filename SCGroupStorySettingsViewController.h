/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:30 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCGenericSettingsViewController.h>
#import <Snapchat/SCExportMyStoriesManagerDelegate.h>
#import <Snapchat/SCGroupStoryGeofenceCellDelegate.h>
#import <Snapchat/SCGroupStoryGeoPrivacySettingsViewController.h>
#import <Snapchat/SCLocationObserver.h>
#import <Snapchat/SCMyStoriesCellDelegate.h>
#import <Snapchat/SCGroupStorySettingsControllerDelegate.h>
#import <Snapchat/MyProfileStoryCellDelegate.h>
#import <Snapchat/SCStoryPresenterDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <UIKit/UITableViewDelegate.h>
#import <Snapchat/SCStoryMediaStateListener.h>
#import <UIKit/UITableViewDataSource.h>
#import <UIKit/UITextFieldDelegate.h>
#import <Snapchat/SCGroupStoryMapCellDelegate.h>
#import <Snapchat/SCMiniProfileViewControllerDelegate.h>
#import <Snapchat/SCSendViewControllerNavigationDelegate.h>
#import <Snapchat/SCGroupStorySelectMembersViewControllerDelegate.h>
#import <Snapchat/SCGroupStoryGeofencePrivacyCellDelegate.h>
#import <Snapchat/SCStoriesModelUpdateListener.h>

@protocol SCReplyDelegate, SCGroupStorySettingsViewControllerDelegate;
@class UITableView, UILabel, UIViewController, NSArray, UIButton, SCLoadingIndicatorView, CLLocation, NSString, UIColor, SCMyGroupStories, SCUserSession, SCExportMyStoriesManager, SCStoryPresenter_DEPRECATED, UITapGestureRecognizer, UIView, SCGroupStoryCreationSession, UIPanGestureRecognizer, SCHeaderAccessoryView, SCAlertViewActionButtonController, SCSearchContainerView, SCGroupStorySettingsController, SCSendToTransitionProvider;

@interface SCGroupStorySettingsViewController : SCGenericSettingsViewController <SCExportMyStoriesManagerDelegate, SCGroupStoryGeofenceCellDelegate, SCGroupStoryGeoPrivacySettingsViewController, SCLocationObserver, SCMyStoriesCellDelegate, SCGroupStorySettingsControllerDelegate, MyProfileStoryCellDelegate, SCStoryPresenterDelegate, UIGestureRecognizerDelegate, UITableViewDelegate, SCStoryMediaStateListener, UITableViewDataSource, UITextFieldDelegate, SCGroupStoryMapCellDelegate, SCMiniProfileViewControllerDelegate, SCSendViewControllerNavigationDelegate, SCGroupStorySelectMembersViewControllerDelegate, SCGroupStoryGeofencePrivacyCellDelegate, SCStoriesModelUpdateListener> {

	UITableView* _tableView;
	UILabel* _customTypeDescriptionLabel;
	UILabel* _footerSubtextLabel;
	UIViewController* _parentViewController;
	NSArray* _sections;
	UIButton* _createStoryButton;
	SCLoadingIndicatorView* _createButtonSpinner;
	CLLocation* _location;
	NSString* _reverseGeocodeDetail;
	UIColor* _tintColor;
	SCMyGroupStories* _myGroupStories;
	SCUserSession* _userSession;
	SCExportMyStoriesManager* _exportMyStoriesManager;
	SCStoryPresenter_DEPRECATED* _storyPresenter;
	id<SCReplyDelegate> _replyDelegate;
	UITapGestureRecognizer* _tapGestureRecognizer;
	UITapGestureRecognizer* _geofencePrivacyTapGestureRecognizer;
	UIView* _loadingView;
	BOOL _viewHasLoaded;
	BOOL _findingLocation;
	BOOL _modifiedSettings;
	BOOL _fetchingMetadata;
	BOOL _isExpanded;
	BOOL _editing;
	BOOL _hideStories;
	BOOL _inactive;
	BOOL _isGroupChatSelectedSavedState;
	BOOL _isSaving;
	SCGroupStoryCreationSession* _creationSession;
	long long _sourceType;
	long long _createType;
	UIPanGestureRecognizer* _verticalDismissGesture;
	SCHeaderAccessoryView* _groupStoryEditPencilIconView;
	SCAlertViewActionButtonController* _namingSaveAction;
	SCSearchContainerView* _blurredContainerView;
	SCGroupStorySettingsController* _settingsController;
	SCSendToTransitionProvider* _sendToTransitionProvider;
	id<SCGroupStorySettingsViewControllerDelegate> _delegate;
	long long _context;

}

@property (assign,nonatomic) long long context;                                                           //@synthesize context=_context - In the implementation block
@property (assign,nonatomic,__weak) id<SCGroupStorySettingsViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)leftButtonPressed;
-(id)imageForLeftButtonInState:(unsigned long long)arg1 ;
-(void)rightButtonPressed;
-(id)imageForRightButtonInState:(unsigned long long)arg1 ;
-(id)backgroundColorForHeader;
-(id)textColorForHeader:(id)arg1 ;
-(id)placeHolderForHeaderTextField;
-(id)textColorForPlaceholderInHeader:(id)arg1 ;
-(BOOL)shouldEnableTextField:(id)arg1 ;
-(id)viewForTitleInHeader:(id)arg1 ;
-(void)headerTextFieldTextEditingChanged;
-(long long)maxLengthForHeaderTextField:(id)arg1 ;
-(void)headerTextFieldTextEditingDidEnd;
-(void)headerTextFieldTextEditingDidBegin;
-(void)handlePopRecognizer:(id)arg1 ;
-(id)publicationId;
-(BOOL)locationObserverWantsActiveLocationMonitoring;
-(id)locationObserverDispatchQueue;
-(double)locationObserverDesiredAccuracy;
-(id)locationObserverIdentifier;
-(void)onLocationUpdate:(id)arg1 ;
-(BOOL)shouldPopToRootViewController;
-(void)_setupTableView;
-(void)miniProfileController:(id)arg1 wantsToNavigateToChatWithDeepLinkURL:(id)arg2 ;
-(void)dismissSendViewController:(id)arg1 ;
-(void)storiesModelDidUpdateWithParams:(id)arg1 ;
-(void)story:(id)arg1 didChangeMediaState:(long long)arg2 ;
-(void)story:(id)arg1 didChangeThumbnailMediaState:(long long)arg2 ;
-(id)_sectionsTemplate;
-(void)_createGroupChatStory;
-(id)initWithCreationContext:(long long)arg1 userSession:(id)arg2 creationSettings:(id)arg3 fromViewController:(id)arg4 createType:(long long)arg5 creationSession:(id)arg6 ;
-(void)_logCreationSession;
-(void)newGroupStorySelectMembersViewController:(id)arg1 updateCustomGroupStoryPrivacyWithPosterIds:(id)arg2 viewerIds:(id)arg3 modifiedSettings:(BOOL)arg4 storyType:(long long)arg5 ;
-(void)geoPrivacySettingsViewController:(id)arg1 didUpdatePrivacyType:(long long)arg2 ;
-(void)fillInGeofenceDetails;
-(void)didFinishUpdatingPublicationMetadata:(id)arg1 ;
-(void)didUpdateSettingsForPublication:(id)arg1 ;
-(id)_groupStoryCollection;
-(void)updatePublicationForRemoval:(id)arg1 groupStories:(id)arg2 ;
-(void)_updateStoryTypeWithCurrentSettings;
-(BOOL)_missingGroupStoriesMetadata;
-(void)_setupLoadingView;
-(void)_setupCustomStoryDescriptionLabel;
-(void)_setupCreateStoryButton;
-(void)_setupFooterSubtext;
-(void)_didUpdateGroupStories:(id)arg1 ;
-(void)_updateFooterSubtextViewWithMayAnimated:(BOOL)arg1 ;
-(BOOL)_isBottomController;
-(void)_handleVerticalDismissGesture:(id)arg1 ;
-(void)_dismissInContextAnimated:(BOOL)arg1 ;
-(void)_alertToConfirmDiscardChanges;
-(void)_enableCreateButtonIfPossible;
-(void)_createStoryButtonPressed;
-(unsigned long long)_sectionForIndexSection:(long long)arg1 ;
-(BOOL)_shouldShowGroupChatCell;
-(id)_myGroupStoriesCell;
-(id)_myStoryCellAtIndexPath:(id)arg1 ;
-(id)_geofenceCell;
-(id)_mapCell;
-(id)_autosaveCellAtIndexPath:(id)arg1 ;
-(id)_addToStoryCellAtIndexPath:(id)arg1 ;
-(id)_viewThisStoryCellAtIndexPath:(id)arg1 ;
-(id)_geofencePrivacyCellAtIndexPath:(id)arg1 ;
-(id)_groupChatCellAtIndexPath:(id)arg1 ;
-(BOOL)_allowsAddToStory;
-(id)_sectionHeaderTextForSectionType:(unsigned long long)arg1 ;
-(void)_didSelectStoriesCell:(id)arg1 ;
-(void)_didSelectCell:(id)arg1 withStory:(id)arg2 ;
-(BOOL)_isEditingPrivateStory;
-(void)_didSelectViewPostCell:(BOOL)arg1 ;
-(void)_didSelectAutosaveCell;
-(void)_didSelectGroupChatCell;
-(void)_showGeofenceViewerPosterInfo:(BOOL)arg1 ;
-(void)_showCustomViewerPosterInfoWithTitle:(id)arg1 isWhoCanPostCell:(BOOL)arg2 ;
-(id)_roundedCellForSectionType:(unsigned long long)arg1 ;
-(id)_trimmedHeaderTextField;
-(void)_updatePrivacyFooterAndHeaderLabels;
-(BOOL)_isCreator;
-(void)addToMyStoryPressedForMyStories:(id)arg1 ;
-(void)_presentStoryUsingOperaWithFriendStories:(id)arg1 story:(id)arg2 viewLocationPosition:(unsigned long long)arg3 showViewersTable:(BOOL)arg4 baseView:(id)arg5 ;
-(UIEdgeInsets)_gsCreateOptionCellEdgeInsets;
-(id)_subLabelForRoundedCell:(id)arg1 isAddToStoryCell:(BOOL)arg2 ;
-(void)_handleGeofencePrivacyTap:(id)arg1 ;
-(id)_currentMapCell;
-(id)_currentGeofenceCell;
-(/*^block*/id)_locationPermissionsActionHandler;
-(void)_updateLocation;
-(void)_getOrObserveLocationWithForcedUpdate:(BOOL)arg1 ;
-(void)_promptUserForLocationPermission;
-(void)_updateGeofenceAddress;
-(void)_authorizeAndUpdateLocation;
-(void)_setupStreaksFooterSubtext;
-(void)_setupPrivacyFooterSubtext;
-(double)_heightToOffsetFooter;
-(double)_heightOfTableViewCells;
-(id)_streaksFooterSubtext;
-(void)_presentMiniProfileOfCreator;
-(void)_updatePrivacyFooterSubtext;
-(void)_updateCustomStoryDescriptionText;
-(id)_timeAgoCreatedWithFires;
-(long long)_daysSinceCreation:(id)arg1 timeNow:(id)arg2 ;
-(id)_subtextLessThanOneDay:(id)arg1 timeNow:(id)arg2 ;
-(id)_fireStringForDaysActive:(long long)arg1 ;
-(void)_updateAndFormatCustomStoryDescriptionLabel;
-(BOOL)_willCreateGroupChatWithCurrentSettings;
-(void)_startEditDisplayName;
-(id)_currentMyStoriesCell;
-(id)_groupStoryOptionsArrayForCreator;
-(id)_groupStoryOptionsArrayForParticipant;
-(void)_updateCreationSession;
-(void)_updateSettingsToCurrentConfigs;
-(void)_updateDisplayName;
-(void)_showOopsAlertForResponseCode:(long long)arg1 showKeepEditing:(BOOL)arg2 ;
-(void)_createGroupStoryWithCurrentPostingSettings;
-(void)_showEnterDisplayNameAlertWithCompletion:(/*^block*/id)arg1 ;
-(void)_prepUIForCreation;
-(void)_createGroupStory;
-(void)_setAllButtonsEnabled:(BOOL)arg1 ;
-(void)_updateCollectionsForPublicationCreation:(id)arg1 ;
-(void)_handleSuccessfulGroupStoryCreationForPublication:(id)arg1 ;
-(void)_handleFailedGroupStoryCreationForResponseCode:(long long)arg1 ;
-(id)_existingMischiefForCurrentPosterIds;
-(void)_showOopsAlertWithTitle:(id)arg1 description:(id)arg2 showKeepEditing:(BOOL)arg3 ;
-(id)_alertDisplayNamePlaceholderText;
-(void)_leaveGroupStoryByBlocking:(BOOL)arg1 ;
-(void)_deleteGroupStory;
-(void)_leaveGroupStory;
-(void)_blockGroupStory;
-(void)_setCreateButtonEnabled:(BOOL)arg1 ;
-(void)_updateCell:(id)arg1 enabled:(BOOL)arg2 ;
-(void)_updateAllTextLabelsAndCells;
-(void)_removeInvalidFriendsFromPermissions;
-(id)_firstNameOfUserForUserId:(id)arg1 ;
-(void)_expandMyStories;
-(void)_updateStoriesHeaderCell;
-(void)_addToMyStories:(id)arg1 ;
-(void)showPhotoAccessDeniedAlertView;
-(void)_updateCellWithStory:(id)arg1 ;
-(void)handleStartSavingMyStories;
-(void)handleSavedMyStories:(id)arg1 withError:(id)arg2 ;
-(void)updateSaveMyStories:(id)arg1 withProgress:(double)arg2 ;
-(void)geofenceCellDidPressEdit:(id)arg1 ;
-(void)expandMyStoryButtonPressedForMyStories:(id)arg1 ;
-(void)myStorySettingButtonPressedForMyStories:(id)arg1 ;
-(void)myContributionStoryInfoPressedForMyStories:(id)arg1 ;
-(void)savePressedForMyStories:(id)arg1 ;
-(void)savePressedForStory:(id)arg1 ;
-(void)deletePressedForStory:(id)arg1 ;
-(void)viewersPressedInCell:(id)arg1 forMyStory:(id)arg2 ;
-(void)storyPresenter:(id)arg1 didDismissFriendStories:(id)arg2 becameFullyViewed:(BOOL)arg3 succeededToPresent:(BOOL)arg4 viewingType:(long long)arg5 ;
-(void)storyPresenter:(id)arg1 beginDismissFriendStories:(id)arg2 previousFriendStories:(id)arg3 ;
-(void)storyPresenterWillBeginPresentingStory:(id)arg1 ;
-(void)storyPresenterDidFinishPresentingStory:(id)arg1 ;
-(void)storyPresenterWillBeginAnimatingToDismissStory:(id)arg1 ;
-(void)storyPresenterDidCancelDismissingStory:(id)arg1 ;
-(void)storyPresenterDidFinishDismissingStory:(id)arg1 ;
-(void)storyPresenterWillBeginPlayingStory:(id)arg1 friendStories:(id)arg2 viewLocation:(long long)arg3 ;
-(void)storyPresenter:(id)arg1 didBeginPlayingFriendStories:(id)arg2 ;
-(void)storyPresenter:(id)arg1 didFinishViewingFriendStories:(id)arg2 firstStoryDisplayed:(id)arg3 isReplayMode:(BOOL)arg4 becameFullyViewed:(BOOL)arg5 ;
-(void)mapCellDidFinishLoading;
-(void)updateGeofenceToPrivacyType:(long long)arg1 ;
-(id)initWithGroupStoryPublicationToEdit:(id)arg1 showExpanded:(BOOL)arg2 hideStories:(BOOL)arg3 userSession:(id)arg4 replyDelegate:(id)arg5 sourceType:(long long)arg6 fromContext:(long long)arg7 ;
-(void)setDelegate:(id<SCGroupStorySettingsViewControllerDelegate>)arg1 ;
-(void)dealloc;
-(void)tableView:(id)arg1 willDisplayCell:(id)arg2 forRowAtIndexPath:(id)arg3 ;
-(double)tableView:(id)arg1 heightForRowAtIndexPath:(id)arg2 ;
-(double)tableView:(id)arg1 heightForHeaderInSection:(long long)arg2 ;
-(id)tableView:(id)arg1 viewForHeaderInSection:(long long)arg2 ;
-(void)tableView:(id)arg1 didSelectRowAtIndexPath:(id)arg2 ;
-(void)scrollViewDidScroll:(id)arg1 ;
-(long long)tableView:(id)arg1 numberOfRowsInSection:(long long)arg2 ;
-(id)tableView:(id)arg1 cellForRowAtIndexPath:(id)arg2 ;
-(long long)numberOfSectionsInTableView:(id)arg1 ;
-(id<SCGroupStorySettingsViewControllerDelegate>)delegate;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(long long)context;
-(void)viewWillAppear:(BOOL)arg1 ;
-(void)viewDidLayoutSubviews;
-(BOOL)_isDirty;
-(void)viewDidLoad;
-(void)textFieldDidBeginEditing:(id)arg1 ;
-(BOOL)textFieldShouldReturn:(id)arg1 ;
-(void)setContext:(long long)arg1 ;
-(void)textFieldDidChange:(id)arg1 ;
-(void)_dismissKeyboard;
-(unsigned long long)_sectionForIndexPath:(id)arg1 ;
@end

