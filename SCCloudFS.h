/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:15 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCManagedDatastore.h>
#import <Snapchat/SCCacheClearing.h>

@protocol OS_dispatch_semaphore, SCPerforming;
@class NSObject, NSMutableDictionary, SCCloudFSLRUQueue, NSURL, SCCloudFSDiskUsedListenerAnnouncer, SCExperimentManager, NSSet, SCCacheSizePolicy, NSDictionary, SCMediaDownload, SCDataObjectContext, NSString;

@interface SCCloudFS : NSObject <SCManagedDatastore, SCCacheClearing> {

	NSObject*<OS_dispatch_semaphore> _leaseSemaphore;
	NSMutableDictionary* _fileLeaseSetHashMap;
	SCCloudFSLRUQueue* _expiringQueues[4];
	NSMutableDictionary* _fileAttributesHashMap;
	NSMutableDictionary* _downloadRequestGroups;
	NSURL* _cacheURL;
	NSURL* _driveURL;
	long long _backingDiskUsedSize;
	NSMutableDictionary* _detailedDiskUsagePerEntity;
	id<SCPerforming> _performer;
	SCCloudFSDiskUsedListenerAnnouncer* _announcer;
	SCExperimentManager* _experimentManager;
	NSSet* _initialUnsyncedHashStrings;
	SCCacheSizePolicy* _cacheSizePolicy;
	BOOL _useTTL;
	long long _diskUsedSize;
	NSDictionary* _detailedDiskUsage;
	long long _diskSizeLimit;
	long long _minimumDiskSizeLimitWithoutEviction;

}

@property (nonatomic,readonly) SCMediaDownload * mediaDownload; 
@property (nonatomic,readonly) id<SCSyncFileResolver> fileResolver; 
@property (nonatomic,readonly) SCDataObjectContext * dataObjectContext; 
@property (assign) long long diskUsedSize;                                                 //@synthesize diskUsedSize=_diskUsedSize - In the implementation block
@property (retain) NSDictionary * detailedDiskUsage;                                       //@synthesize detailedDiskUsage=_detailedDiskUsage - In the implementation block
@property (nonatomic,readonly) long long diskSizeLimit;                                    //@synthesize diskSizeLimit=_diskSizeLimit - In the implementation block
@property (nonatomic,readonly) long long minimumDiskSizeLimitWithoutEviction;              //@synthesize minimumDiskSizeLimitWithoutEviction=_minimumDiskSizeLimitWithoutEviction - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)kindName;
-(void)handleEmergencyDiskConditionWithDispatchGroup:(id)arg1 ;
-(void)removeExpiredContentAsync:(id)arg1 reason:(unsigned long long)arg2 dispatchGroup:(id)arg3 ;
-(void)removeAllUserSessionDataAsync:(id)arg1 ;
-(id)experimentManager;
-(void)cleanUpCacheWithQueue:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)totalSizeOfCacheFilesWithQueue:(id)arg1 handler:(/*^block*/id)arg2 ;
-(void)_createDirectoriesIfNeededAtURL:(id)arg1 ;
-(void)setMediaDownload:(SCMediaDownload *)arg1 ;
-(void)setFileResolver:(id<SCSyncFileResolver>)arg1 ;
-(void)setDataObjectContext:(SCDataObjectContext *)arg1 ;
-(id)renderedLowresMediaForSnap:(id)arg1 detail:(id)arg2 ;
-(id)initWithDriveURL:(id)arg1 diskSizePolicy:(id)arg2 mediaDownload:(id)arg3 experimentManager:(id)arg4 useTTL:(BOOL)arg5 fileResolver:(id)arg6 dataObjectContext:(id)arg7 ;
-(id)resolveFileForSnapId_DO_NOT_USE:(id)arg1 ;
-(id)resolveSnapOverlayFileForSnap:(id)arg1 ;
-(SCMediaDownload *)mediaDownload;
-(id<SCSyncFileResolver>)fileResolver;
-(SCDataObjectContext *)dataObjectContext;
-(BOOL)addEntity:(id)arg1 representations:(id)arg2 isSynced:(BOOL)arg3 ;
-(void)addEntity:(id)arg1 representations:(id)arg2 isSynced:(BOOL)arg3 synchronous:(BOOL)arg4 queue:(id)arg5 completionHandler:(/*^block*/id)arg6 ;
-(id)resolveFileForEntity:(id)arg1 ;
-(BOOL)addHDMediaForSnap:(id)arg1 HDMediaURL:(id)arg2 mediaOverlayURL:(id)arg3 ;
-(void)addHDMediaForSnap:(id)arg1 HDMediaURL:(id)arg2 mediaOverlayURL:(id)arg3 isSynced:(BOOL)arg4 synchronous:(BOOL)arg5 queue:(id)arg6 completionHandler:(/*^block*/id)arg7 ;
-(id)resolveHDMediaFileForSnap:(id)arg1 ;
-(void)_readStatsFromDrive;
-(BOOL)_takeLeaseToken:(id)arg1 forHashString:(id)arg2 isSynced:(BOOL*)arg3 ;
-(id)_baseURLForHashString:(id)arg1 ;
-(BOOL)_isAvailableLocallyForAllRepresentations:(id)arg1 baseURL:(id)arg2 ;
-(long long)_moveRepresentations:(id)arg1 forEntity:(id)arg2 ;
-(void)_addToDriveForUUID:(id)arg1 storageSize:(long long)arg2 isSynced:(BOOL)arg3 entityName:(id)arg4 ttl:(double)arg5 ;
-(void)cleanUpCacheWithMode:(unsigned long long)arg1 queue:(id)arg2 block:(/*^block*/id)arg3 ;
-(BOOL)_shouldEvictBasedOnTime:(double)arg1 ;
-(BOOL)_evictForHashStringIfNoLease:(id)arg1 fileAttributes:(id)arg2 ;
-(void)_setAndAnnounceDiskUsedSize:(long long)arg1 ;
-(void)_updateRecencyForEntity:(id)arg1 ;
-(void)_markAsSyncedForEntity:(id)arg1 ;
-(void)_invalidateEntity:(id)arg1 ;
-(long long)_storageSizeForHashString:(id)arg1 ;
-(long long)_cleanUpEntityAtHashString:(id)arg1 ;
-(void)setDiskUsedSize:(long long)arg1 ;
-(void)setDetailedDiskUsage:(NSDictionary *)arg1 ;
-(void)_setAndPersistFileAttributes:(id)arg1 forHashString:(id)arg2 ;
-(void)_addDiskUsageDetail:(unsigned long long)arg1 forEntityName:(id)arg2 ;
-(BOOL)_checkAndExpireItemsFromLRU;
-(void)_setFileAttributes:(id)arg1 forHashString:(id)arg2 ;
-(void)_checkLRUIsInSyncWithFileAttributes;
-(void)_persistFileAttributes:(id)arg1 forHashString:(id)arg2 ;
-(void)_subtractDiskUsageDetail:(unsigned long long)arg1 forEntityName:(id)arg2 ;
-(id)_insertToExpiringQueueForHashString:(id)arg1 fileAttributes:(id)arg2 ;
-(id)_hashPrefix:(id)arg1 ;
-(id)_hashSuffix:(id)arg1 ;
-(id)initWithDriveURL:(id)arg1 diskSizePolicy:(id)arg2 experimentManager:(id)arg3 useTTL:(BOOL)arg4 performer:(id)arg5 ;
-(void)destroyCacheWithQueue_DO_NOT_USE:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)revokeLeaseToken:(id)arg1 forUUID:(id)arg2 ;
-(void)updateRecencyForEntity:(id)arg1 ;
-(void)markAsSyncedForEntity:(id)arg1 ;
-(void)invalidateEntity:(id)arg1 ;
-(id)downloadWithEntity:(id)arg1 mediaScenePath:(SCD_Struct_SC329)arg2 performer:(id)arg3 progressHandler:(/*^block*/id)arg4 resultHandler:(/*^block*/id)arg5 ;
-(void)downloadStatusForUUID:(id)arg1 queue:(id)arg2 resultHandler:(/*^block*/id)arg3 ;
-(void)scrubDanglingEntitiesExcept:(id)arg1 ;
-(long long)diskUsedSize;
-(NSDictionary *)detailedDiskUsage;
-(long long)diskSizeLimit;
-(long long)minimumDiskSizeLimitWithoutEviction;
-(id)resolveFileForSnap:(id)arg1 ;
-(id)resolveRenderedLowresMediaFileForSnap:(id)arg1 ;
-(BOOL)addSnap:(id)arg1 mediaURL:(id)arg2 mediaOverlayURL:(id)arg3 ;
-(void)showDiskSizeStats;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(id)temporaryFileURL;
-(id)reportMetrics;
@end

