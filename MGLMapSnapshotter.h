/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:45 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Snapchat/Snapchat-Structs.h>
@class NSArray, MGLMapSnapshotOptions;

@interface MGLMapSnapshotter : NSObject {

	shared_ptr<mbgl::ThreadPool>* _mbglThreadPool;
	unique_ptr<mbgl::MapSnapshotter, std::__1::default_delete<mbgl::MapSnapshotter> >* _mbglMapSnapshotter;
	unique_ptr<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::function<mapbox::geometry::point<double> (const mbgl::LatLng &)>)> >, std::__1::default_delete<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char> > >, std::__1::function<mapbox::geometry::point<double> (const mbgl::LatLng &)>)> > > >* _snapshotCallback;
	NSArray* _attributionInfo;
	BOOL _loading;
	MGLMapSnapshotOptions* _options;

}

@property (nonatomic,retain) MGLMapSnapshotOptions * options;              //@synthesize options=_options - In the implementation block
@property (getter=isLoading,nonatomic,readonly) BOOL loading;              //@synthesize loading=_loading - In the implementation block
-(id)mapboxLongStyleLogo;
-(id)logoImageWithStyle:(unsigned long long)arg1 ;
-(CGSize)attributionTextSizeWithStyle:(unsigned long long)arg1 ;
-(void)drawAttributionTextWithStyle:(unsigned long long)arg1 origin:(CGPoint)arg2 ;
-(id)blurredAttributionBackground:(id)arg1 ;
-(CGSize)attributionSizeWithLogoStyle:(unsigned long long)arg1 sourceAttributionStyle:(unsigned long long)arg2 ;
-(void)cancel;
-(MGLMapSnapshotOptions *)options;
-(id)initWithOptions:(id)arg1 ;
-(void)setOptions:(MGLMapSnapshotOptions *)arg1 ;
-(BOOL)isLoading;
-(void)startWithCompletionHandler:(/*^block*/id)arg1 ;
-(void)startWithQueue:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
@end

