/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:12 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCGroupManagerListener.h>
#import <Snapchat/SCSearchUpdateListener.h>
#import <Snapchat/SCFriendEventListener.h>
#import <Snapchat/SCChatConversationManager.h>

@protocol SCChatConversationManager <SCArchiveObjectManager,SCSearchUpdateAnnouncing>
@property (retain) id<SCMediaSendTaskManager> mediaSendTaskManager; 
@property (retain) id<SCBitmojiManagerProtocol> bitmojiManager; 
@property (retain) id<SCBitmojiStickerManagerProtocol> bitmojiStickerManager; 
@required
-(BOOL)saveEmptyDataToDisk;
-(void)createGroupIfNecessaryForConversationId:(id)arg1 completion:(/*^block*/id)arg2;
-(id)conversationFetcher;
-(id<SCMediaSendTaskManager>)mediaSendTaskManager;
-(void)setMediaSendTaskManager:(id)arg1;
-(id)metadataStore;
-(void)setBitmojiManager:(id)arg1;
-(id)activeConversationId;
-(void)clearConversationById:(id)arg1;
-(void)didUpdateGroup:(id)arg1;
-(long long)oneOnOneCount;
-(void)createSimpleTicketWithTitle:(id)arg1 email:(id)arg2;
-(void)activateBubbleChat;
-(void)deactivateBubbleChat;
-(void)configureWithUserSession:(id)arg1 lazyDocObjectContext:(id)arg2 externalAPIProvider:(id)arg3 groupManager:(id)arg4 messageViewModelFactory:(id)arg5 bubbleMessageViewModelFactory:(id)arg6 chatCardsViewModelFactory:(id)arg7 talkManager:(id)arg8 lazyCustomStickerManager:(id)arg9;
-(id)groupActionHandler;
-(id)identityService;
-(id)chatMediaCache;
-(id)mediaFileManager;
-(id)chatSDK;
-(id)mediaPrefetcher;
-(void)addListenerToConversationStore:(id)arg1;
-(void)removeListenerFromConversationStore:(id)arg1;
-(void)processNotification:(id)arg1 fromNotificationManager:(id)arg2;
-(void)setActiveConversationById:(id)arg1 completion:(/*^block*/id)arg2;
-(void)resumeActiveConversationById:(id)arg1;
-(void)unsetActiveConversationById:(id)arg1;
-(void)clearAllConversations;
-(void)deltaGroupConversationsRequest:(/*^block*/id)arg1;
-(id)syncUFSDeltaInformation;
-(void)retryAllFailedSilentMessages;
-(void)getLastParticipantSentMessageById:(id)arg1 completion:(/*^block*/id)arg2;
-(BOOL)isConversationStoreLoaded;
-(BOOL)isActiveChatAGroupConversation;
-(BOOL)activeBackgroundedChatHasUnreadMessageOrCallInProgress;
-(id<SCBitmojiManagerProtocol>)bitmojiManager;
-(id<SCBitmojiStickerManagerProtocol>)bitmojiStickerManager;
-(void)setBitmojiStickerManager:(id)arg1;
-(void)clear;
-(id)username;
-(void)addListener:(id)arg1;
-(void)removeListener:(id)arg1;
-(id)actionHandler;

@end

#import <Snapchat/SCChatConversationStoreListener.h>
#import <Snapchat/SCChatMessageReceiveListener.h>

@protocol SCChatExternalAPIProvider, SCMediaSendTaskManager, SCBitmojiManagerProtocol, SCBitmojiStickerManagerProtocol, SCChatMediaFileManager, SCChatConversationFetcher, SCTIdentityServices, SCTalkManager;
@class NSString, SCChatConversationUpdater, SCChatV3ConversationStore, SCChatV3MessageSender, SCChatV3MessageReceiver, SCChatMediaRequestManager, SCChatMediaStateManager, SCChatV3MessageActionHandler, SCChatV3GroupActionHandler, SCChatV3MessageStateHandler, SCChatV3FeedUpdater, SCChatMediaReferenceManager, SCChatSnapViewVerifier, SCChatMediaCache, SCChatV3MediaPrefetcher, SCChatConversationContentInviteHandler, SCChatSDKSender, SCArchiveLoader, NSMutableArray, SCSearchUpdateListenerAnnouncer, SCTalk4GFeedManager, NSMutableDictionary;

@interface SCChatConversationManager : NSObject <SCGroupManagerListener, SCSearchUpdateListener, SCFriendEventListener, SCChatConversationManager, SCChatConversationStoreListener, SCChatMessageReceiveListener> {

	NSString* _username;
	SCChatConversationUpdater* _conversationUpdater;
	SCChatV3ConversationStore* _conversationStore;
	SCChatV3MessageSender* _messageSender;
	SCChatV3MessageReceiver* _messageReceiver;
	SCChatMediaRequestManager* _mediaRequestManager;
	SCChatMediaStateManager* _mediaStateManager;
	SCChatV3MessageActionHandler* _messageActionHandler;
	SCChatV3GroupActionHandler* _groupActionHandler;
	SCChatV3MessageStateHandler* _messageStateHandler;
	SCChatV3FeedUpdater* _feedUpdater;
	SCChatMediaReferenceManager* _mediaReferenceManager;
	SCChatSnapViewVerifier* _snapViewVerifier;
	id<SCChatExternalAPIProvider> _provider;
	SCChatMediaCache* _chatMediaCache;
	id<SCMediaSendTaskManager> _mediaSendTaskManager;
	id<SCBitmojiManagerProtocol> _bitmojiManager;
	id<SCBitmojiStickerManagerProtocol> _bitmojiStickerManager;
	id<SCChatMediaFileManager> _mediaFileManager;
	SCChatV3MediaPrefetcher* _mediaPrefetcher;
	id<SCChatConversationFetcher> _conversationFetcher;
	SCChatConversationContentInviteHandler* _contentInviteHandler;
	SCChatSDKSender* _chatSDKSender;
	SCArchiveLoader* _conversationLoader;
	NSMutableArray* _deltaFetchRequests;
	id<SCTIdentityServices> _identityService;
	SCSearchUpdateListenerAnnouncer* _updateAnnouncer;
	SCTalk4GFeedManager* _talk4gFeedManager;
	NSMutableDictionary* _userToPendingChatConversations;
	NSMutableDictionary* _userToPendingMischiefs;
	id<SCTalkManager> _talkManager;
	BOOL _didDiskLoadStart;
	id<SCBitmojiStickerManagerProtocol> bitmojiStickerManager;

}

@property (assign) BOOL didDiskLoadStart;                                                  //@synthesize didDiskLoadStart=_didDiskLoadStart - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (retain) id<SCMediaSendTaskManager> mediaSendTaskManager; 
@property (retain) id<SCBitmojiManagerProtocol> bitmojiManager; 
@property (retain) id<SCBitmojiStickerManagerProtocol> bitmojiStickerManager; 
+(id)announcerIdentifier;
-(void)didUpdateWithAnnouncerIdentifier:(id)arg1 ;
-(void)addUpdateListener:(id)arg1 ;
-(void)removeUpdateListener:(id)arg1 ;
-(/*^block*/id)_loadedBlock;
-(void)loadFromDiskAsync:(BOOL)arg1 ;
-(void)markAsLoadedWithoutLoadingFromDisk;
-(BOOL)shouldLoadFromDiskImmediately;
-(BOOL)saveEmptyDataToDisk;
-(void)didJoinGroupWithId:(id)arg1 ;
-(void)didCreateGroupOnServerWithId:(id)arg1 initialSojuMischief:(id)arg2 ;
-(void)didBeginLeavingGroupWithId:(id)arg1 ;
-(void)didFinishLoadingGroups;
-(void)didChangeInfoForGroupWithId:(id)arg1 ;
-(void)outgoingNamedFriendsDidUpdate:(id)arg1 updateType:(unsigned long long)arg2 context:(id)arg3 ;
-(void)didReceiveConversations:(id)arg1 username:(id)arg2 originType:(long long)arg3 source:(long long)arg4 ;
-(void)didReceiveWireMessage:(id)arg1 ;
-(void)didReceiveMischiefs:(id)arg1 username:(id)arg2 hasStaleChats:(BOOL)arg3 originType:(long long)arg4 source:(long long)arg5 ;
-(void)createGroupIfNecessaryForConversationId:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)conversationFetcher;
-(id<SCMediaSendTaskManager>)mediaSendTaskManager;
-(void)setMediaSendTaskManager:(id<SCMediaSendTaskManager>)arg1 ;
-(void)setDidDiskLoadStart:(BOOL)arg1 ;
-(void)_processPendingConversationAfterSetup;
-(id)metadataStore;
-(void)setBitmojiManager:(id<SCBitmojiManagerProtocol>)arg1 ;
-(void)_setActiveConversation:(id)arg1 ;
-(id)activeConversationId;
-(void)_unsetActiveConversationById:(id)arg1 ;
-(void)clearConversationById:(id)arg1 ;
-(void)_fetchConversation:(id)arg1 messageId:(id)arg2 notification:(id)arg3 fetchReason:(long long)arg4 notificationManager:(id)arg5 ;
-(void)repostNotification:(id)arg1 onNotificationManager:(id)arg2 forMessage:(id)arg3 ;
-(void)_retryAllFailedSilentMessagesForStore:(id)arg1 isStoreFromDisk:(BOOL)arg2 ;
-(void)_getDeltaGroupConversationsRequestAndPerform:(id)arg1 ;
-(void)didUpdateGroup:(id)arg1 ;
-(void)_checkAndCorrectConversationStore:(id)arg1 ;
-(void)_registerAllMediaForStore:(id)arg1 ;
-(void)_mergeConversationStoreLoadedFromDisk:(id)arg1 ;
-(BOOL)didDiskLoadStart;
-(BOOL)_isValidUserAndConversationStore:(id)arg1 ;
-(long long)oneOnOneCount;
-(void)createSimpleTicketWithTitle:(id)arg1 email:(id)arg2 ;
-(void)activateBubbleChat;
-(void)deactivateBubbleChat;
-(void)_clearConversationsAndFeedForFriends:(id)arg1 ;
-(void)configureWithUserSession:(id)arg1 lazyDocObjectContext:(id)arg2 externalAPIProvider:(id)arg3 groupManager:(id)arg4 messageViewModelFactory:(id)arg5 bubbleMessageViewModelFactory:(id)arg6 chatCardsViewModelFactory:(id)arg7 talkManager:(id)arg8 lazyCustomStickerManager:(id)arg9 ;
-(id)groupActionHandler;
-(id)identityService;
-(id)chatMediaCache;
-(id)mediaFileManager;
-(id)chatSDK;
-(id)mediaPrefetcher;
-(void)addListenerToConversationStore:(id)arg1 ;
-(void)removeListenerFromConversationStore:(id)arg1 ;
-(void)processNotification:(id)arg1 fromNotificationManager:(id)arg2 ;
-(void)setActiveConversationById:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)resumeActiveConversationById:(id)arg1 ;
-(void)unsetActiveConversationById:(id)arg1 ;
-(void)clearAllConversations;
-(void)deltaGroupConversationsRequest:(/*^block*/id)arg1 ;
-(id)syncUFSDeltaInformation;
-(void)retryAllFailedSilentMessages;
-(void)getLastParticipantSentMessageById:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)isConversationStoreLoaded;
-(BOOL)isActiveChatAGroupConversation;
-(BOOL)activeBackgroundedChatHasUnreadMessageOrCallInProgress;
-(id<SCBitmojiManagerProtocol>)bitmojiManager;
-(id<SCBitmojiStickerManagerProtocol>)bitmojiStickerManager;
-(void)setBitmojiStickerManager:(id<SCBitmojiStickerManagerProtocol>)arg1 ;
-(void)conversationDidUpdate:(id)arg1 withMetadataDictionary:(id)arg2 ;
-(void)diskLoadFinished;
-(id)init;
-(void)clear;
-(id)username;
-(BOOL)saveState;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(id)actionHandler;
@end

