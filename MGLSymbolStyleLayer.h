/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:45 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/MGLVectorStyleLayer.h>

@class MGLStyleValue;

@interface MGLSymbolStyleLayer : MGLVectorStyleLayer

@property (nonatomic,readonly) SymbolLayer* rawLayer; 
@property (nonatomic,retain) MGLStyleValue * iconAllowsOverlap; 
@property (nonatomic,retain) MGLStyleValue * iconAllowOverlap; 
@property (nonatomic,retain) MGLStyleValue * iconAnchor; 
@property (nonatomic,retain) MGLStyleValue * iconIgnoresPlacement; 
@property (nonatomic,retain) MGLStyleValue * iconIgnorePlacement; 
@property (nonatomic,retain) MGLStyleValue * iconImageName; 
@property (nonatomic,retain) MGLStyleValue * iconImage; 
@property (nonatomic,retain) MGLStyleValue * iconOffset; 
@property (getter=isIconOptional,nonatomic,retain) MGLStyleValue * iconOptional; 
@property (nonatomic,retain) MGLStyleValue * iconPadding; 
@property (nonatomic,retain) MGLStyleValue * iconPitchAlignment; 
@property (nonatomic,retain) MGLStyleValue * iconRotation; 
@property (nonatomic,retain) MGLStyleValue * iconRotate; 
@property (nonatomic,retain) MGLStyleValue * iconRotationAlignment; 
@property (nonatomic,retain) MGLStyleValue * iconScale; 
@property (nonatomic,retain) MGLStyleValue * iconSize; 
@property (nonatomic,retain) MGLStyleValue * iconTextFit; 
@property (nonatomic,retain) MGLStyleValue * iconTextFitPadding; 
@property (nonatomic,retain) MGLStyleValue * keepsIconUpright; 
@property (nonatomic,retain) MGLStyleValue * iconKeepUpright; 
@property (nonatomic,retain) MGLStyleValue * keepsTextUpright; 
@property (nonatomic,retain) MGLStyleValue * textKeepUpright; 
@property (nonatomic,retain) MGLStyleValue * maximumTextAngle; 
@property (nonatomic,retain) MGLStyleValue * textMaxAngle; 
@property (nonatomic,retain) MGLStyleValue * maximumTextWidth; 
@property (nonatomic,retain) MGLStyleValue * textMaxWidth; 
@property (nonatomic,retain) MGLStyleValue * symbolAvoidsEdges; 
@property (nonatomic,retain) MGLStyleValue * symbolAvoidEdges; 
@property (nonatomic,retain) MGLStyleValue * symbolPlacement; 
@property (nonatomic,retain) MGLStyleValue * symbolSpacing; 
@property (nonatomic,retain) MGLStyleValue * text; 
@property (nonatomic,retain) MGLStyleValue * textField; 
@property (nonatomic,retain) MGLStyleValue * textAllowsOverlap; 
@property (nonatomic,retain) MGLStyleValue * textAllowOverlap; 
@property (nonatomic,retain) MGLStyleValue * textAnchor; 
@property (nonatomic,retain) MGLStyleValue * textFontNames; 
@property (nonatomic,retain) MGLStyleValue * textFont; 
@property (nonatomic,retain) MGLStyleValue * textFontSize; 
@property (nonatomic,retain) MGLStyleValue * textSize; 
@property (nonatomic,retain) MGLStyleValue * textIgnoresPlacement; 
@property (nonatomic,retain) MGLStyleValue * textIgnorePlacement; 
@property (nonatomic,retain) MGLStyleValue * textJustification; 
@property (nonatomic,retain) MGLStyleValue * textJustify; 
@property (nonatomic,retain) MGLStyleValue * textLetterSpacing; 
@property (nonatomic,retain) MGLStyleValue * textLineHeight; 
@property (nonatomic,retain) MGLStyleValue * textOffset; 
@property (getter=isTextOptional,nonatomic,retain) MGLStyleValue * textOptional; 
@property (nonatomic,retain) MGLStyleValue * textPadding; 
@property (nonatomic,retain) MGLStyleValue * textPitchAlignment; 
@property (nonatomic,retain) MGLStyleValue * textRotation; 
@property (nonatomic,retain) MGLStyleValue * textRotate; 
@property (nonatomic,retain) MGLStyleValue * textRotationAlignment; 
@property (nonatomic,retain) MGLStyleValue * textTransform; 
@property (nonatomic,retain) MGLStyleValue * iconColor; 
@property (assign,nonatomic) MGLTransition iconColorTransition; 
@property (nonatomic,retain) MGLStyleValue * iconHaloBlur; 
@property (assign,nonatomic) MGLTransition iconHaloBlurTransition; 
@property (nonatomic,retain) MGLStyleValue * iconHaloColor; 
@property (assign,nonatomic) MGLTransition iconHaloColorTransition; 
@property (nonatomic,retain) MGLStyleValue * iconHaloWidth; 
@property (assign,nonatomic) MGLTransition iconHaloWidthTransition; 
@property (nonatomic,retain) MGLStyleValue * iconOpacity; 
@property (assign,nonatomic) MGLTransition iconOpacityTransition; 
@property (nonatomic,retain) MGLStyleValue * iconTranslation; 
@property (assign,nonatomic) MGLTransition iconTranslationTransition; 
@property (nonatomic,retain) MGLStyleValue * iconTranslate; 
@property (nonatomic,retain) MGLStyleValue * iconTranslationAnchor; 
@property (nonatomic,retain) MGLStyleValue * iconTranslateAnchor; 
@property (nonatomic,retain) MGLStyleValue * textColor; 
@property (assign,nonatomic) MGLTransition textColorTransition; 
@property (nonatomic,retain) MGLStyleValue * textHaloBlur; 
@property (assign,nonatomic) MGLTransition textHaloBlurTransition; 
@property (nonatomic,retain) MGLStyleValue * textHaloColor; 
@property (assign,nonatomic) MGLTransition textHaloColorTransition; 
@property (nonatomic,retain) MGLStyleValue * textHaloWidth; 
@property (assign,nonatomic) MGLTransition textHaloWidthTransition; 
@property (nonatomic,retain) MGLStyleValue * textOpacity; 
@property (assign,nonatomic) MGLTransition textOpacityTransition; 
@property (nonatomic,retain) MGLStyleValue * textTranslation; 
@property (assign,nonatomic) MGLTransition textTranslationTransition; 
@property (nonatomic,retain) MGLStyleValue * textTranslate; 
@property (nonatomic,retain) MGLStyleValue * textTranslationAnchor; 
@property (nonatomic,retain) MGLStyleValue * textTranslateAnchor; 
-(SymbolLayer*)rawLayer;
-(id)initWithIdentifier:(id)arg1 source:(id)arg2 ;
-(id)sourceLayerIdentifier;
-(void)setSourceLayerIdentifier:(id)arg1 ;
-(MGLStyleValue *)iconAllowsOverlap;
-(MGLStyleValue *)iconIgnoresPlacement;
-(MGLStyleValue *)iconRotation;
-(MGLStyleValue *)iconScale;
-(MGLStyleValue *)keepsIconUpright;
-(MGLStyleValue *)keepsTextUpright;
-(MGLStyleValue *)maximumTextAngle;
-(MGLStyleValue *)maximumTextWidth;
-(MGLStyleValue *)symbolAvoidsEdges;
-(MGLStyleValue *)textAllowsOverlap;
-(MGLStyleValue *)textFontNames;
-(MGLStyleValue *)textFontSize;
-(MGLStyleValue *)textIgnoresPlacement;
-(MGLStyleValue *)textJustification;
-(MGLStyleValue *)iconTranslation;
-(MGLStyleValue *)iconTranslationAnchor;
-(MGLStyleValue *)textTranslation;
-(MGLStyleValue *)textTranslationAnchor;
-(void)setIconAllowsOverlap:(MGLStyleValue *)arg1 ;
-(void)setIconAllowOverlap:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconAllowOverlap;
-(void)setIconAnchor:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconAnchor;
-(void)setIconIgnoresPlacement:(MGLStyleValue *)arg1 ;
-(void)setIconIgnorePlacement:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconIgnorePlacement;
-(void)setIconOptional:(MGLStyleValue *)arg1 ;
-(id)isIconOptional;
-(void)setIconPitchAlignment:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconPitchAlignment;
-(void)setIconRotation:(MGLStyleValue *)arg1 ;
-(void)setIconRotate:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconRotate;
-(void)setIconRotationAlignment:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconRotationAlignment;
-(void)setIconScale:(MGLStyleValue *)arg1 ;
-(void)setIconTextFit:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconTextFit;
-(void)setIconTextFitPadding:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconTextFitPadding;
-(void)setKeepsIconUpright:(MGLStyleValue *)arg1 ;
-(void)setIconKeepUpright:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconKeepUpright;
-(void)setKeepsTextUpright:(MGLStyleValue *)arg1 ;
-(void)setTextKeepUpright:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textKeepUpright;
-(void)setMaximumTextAngle:(MGLStyleValue *)arg1 ;
-(void)setTextMaxAngle:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textMaxAngle;
-(void)setMaximumTextWidth:(MGLStyleValue *)arg1 ;
-(void)setTextMaxWidth:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textMaxWidth;
-(void)setSymbolAvoidsEdges:(MGLStyleValue *)arg1 ;
-(void)setSymbolAvoidEdges:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)symbolAvoidEdges;
-(void)setSymbolPlacement:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)symbolPlacement;
-(void)setSymbolSpacing:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)symbolSpacing;
-(void)setTextAllowsOverlap:(MGLStyleValue *)arg1 ;
-(void)setTextAllowOverlap:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textAllowOverlap;
-(void)setTextFontNames:(MGLStyleValue *)arg1 ;
-(void)setTextFont:(MGLStyleValue *)arg1 ;
-(void)setTextIgnoresPlacement:(MGLStyleValue *)arg1 ;
-(void)setTextIgnorePlacement:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textIgnorePlacement;
-(void)setTextJustification:(MGLStyleValue *)arg1 ;
-(void)setTextJustify:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textJustify;
-(void)setTextLetterSpacing:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textLetterSpacing;
-(void)setTextLineHeight:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textLineHeight;
-(void)setTextOptional:(MGLStyleValue *)arg1 ;
-(id)isTextOptional;
-(void)setTextPadding:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textPadding;
-(void)setTextPitchAlignment:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textPitchAlignment;
-(void)setTextRotate:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textRotate;
-(void)setTextRotationAlignment:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textRotationAlignment;
-(void)setIconColor:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconColor;
-(void)setIconColorTransition:(MGLTransition)arg1 ;
-(MGLTransition)iconColorTransition;
-(void)setIconHaloBlur:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconHaloBlur;
-(void)setIconHaloBlurTransition:(MGLTransition)arg1 ;
-(MGLTransition)iconHaloBlurTransition;
-(void)setIconHaloColor:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconHaloColor;
-(void)setIconHaloColorTransition:(MGLTransition)arg1 ;
-(MGLTransition)iconHaloColorTransition;
-(void)setIconHaloWidth:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconHaloWidth;
-(void)setIconHaloWidthTransition:(MGLTransition)arg1 ;
-(MGLTransition)iconHaloWidthTransition;
-(void)setIconOpacity:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconOpacity;
-(void)setIconOpacityTransition:(MGLTransition)arg1 ;
-(MGLTransition)iconOpacityTransition;
-(void)setIconTranslation:(MGLStyleValue *)arg1 ;
-(void)setIconTranslationTransition:(MGLTransition)arg1 ;
-(MGLTransition)iconTranslationTransition;
-(void)setIconTranslate:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconTranslate;
-(void)setIconTranslationAnchor:(MGLStyleValue *)arg1 ;
-(void)setIconTranslateAnchor:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconTranslateAnchor;
-(void)setTextColorTransition:(MGLTransition)arg1 ;
-(MGLTransition)textColorTransition;
-(void)setTextHaloBlur:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textHaloBlur;
-(void)setTextHaloBlurTransition:(MGLTransition)arg1 ;
-(MGLTransition)textHaloBlurTransition;
-(void)setTextHaloColor:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textHaloColor;
-(void)setTextHaloColorTransition:(MGLTransition)arg1 ;
-(MGLTransition)textHaloColorTransition;
-(void)setTextHaloWidth:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textHaloWidth;
-(void)setTextHaloWidthTransition:(MGLTransition)arg1 ;
-(MGLTransition)textHaloWidthTransition;
-(void)setTextOpacityTransition:(MGLTransition)arg1 ;
-(MGLTransition)textOpacityTransition;
-(void)setTextTranslation:(MGLStyleValue *)arg1 ;
-(void)setTextTranslationTransition:(MGLTransition)arg1 ;
-(MGLTransition)textTranslationTransition;
-(void)setTextTranslate:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textTranslate;
-(void)setTextTranslationAnchor:(MGLStyleValue *)arg1 ;
-(void)setTextTranslateAnchor:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textTranslateAnchor;
-(MGLStyleValue *)textTransform;
-(void)setTextTransform:(MGLStyleValue *)arg1 ;
-(void)setTextColor:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)text;
-(void)setText:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textColor;
-(MGLStyleValue *)textSize;
-(MGLStyleValue *)textField;
-(void)setTextOffset:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textOffset;
-(MGLStyleValue *)iconImage;
-(void)setPredicate:(id)arg1 ;
-(id)predicate;
-(MGLStyleValue *)textFont;
-(void)setTextOpacity:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textOpacity;
-(id)sourceIdentifier;
-(void)setTextFontSize:(MGLStyleValue *)arg1 ;
-(void)setIconSize:(MGLStyleValue *)arg1 ;
-(void)setTextField:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconSize;
-(void)setIconImage:(MGLStyleValue *)arg1 ;
-(void)setIconPadding:(MGLStyleValue *)arg1 ;
-(void)setIconOffset:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)iconPadding;
-(MGLStyleValue *)iconOffset;
-(MGLStyleValue *)iconImageName;
-(void)setIconImageName:(MGLStyleValue *)arg1 ;
-(MGLStyleValue *)textRotation;
-(MGLStyleValue *)textAnchor;
-(void)setTextAnchor:(MGLStyleValue *)arg1 ;
-(void)setTextRotation:(MGLStyleValue *)arg1 ;
-(void)setTextSize:(MGLStyleValue *)arg1 ;
@end

