/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:24 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCCapturerBufferedVideoWriterDelegate.h>
#import <Snapchat/SCAudioCaptureSessionDelegate.h>
#import <Snapchat/SCManagedVideoDataSourceListener.h>
#import <Snapchat/SCManagedAudioDataSource.h>

@protocol OS_dispatch_semaphore, SCManagedVideoCapturerDelegate;
@class SCCapturerBufferedVideoWriter, SCQueuePerformer, SCAudioCaptureSession, NSError, UIImage, NSDictionary, NSString, SCAudioConfiguration, NSObject, NSURL, SCVideoFrameRawDataCollector, SCManagedVideoCapturerTimeObserver, SCManagedVideoCapturerLogger, SCPromise, SCManagedAudioDataSourceListenerAnnouncer, CIContext, SCScopedAccess;

@interface SCManagedVideoCapturer : NSObject <SCCapturerBufferedVideoWriterDelegate, SCAudioCaptureSessionDelegate, SCManagedVideoDataSourceListener, SCManagedAudioDataSource> {

	double _maxDuration;
	double _recordStartTime;
	SCCapturerBufferedVideoWriter* _videoWriter;
	BOOL _hasWritten;
	SCQueuePerformer* _performer;
	SCAudioCaptureSession* _audioCaptureSession;
	NSError* _lastError;
	UIImage* _placeholderImage;
	BOOL _isVideoSnap;
	NSDictionary* _videoOutputSettings;
	double _stopTime;
	long long _stopSession;
	NSString* _preparedAudioSessionToken;
	NSString* _audioSessionToken;
	SCAudioConfiguration* _preparedAudioConfiguration;
	SCAudioConfiguration* _audioConfiguration;
	NSObject*<OS_dispatch_semaphore> _startRecordingSemaphore;
	long long _rawDataFrameNum;
	NSURL* _rawDataURL;
	SCVideoFrameRawDataCollector* _videoFrameRawDataCollector;
	SCD_Struct_LS191 _startSessionTime;
	double _startSessionRealTime;
	SCD_Struct_LS191 _endSessionTime;
	unsigned _sessionId;
	SCManagedVideoCapturerTimeObserver* _timeObserver;
	SCManagedVideoCapturerLogger* _capturerLogger;
	CGSize _outputSize;
	BOOL _isFrontFacingCamera;
	SCPromise* _recordedVideoPromise;
	SCManagedAudioDataSourceListenerAnnouncer* _announcer;
	NSString* _captureSessionID;
	CIContext* _ciContext;
	SCScopedAccess* _scopedMutableAudioSession;
	BOOL _audioQueueStarted;
	NSURL* _outputURL;
	id<SCManagedVideoCapturerDelegate> _delegate;
	unsigned long long _status;
	SCD_Struct_LS191 _firstWrittenAudioBufferDelay;

}

@property (assign) unsigned long long status;                                                 //@synthesize status=_status - In the implementation block
@property (assign,nonatomic) SCD_Struct_LS191 firstWrittenAudioBufferDelay;                   //@synthesize firstWrittenAudioBufferDelay=_firstWrittenAudioBufferDelay - In the implementation block
@property (nonatomic,copy,readonly) NSURL * outputURL;                                        //@synthesize outputURL=_outputURL - In the implementation block
@property (assign,nonatomic,__weak) id<SCManagedVideoCapturerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) SCD_Struct_SC484 activeSession; 
@property (nonatomic,readonly) BOOL audioQueueStarted;                                        //@synthesize audioQueueStarted=_audioQueueStarted - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) BOOL isStreaming; 
@property (nonatomic,readonly) SCQueuePerformer * performer;                                  //@synthesize performer=_performer - In the implementation block
-(SCQueuePerformer *)performer;
-(id)initWithQueuePerformer:(id)arg1 ;
-(void)managedVideoDataSource:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 devicePosition:(unsigned long long)arg3 ;
-(void)startStreaming;
-(void)stopStreaming;
-(SCD_Struct_SC484)activeSession;
-(SCD_Struct_LS191)firstWrittenAudioBufferDelay;
-(BOOL)audioQueueStarted;
-(void)audioCaptureSession:(id)arg1 didOutputSampleBuffer:(opaqueCMSampleBufferRef)arg2 ;
-(void)videoWriterDidFailWritingWithError:(id)arg1 ;
-(void)prepareForRecording;
-(void)addTimedTask:(id)arg1 ;
-(void)clearTimedTasks;
-(CGSize)defaultSizeForDeviceFormat:(id)arg1 ;
-(CGSize)cropSize:(CGSize)arg1 toAspectRatio:(double)arg2 ;
-(id)defaultRecordingOutputSettingsWithDeviceFormat:(id)arg1 ;
-(void)_beginAudioQueueRecordingWithCompleteHandler:(/*^block*/id)arg1 ;
-(id)_appendInfo:(id)arg1 forInfoKey:(id)arg2 toError:(id)arg3 ;
-(BOOL)_isBottomMicBrokenCode:(long long)arg1 ;
-(id)_handleRetryBeginAudioRecordingErrorCode:(long long)arg1 error:(id)arg2 micResult:(id)arg3 ;
-(void)_retryRequestRecordingWithCompleteHandler:(/*^block*/id)arg1 ;
-(void)_disposeAudioRecording;
-(void)_willStopRecording;
-(void)_processAudioSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)_processVideoSampleBuffer:(opaqueCMSampleBufferRef)arg1 ;
-(void)_addVideoRawDataWithPixelBuffer:(CVBufferRef)arg1 ;
-(void)_generatePlaceholderImageWithPixelBuffer:(CVBufferRef)arg1 metaData:(id)arg2 ;
-(void)setFirstWrittenAudioBufferDelay:(SCD_Struct_LS191)arg1 ;
-(SCD_Struct_SC484)startRecordingAsynchronouslyWithOutputSettings:(id)arg1 maxDuration:(double)arg2 toURL:(id)arg3 deviceFormat:(id)arg4 orientation:(long long)arg5 captureSessionID:(id)arg6 ;
-(void)stopRecordingAsynchronously;
-(void)cancelRecordingAsynchronously;
-(id)init;
-(void)setDelegate:(id<SCManagedVideoCapturerDelegate>)arg1 ;
-(void)dealloc;
-(id<SCManagedVideoCapturerDelegate>)delegate;
-(void)_cleanup;
-(unsigned long long)status;
-(void)setStatus:(unsigned long long)arg1 ;
-(NSURL *)outputURL;
-(BOOL)isStreaming;
-(void)_stopRecording;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(id)ciContext;
@end

