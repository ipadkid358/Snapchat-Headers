/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:45 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/LSABaseComponent.h>
#import <Snapchat/LSAComponentListener.h>
#import <Snapchat/LSAExpressionsListener.h>
#import <Snapchat/LSAPlatformTrackingDelegate.h>

@protocol LSATrackingComponentDelegate;
@class NSString, LSATrackingComponentListenerAnnouncer, LSACategory;

@interface LSATrackingComponent : LSABaseComponent <LSAComponentListener, LSAExpressionsListener, LSAPlatformTrackingDelegate> {

	NSString* _trackingResourcesPath;
	shared_ptr<LSAExpressionsDelegateWrapper>* _expressionsDelegateWrapper;
	shared_ptr<LSAPlatformTrackingDelegateWrapper>* _platformTrackingDelegateWrapper;
	LSATrackingComponentListenerAnnouncer* _trackingComponentAnnouncer;
	unordered_set<LS::TrackingRequirement, std::__1::hash<LS::TrackingRequirement>, std::__1::equal_to<LS::TrackingRequirement>, std::__1::allocator<LS::TrackingRequirement> >* _activeRequirements;
	unordered_set<LS::TrackingRequirement, std::__1::hash<LS::TrackingRequirement>, std::__1::equal_to<LS::TrackingRequirement>, std::__1::allocator<LS::TrackingRequirement> >* _processedRequirements;
	id<LSATrackingComponentDelegate> _delegate;
	LSACategory* _activeCategory;

}

@property (retain) LSACategory * activeCategory;                                            //@synthesize activeCategory=_activeCategory - In the implementation block
@property (assign,nonatomic,__weak) id<LSATrackingComponentDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithPerformer:(id)arg1 ;
-(void)setCoreManager:(shared_ptr<LS::CoreManager>*)arg1 announcer:(id)arg2 configuration:(id)arg3 ;
-(void)innerActivateCategory:(id)arg1 ;
-(void)setActiveCategory:(LSACategory *)arg1 ;
-(void)requestFinishTrackingProcessingIfNeeded;
-(LSACategory *)activeCategory;
-(void)didRecognizeExpression:(id)arg1 ;
-(void)didRecognizeFaces:(unsigned long long)arg1 ;
-(BOOL)didRequestTrackingDataGeneration:(TrackingData*)arg1 useAnchors:(BOOL)arg2 requirements:(unsigned)arg3 ;
-(BOOL)didRequestTrackingBeginWithRequirement:(unsigned)arg1 ;
-(BOOL)didRequestTrackingReset;
-(BOOL)didRequestTrackingEndWithRequirement:(unsigned)arg1 ;
-(BOOL)didRequestTrackingRestartAtPoint:(CGPoint)arg1 ;
-(BOOL)didRequestTrackingRestartWithExistingTransform:(SCD_Struct_LS160)arg1 ;
-(void)didFinishTrackingProcessingForRequirement:(unsigned)arg1 ;
-(BOOL)isTrackingRequirementSupported:(unsigned)arg1 ;
-(void)activateCategory:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)clearActiveCategoryWithCompletion:(/*^block*/id)arg1 ;
-(void)detectActiveCategoryForPoint:(CGPoint)arg1 categories:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)restartTrackingWithCompletion:(/*^block*/id)arg1 ;
-(void)restartTrackingWithNormalizedPoint:(CGPoint)arg1 completion:(/*^block*/id)arg2 ;
-(void)setInitAnimationEnabled:(BOOL)arg1 completion:(/*^block*/id)arg2 ;
-(void)setShouldAnimateNextInitWithCompletion:(/*^block*/id)arg1 ;
-(void)setFaceTrackingResourcesPath:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)componentWillProcessFrame:(id)arg1 ;
-(void)componentDidProcessFrame:(id)arg1 ;
-(void)component:(id)arg1 willSetComplexEffect:(id)arg2 ;
-(void)component:(id)arg1 didSetComplexEffect:(id)arg2 ;
-(void)setFaceTrackingResourcesWithContent:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setDelegate:(id<LSATrackingComponentDelegate>)arg1 ;
-(id<LSATrackingComponentDelegate>)delegate;
-(void)clearResources;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(BOOL)isDeviceSupported;
@end

