/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:49 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <UIKit/UICollectionViewCell.h>
#import <Snapchat/SCSearchEventListener.h>
#import <Snapchat/SCSearchScrollableContentCollectionViewCellDelegate.h>
#import <UIKit/UICollectionViewDelegateFlowLayout.h>
#import <UIKit/UICollectionViewDataSource.h>
#import <Snapchat/SCTimeProfilable.h>
#import <Snapchat/SCSearchCollectionViewDraggingDelegate.h>
#import <Snapchat/SCSearchMenuHeaderViewSelectionDelegate.h>
#import <Snapchat/SCSearchEventAnnouncing.h>

@protocol SCSearchCollectionViewDraggingDelegate, SCSearchHScrollContainerCollectionViewCellDelegate;
@class UICollectionView, SCSearchCenteredHScrollCollectionViewLayout, NSMutableDictionary, SCSearchEventListenerAnnouncer, NSArray, NSString;

@interface SCSearchHScrollContainerCollectionViewCell : UICollectionViewCell <SCSearchEventListener, SCSearchScrollableContentCollectionViewCellDelegate, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, SCTimeProfilable, SCSearchCollectionViewDraggingDelegate, SCSearchMenuHeaderViewSelectionDelegate, SCSearchEventAnnouncing> {

	UICollectionView* _contentCollectionView;
	SCSearchCenteredHScrollCollectionViewLayout* _centeredCollectionViewLayout;
	NSMutableDictionary* _mutableReuseCellIndexForModelIndex;
	BOOL _isDragging;
	BOOL _isDecelerating;
	BOOL _shouldNotifyAfterDecelrating;
	SCSearchEventListenerAnnouncer* _eventAnnouncer;
	BOOL _shouldLoopItems;
	BOOL _shouldAlwaysReloadContentCell;
	BOOL _pagingEnabled;
	NSArray* _containerConfigurations;
	id<SCSearchCollectionViewDraggingDelegate> _draggingDelegate;
	id<SCSearchHScrollContainerCollectionViewCellDelegate> _delegate;

}

@property (assign,getter=isPagingEnabled,nonatomic) BOOL pagingEnabled;                                           //@synthesize pagingEnabled=_pagingEnabled - In the implementation block
@property (nonatomic,copy) NSArray * containerConfigurations;                                                     //@synthesize containerConfigurations=_containerConfigurations - In the implementation block
@property (assign,nonatomic,__weak) id<SCSearchCollectionViewDraggingDelegate> draggingDelegate;                  //@synthesize draggingDelegate=_draggingDelegate - In the implementation block
@property (assign,nonatomic,__weak) id<SCSearchHScrollContainerCollectionViewCellDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (assign,nonatomic) BOOL shouldLoopItems;                                                                //@synthesize shouldLoopItems=_shouldLoopItems - In the implementation block
@property (assign,nonatomic) BOOL shouldAlwaysReloadContentCell;                                                  //@synthesize shouldAlwaysReloadContentCell=_shouldAlwaysReloadContentCell - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)announcerIdentifier;
+(int)context;
-(void)didTriggerEventWithEventName:(id)arg1 announcerIdentifier:(id)arg2 extraData:(id)arg3 ;
-(void)scrollToItemAtIndex:(unsigned long long)arg1 animated:(BOOL)arg2 ;
-(void)updateCellLayoutIfNeeded;
-(void)_endDraggingAndNotifyDelegate;
-(void)searchCollectionView:(id)arg1 didDragToPositionWithDistanceRatio:(double)arg2 fromItemIndex:(unsigned long long)arg3 ;
-(BOOL)shouldLoopItems;
-(void)setShouldLoopItems:(BOOL)arg1 ;
-(void)setShouldAlwaysReloadContentCell:(BOOL)arg1 ;
-(void)setContainerConfigurations:(NSArray *)arg1 ;
-(CGRect)rectForCellInParentScrollView:(id)arg1 ;
-(CGRect)boundsOfParentScrollViewForCell:(id)arg1 ;
-(void)scrollableContentCollectionViewCell:(id)arg1 willDisplayCellAtIndex:(unsigned long long)arg2 ;
-(void)scrollableContentCollectionViewCell:(id)arg1 didTapItemAtIndexPath:(id)arg2 ;
-(void)scrollableContentCollectionViewCell:(id)arg1 didLongPressItemAtIndexPath:(id)arg2 ;
-(void)scrollableContentCollectionViewCell:(id)arg1 didTriggerActionFromItemAtIndexPath:(id)arg2 withActionModel:(id)arg3 fromSourceView:(id)arg4 ;
-(void)scrollableContentCollectionViewCellDidTapViewMore:(id)arg1 ;
-(void)searchMenuHeaderView:(id)arg1 didSelectItemAtIndex:(unsigned long long)arg2 ;
-(NSArray *)containerConfigurations;
-(BOOL)shouldAlwaysReloadContentCell;
-(id)initWithFrame:(CGRect)arg1 ;
-(void)layoutSubviews;
-(void)setDelegate:(id<SCSearchHScrollContainerCollectionViewCellDelegate>)arg1 ;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewWillEndDragging:(id)arg1 withVelocity:(CGPoint)arg2 targetContentOffset:(inout CGPoint*)arg3 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(id<SCSearchHScrollContainerCollectionViewCellDelegate>)delegate;
-(long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(BOOL)isPagingEnabled;
-(void)setPagingEnabled:(BOOL)arg1 ;
-(CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3 ;
-(void)applyLayoutAttributes:(id)arg1 ;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(id<SCSearchCollectionViewDraggingDelegate>)draggingDelegate;
-(void)setDraggingDelegate:(id<SCSearchCollectionViewDraggingDelegate>)arg1 ;
@end

