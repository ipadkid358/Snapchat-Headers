/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:45 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/AVAudioPlayerDelegate.h>

@protocol OS_dispatch_semaphore, LSAScenariumAudioTrackDelegate;
@class AVAudioPlayer, NSObject, NSString;

@interface LSAScenariumAudioTrack : NSObject <AVAudioPlayerDelegate> {

	AVAudioPlayer* _player;
	NSObject*<OS_dispatch_semaphore> _muteSemaphore;
	NSObject*<OS_dispatch_semaphore> _suspendSemaphore;
	NSObject*<OS_dispatch_semaphore> _callbackSemaphore;
	NSObject*<OS_dispatch_semaphore> _loopsSemaphore;
	double _absoluteTimeBeforeSuspend;
	float _volumeToUnmute;
	id<LSAScenariumAudioTrackDelegate> _delegate;
	/*^block*/id _onFinsihCallback;
	BOOL _muted;
	BOOL _suspended;
	long long _numberOfLoops;

}

@property (assign) long long numberOfLoops;                         //@synthesize numberOfLoops=_numberOfLoops - In the implementation block
@property (getter=isMuted) BOOL muted;                              //@synthesize muted=_muted - In the implementation block
@property (getter=isSuspended) BOOL suspended;                      //@synthesize suspended=_suspended - In the implementation block
@property (assign,nonatomic) float volume; 
@property (readonly) double duration; 
@property (assign) double currentTime; 
@property (readonly) BOOL isPlaying; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)initWithContentsOfURL:(id)arg1 error:(id*)arg2 delegate:(id)arg3 onFinishCallback:(/*^block*/id)arg4 ;
-(BOOL)playWithRepeatCount:(long long)arg1 ;
-(void)_finishWithSuccess:(BOOL)arg1 ;
-(void)_resumePlaybackAfterSuspend;
-(BOOL)isSuspended;
-(void)dealloc;
-(double)duration;
-(BOOL)stop;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(BOOL)resume;
-(double)currentTime;
-(BOOL)isPlaying;
-(void)close;
-(BOOL)play;
-(void)setSuspended:(BOOL)arg1 ;
-(BOOL)pause;
-(long long)numberOfLoops;
-(void)setCurrentTime:(double)arg1 ;
-(BOOL)isMuted;
-(void)setMuted:(BOOL)arg1 ;
-(BOOL)prepareToPlay;
-(void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(BOOL)arg2 ;
-(void)setNumberOfLoops:(long long)arg1 ;
@end

