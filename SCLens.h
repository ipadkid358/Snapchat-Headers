/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:11 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCLens.h>
@class NSString, NSDictionary, NSDate, NSArray, SCSponsoredSlug, SOJUUnlockableTrackInfo, NSSet, SOJUUnlockablesAttachment, SCCommunityLensData;


@protocol SCLens <NSObject,NSCoding,NSCopying>
@property (nonatomic,copy,readonly) NSString * lensId; 
@property (nonatomic,copy,readonly) NSString * name; 
@property (nonatomic,copy,readonly) NSString * code; 
@property (nonatomic,copy,readonly) NSString * hintId; 
@property (nonatomic,copy,readonly) NSDictionary * hintTranslations; 
@property (nonatomic,copy,readonly) NSString * contentURL; 
@property (nonatomic,copy,readonly) NSString * iconURL; 
@property (nonatomic,copy,readonly) NSString * filterOverlayImageURL; 
@property (nonatomic,copy,readonly) NSString * bitmojiComicId; 
@property (nonatomic,copy,readonly) NSString * signature; 
@property (nonatomic,copy,readonly) NSDate * expirationDate; 
@property (nonatomic,readonly) long long type; 
@property (nonatomic,readonly) long long section; 
@property (nonatomic,copy,readonly) NSArray * categories; 
@property (nonatomic,copy,readonly) NSArray * categoriesData; 
@property (nonatomic,readonly) BOOL isFeatured; 
@property (nonatomic,readonly) BOOL isSponsored; 
@property (nonatomic,copy,readonly) SCSponsoredSlug * sponsoredSlug; 
@property (nonatomic,copy,readonly) NSArray * scheduleIntervals; 
@property (nonatomic,readonly) BOOL isDemo; 
@property (nonatomic,copy,readonly) NSDate * demoStartDate; 
@property (nonatomic,readonly) long long absoluteCarouselPosition; 
@property (nonatomic,copy,readonly) SOJUUnlockableTrackInfo * unlockableTrackInfo; 
@property (nonatomic,copy,readonly) NSArray * manifest; 
@property (nonatomic,readonly) BOOL isThirdParty; 
@property (nonatomic,readonly) BOOL isStudioPreview; 
@property (nonatomic,readonly) unsigned long long activationCameraPosition; 
@property (nonatomic,copy,readonly) NSString * encryptedGeoData; 
@property (nonatomic,copy,readonly) NSString * unlockCompanionBackReferenceId; 
@property (nonatomic,copy,readonly) NSSet * cameraContexts; 
@property (nonatomic,copy,readonly) NSSet * applicableContexts; 
@property (nonatomic,readonly) BOOL hasContextCards; 
@property (nonatomic,copy,readonly) NSString * onDemandTemplateId; 
@property (nonatomic,copy,readonly) SOJUUnlockablesAttachment * unlockablesAttachment; 
@property (nonatomic,readonly) BOOL isRanked; 
@property (nonatomic,readonly) long long priority; 
@property (nonatomic,copy,readonly) NSArray * lensDescriptors; 
@property (nonatomic,copy,readonly) SCCommunityLensData * communityLensData; 
@property (nonatomic,readonly) long long snappablesReplyType; 
@property (nonatomic,copy,readonly) NSString * snappablesTaglineKey; 
@required
-(NSString *)lensId;
-(SCSponsoredSlug *)sponsoredSlug;
-(SOJUUnlockableTrackInfo *)unlockableTrackInfo;
-(NSString *)hintId;
-(NSDictionary *)hintTranslations;
-(NSDate *)demoStartDate;
-(NSString *)bitmojiComicId;
-(BOOL)isStudioPreview;
-(NSString *)unlockCompanionBackReferenceId;
-(NSArray *)lensDescriptors;
-(BOOL)isRanked;
-(NSSet *)cameraContexts;
-(NSString *)encryptedGeoData;
-(NSString *)filterOverlayImageURL;
-(NSArray *)categoriesData;
-(NSArray *)scheduleIntervals;
-(BOOL)isDemo;
-(long long)absoluteCarouselPosition;
-(unsigned long long)activationCameraPosition;
-(NSSet *)applicableContexts;
-(BOOL)hasContextCards;
-(NSString *)onDemandTemplateId;
-(SOJUUnlockablesAttachment *)unlockablesAttachment;
-(SCCommunityLensData *)communityLensData;
-(long long)snappablesReplyType;
-(NSString *)snappablesTaglineKey;
-(NSString *)iconURL;
-(NSString *)name;
-(long long)section;
-(long long)type;
-(NSArray *)categories;
-(NSString *)code;
-(long long)priority;
-(NSDate *)expirationDate;
-(NSString *)contentURL;
-(BOOL)isFeatured;
-(NSString *)signature;
-(NSArray *)manifest;
-(BOOL)isSponsored;
-(BOOL)isThirdParty;

@end


@class NSString, NSDictionary, NSDate, NSArray, SCSponsoredSlug, SOJUUnlockableTrackInfo, NSSet, SOJUUnlockablesAttachment, SCCommunityLensData, UIImage;

@interface SCLens : NSObject <SCLens> {

	BOOL _isFeatured;
	BOOL _isSponsored;
	BOOL _isDemo;
	BOOL _isThirdParty;
	BOOL _isStudioPreview;
	BOOL _hasContextCards;
	BOOL _isRanked;
	NSString* _lensId;
	NSString* _name;
	NSString* _code;
	NSString* _hintId;
	NSDictionary* _hintTranslations;
	NSString* _contentURL;
	NSString* _iconURL;
	NSString* _filterOverlayImageURL;
	NSString* _bitmojiComicId;
	NSString* _signature;
	NSDate* _expirationDate;
	long long _type;
	long long _section;
	NSArray* _categories;
	NSArray* _categoriesData;
	SCSponsoredSlug* _sponsoredSlug;
	NSArray* _scheduleIntervals;
	NSDate* _demoStartDate;
	long long _absoluteCarouselPosition;
	SOJUUnlockableTrackInfo* _unlockableTrackInfo;
	NSArray* _manifest;
	unsigned long long _activationCameraPosition;
	NSString* _encryptedGeoData;
	NSString* _unlockCompanionBackReferenceId;
	NSSet* _cameraContexts;
	NSSet* _applicableContexts;
	NSString* _onDemandTemplateId;
	SOJUUnlockablesAttachment* _unlockablesAttachment;
	long long _priority;
	NSArray* _lensDescriptors;
	SCCommunityLensData* _communityLensData;
	long long _snappablesReplyType;
	NSString* _snappablesTaglineKey;

}

@property (nonatomic,readonly) UIImage * lensIcon; 
@property (nonatomic,readonly) BOOL suppressActivationAnimation; 
@property (nonatomic,readonly) BOOL isDummyLens; 
@property (nonatomic,readonly) BOOL isOriginalLens; 
@property (nonatomic,readonly) BOOL isOnDemandAddNewLens; 
@property (nonatomic,readonly) BOOL isPlaceholderLens; 
@property (nonatomic,readonly) BOOL isVideoChatOriginalLens; 
@property (nonatomic,readonly) BOOL isStudioLens; 
@property (nonatomic,readonly) BOOL isGroupedOnDemandLensOnCamera; 
@property (nonatomic,readonly) BOOL isCreateYourOwnLens; 
@property (nonatomic,readonly) BOOL isFeedLens; 
@property (nonatomic,readonly) BOOL isLoadingPlaceholderLens; 
@property (nonatomic,readonly) BOOL isSnappable; 
@property (nonatomic,readonly) NSString * snappableDisplayName; 
@property (nonatomic,readonly) BOOL isMemoriesInteractive; 
@property (nonatomic,readonly) BOOL requiresBitmoji; 
@property (nonatomic,readonly) BOOL requiresFriendmoji; 
@property (nonatomic,readonly) BOOL isFetched; 
@property (nonatomic,readonly) NSString * contentPath; 
@property (nonatomic,readonly) UIImage * image; 
@property (nonatomic,readonly) NSString * filterOverlayImagePath; 
@property (nonatomic,readonly) BOOL isNewUserWelcomeLens; 
@property (nonatomic,readonly) BOOL shouldPrefetchForInactiveLensUser; 
@property (assign,nonatomic) BOOL shouldForceReload; 
@property (getter=isOnDemandLensOnCamera,nonatomic,readonly) BOOL onDemandLensOnCamera; 
@property (nonatomic,copy,readonly) NSString * lensId;                                               //@synthesize lensId=_lensId - In the implementation block
@property (nonatomic,copy,readonly) NSString * name;                                                 //@synthesize name=_name - In the implementation block
@property (nonatomic,copy,readonly) NSString * code;                                                 //@synthesize code=_code - In the implementation block
@property (nonatomic,copy,readonly) NSString * hintId;                                               //@synthesize hintId=_hintId - In the implementation block
@property (nonatomic,copy,readonly) NSDictionary * hintTranslations;                                 //@synthesize hintTranslations=_hintTranslations - In the implementation block
@property (nonatomic,copy,readonly) NSString * contentURL;                                           //@synthesize contentURL=_contentURL - In the implementation block
@property (nonatomic,copy,readonly) NSString * iconURL;                                              //@synthesize iconURL=_iconURL - In the implementation block
@property (nonatomic,copy,readonly) NSString * filterOverlayImageURL;                                //@synthesize filterOverlayImageURL=_filterOverlayImageURL - In the implementation block
@property (nonatomic,copy,readonly) NSString * bitmojiComicId;                                       //@synthesize bitmojiComicId=_bitmojiComicId - In the implementation block
@property (nonatomic,copy,readonly) NSString * signature;                                            //@synthesize signature=_signature - In the implementation block
@property (nonatomic,copy,readonly) NSDate * expirationDate;                                         //@synthesize expirationDate=_expirationDate - In the implementation block
@property (nonatomic,readonly) long long type;                                                       //@synthesize type=_type - In the implementation block
@property (nonatomic,readonly) long long section;                                                    //@synthesize section=_section - In the implementation block
@property (nonatomic,copy,readonly) NSArray * categories;                                            //@synthesize categories=_categories - In the implementation block
@property (nonatomic,copy,readonly) NSArray * categoriesData;                                        //@synthesize categoriesData=_categoriesData - In the implementation block
@property (nonatomic,readonly) BOOL isFeatured;                                                      //@synthesize isFeatured=_isFeatured - In the implementation block
@property (nonatomic,readonly) BOOL isSponsored;                                                     //@synthesize isSponsored=_isSponsored - In the implementation block
@property (nonatomic,copy,readonly) SCSponsoredSlug * sponsoredSlug;                                 //@synthesize sponsoredSlug=_sponsoredSlug - In the implementation block
@property (nonatomic,copy,readonly) NSArray * scheduleIntervals;                                     //@synthesize scheduleIntervals=_scheduleIntervals - In the implementation block
@property (nonatomic,readonly) BOOL isDemo;                                                          //@synthesize isDemo=_isDemo - In the implementation block
@property (nonatomic,copy,readonly) NSDate * demoStartDate;                                          //@synthesize demoStartDate=_demoStartDate - In the implementation block
@property (nonatomic,readonly) long long absoluteCarouselPosition;                                   //@synthesize absoluteCarouselPosition=_absoluteCarouselPosition - In the implementation block
@property (nonatomic,copy,readonly) SOJUUnlockableTrackInfo * unlockableTrackInfo;                   //@synthesize unlockableTrackInfo=_unlockableTrackInfo - In the implementation block
@property (nonatomic,copy,readonly) NSArray * manifest;                                              //@synthesize manifest=_manifest - In the implementation block
@property (nonatomic,readonly) BOOL isThirdParty;                                                    //@synthesize isThirdParty=_isThirdParty - In the implementation block
@property (nonatomic,readonly) BOOL isStudioPreview;                                                 //@synthesize isStudioPreview=_isStudioPreview - In the implementation block
@property (nonatomic,readonly) unsigned long long activationCameraPosition;                          //@synthesize activationCameraPosition=_activationCameraPosition - In the implementation block
@property (nonatomic,copy,readonly) NSString * encryptedGeoData;                                     //@synthesize encryptedGeoData=_encryptedGeoData - In the implementation block
@property (nonatomic,copy,readonly) NSString * unlockCompanionBackReferenceId;                       //@synthesize unlockCompanionBackReferenceId=_unlockCompanionBackReferenceId - In the implementation block
@property (nonatomic,copy,readonly) NSSet * cameraContexts;                                          //@synthesize cameraContexts=_cameraContexts - In the implementation block
@property (nonatomic,copy,readonly) NSSet * applicableContexts;                                      //@synthesize applicableContexts=_applicableContexts - In the implementation block
@property (nonatomic,readonly) BOOL hasContextCards;                                                 //@synthesize hasContextCards=_hasContextCards - In the implementation block
@property (nonatomic,copy,readonly) NSString * onDemandTemplateId;                                   //@synthesize onDemandTemplateId=_onDemandTemplateId - In the implementation block
@property (nonatomic,copy,readonly) SOJUUnlockablesAttachment * unlockablesAttachment;               //@synthesize unlockablesAttachment=_unlockablesAttachment - In the implementation block
@property (nonatomic,readonly) BOOL isRanked;                                                        //@synthesize isRanked=_isRanked - In the implementation block
@property (nonatomic,readonly) long long priority;                                                   //@synthesize priority=_priority - In the implementation block
@property (nonatomic,copy,readonly) NSArray * lensDescriptors;                                       //@synthesize lensDescriptors=_lensDescriptors - In the implementation block
@property (nonatomic,copy,readonly) SCCommunityLensData * communityLensData;                         //@synthesize communityLensData=_communityLensData - In the implementation block
@property (nonatomic,readonly) long long snappablesReplyType;                                        //@synthesize snappablesReplyType=_snappablesReplyType - In the implementation block
@property (nonatomic,copy,readonly) NSString * snappablesTaglineKey;                                 //@synthesize snappablesTaglineKey=_snappablesTaglineKey - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(unsigned long long)fasterCodingVersion;
+(unsigned long long*)fasterCodingKeys;
+(id)unavailableLensWithLens:(id)arg1 ;
+(void)cacheImage:(id)arg1 forLens:(id)arg2 ;
+(id)bundledLensWithCode:(id)arg1 ;
+(id)applicableContextForLiveCamera;
+(id)applicableContextForPreview;
+(id)applicableContextForMemories;
+(long long)lensSourceFromApplicableContext:(id)arg1 ;
+(id)lensThumbnailImageForUrlString:(id)arg1 ;
+(void)cacheThumbnailImage:(id)arg1 forUrlString:(id)arg2 ;
+(void)resetThumbnailImageCache;
+(void)cacheContentPath:(id)arg1 forLens:(id)arg2 ;
+(void)cacheFilterOverlayImagePath:(id)arg1 forLens:(id)arg2 ;
+(void)resetContentPathCache;
+(void)resetFilterOverlayImagePathCache;
+(void)resetImageCache;
+(id)applicableContextForAdToLens;
+(id)contextForRearFacingCamera;
+(id)contextForFrontFacingCamera;
+(id)applicableContextForVideoChat;
+(id)applicableContextForReplyCamera;
+(id)applicableContextForPreviewNoFace;
+(id)contentPathForStudioLensWithCode:(id)arg1 ;
+(id)studioLensMetadataFromContentPath:(id)arg1 ;
+(id)pathForBundledResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3 ;
+(id)rawBundledLenses;
+(id)bundledLensFromDictionary:(id)arg1 ;
+(void)initialize;
+(id)placeholderImage;
-(NSString *)contentPath;
-(BOOL)preferFasterCoding;
-(void)encodeWithFasterCoder:(id)arg1 ;
-(void)decodeWithFasterDecoder:(id)arg1 ;
-(void)setObject:(id)arg1 forUInt64Key:(unsigned long long)arg2 ;
-(void)setBool:(BOOL)arg1 forUInt64Key:(unsigned long long)arg2 ;
-(void)setSInt32:(int)arg1 forUInt64Key:(unsigned long long)arg2 ;
-(void)setSInt64:(long long)arg1 forUInt64Key:(unsigned long long)arg2 ;
-(NSString *)lensId;
-(SCSponsoredSlug *)sponsoredSlug;
-(SOJUUnlockableTrackInfo *)unlockableTrackInfo;
-(NSString *)hintId;
-(NSDictionary *)hintTranslations;
-(NSDate *)demoStartDate;
-(NSString *)bitmojiComicId;
-(BOOL)isStudioPreview;
-(NSString *)unlockCompanionBackReferenceId;
-(NSArray *)lensDescriptors;
-(BOOL)isRanked;
-(NSSet *)cameraContexts;
-(NSString *)encryptedGeoData;
-(NSString *)filterOverlayImageURL;
-(NSArray *)categoriesData;
-(NSArray *)scheduleIntervals;
-(BOOL)isDemo;
-(long long)absoluteCarouselPosition;
-(unsigned long long)activationCameraPosition;
-(NSSet *)applicableContexts;
-(BOOL)hasContextCards;
-(NSString *)onDemandTemplateId;
-(SOJUUnlockablesAttachment *)unlockablesAttachment;
-(SCCommunityLensData *)communityLensData;
-(long long)snappablesReplyType;
-(NSString *)snappablesTaglineKey;
-(id)initWithLensId:(id)arg1 name:(id)arg2 code:(id)arg3 hintId:(id)arg4 hintTranslations:(id)arg5 contentURL:(id)arg6 iconURL:(id)arg7 filterOverlayImageURL:(id)arg8 bitmojiComicId:(id)arg9 signature:(id)arg10 expirationDate:(id)arg11 type:(long long)arg12 section:(long long)arg13 categories:(id)arg14 categoriesData:(id)arg15 isFeatured:(BOOL)arg16 isSponsored:(BOOL)arg17 sponsoredSlug:(id)arg18 scheduleIntervals:(id)arg19 isDemo:(BOOL)arg20 demoStartDate:(id)arg21 absoluteCarouselPosition:(long long)arg22 unlockableTrackInfo:(id)arg23 manifest:(id)arg24 isThirdParty:(BOOL)arg25 isStudioPreview:(BOOL)arg26 activationCameraPosition:(unsigned long long)arg27 encryptedGeoData:(id)arg28 unlockCompanionBackReferenceId:(id)arg29 cameraContexts:(id)arg30 applicableContexts:(id)arg31 hasContextCards:(BOOL)arg32 onDemandTemplateId:(id)arg33 unlockablesAttachment:(id)arg34 isRanked:(BOOL)arg35 priority:(long long)arg36 lensDescriptors:(id)arg37 communityLensData:(id)arg38 snappablesReplyType:(long long)arg39 snappablesTaglineKey:(id)arg40 ;
-(UIImage *)lensIcon;
-(id)effectInfo;
-(BOOL)isSnappable;
-(BOOL)isFetched;
-(BOOL)shouldForceReload;
-(BOOL)isOriginalLens;
-(BOOL)isCreateYourOwnLens;
-(BOOL)hasSnapcodeCategory;
-(void)setShouldForceReload:(BOOL)arg1 ;
-(BOOL)isVideoChatOriginalLens;
-(BOOL)isDummyLens;
-(BOOL)isGroupedOnDemandLensOnCamera;
-(NSString *)filterOverlayImagePath;
-(BOOL)isCreativeLens;
-(BOOL)isOnDemandLensOnCamera;
-(BOOL)isFeedLens;
-(BOOL)suppressActivationAnimation;
-(BOOL)isOnDemandAddNewLens;
-(BOOL)isPlaceholderLens;
-(BOOL)isMemoriesInteractive;
-(BOOL)isStudioLens;
-(BOOL)isNewUserWelcomeLens;
-(BOOL)shouldPrefetchForInactiveLensUser;
-(BOOL)requiresBitmoji;
-(BOOL)requiresFriendmoji;
-(BOOL)isUnavailableLens;
-(BOOL)isLoadingPlaceholderLens;
-(BOOL)hasSelfieCategory;
-(NSString *)snappableDisplayName;
-(id)contentCacheKey;
-(id)filterOverlayImagePathCacheKey;
-(BOOL)belongsToForceDownloadCategory;
-(BOOL)supportsMetadataDebug;
-(void)extraLensPushedDate:(/*^block*/id)arg1 ;
-(NSString *)iconURL;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(NSString *)description;
-(NSString *)name;
-(long long)section;
-(long long)type;
-(NSArray *)categories;
-(NSString *)code;
-(UIImage *)image;
-(id)copyWithZone:(NSZone*)arg1 ;
-(long long)priority;
-(NSDate *)expirationDate;
-(id)imageCacheKey;
-(NSString *)contentURL;
-(BOOL)isFeatured;
-(NSString *)signature;
-(NSArray *)manifest;
-(BOOL)isSponsored;
-(BOOL)isThirdParty;
@end

