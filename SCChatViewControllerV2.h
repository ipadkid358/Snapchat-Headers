/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:27 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCChatBaseViewController.h>
#import <Snapchat/SCActionMenuViewControllerDelegate.h>
#import <Snapchat/SCChatViewModelReducerVisibilityDelegate.h>
#import <Snapchat/SCChatTableLongPressDelegate.h>
#import <Snapchat/SCChatCashControllerDelegate.h>
#import <Snapchat/SCChatFullscreenMediaChatTableCellDelegate.h>
#import <Snapchat/SCChatViewHeaderDataSource.h>
#import <Snapchat/SCChatInputControllerDelegate.h>
#import <Snapchat/SCSnapReplayControllerV3Provider.h>
#import <Snapchat/SCChatCellGestureDelegate.h>
#import <UIKit/UIScrollViewDelegate.h>
#import <Snapchat/SCHeaderDelegate.h>
#import <Snapchat/SCSnapPlayContainer.h>
#import <Snapchat/SCSnapPlayDelegate.h>
#import <Snapchat/SCTimeProfilable.h>
#import <libobjc.A.dylib/SKStoreProductViewControllerDelegate.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <Snapchat/SCChatDrawerSender.h>
#import <Snapchat/SCChatViewModelListener.h>
#import <Snapchat/SCDetectTouchViewDelegate.h>
#import <Snapchat/SCChatDelegate.h>
#import <Snapchat/SCChatStoryDelegate.h>
#import <Snapchat/SCOperaPresenterDelegate.h>
#import <Snapchat/SCReplyDelegate.h>
#import <Snapchat/SCChatHamburgerTableSectionOneOnOneSettingDataSource.h>
#import <Snapchat/SCChatHamburgerTableSectionOneOnOneSettingDelegate.h>
#import <Snapchat/SCChatHamburgerTableSectionFriendsDelegate.h>
#import <Snapchat/SCS2RStackDebuggable.h>

@protocol SCChatStoryIconUpdater;
@class SCActionSheetCoordinator, NSMutableSet, SCManagedCapturerState, NSString, SCActionMenuViewController, SCUserSession, SCChatTableController, SCChatViewHeader, SCChatMessageReleaser, SCChatAutoResponderController, SCChatCashMediatorV2, SCChatCashController, SCDetectTouchView, SCBaseMediaOperaPresenter, SCBitmojiAvatarPickerViewController, SCChatSendHelper, SCSearchStoriesPresenter, SCOperaPresenter, SCOperaPlaylistStoriesPlugin, SCOperaPlaylistNotificationOptInPlugin, SCOperaPerformanceTrackingPlugin, SCContextOperaPlaylistPlugin, SCOperaPlaylistCameraPlugin, SCStoriesReplayManager, SCChatHamburgerTableSectionFriends, SCChatViewLifeCycleListenerAnnouncer, SCChat, SCChatViewModelForChat, SCModalHamburgerRootViewController, SCBaseMediaFullScreenView, UIWindow, SCCustomVolumeController, UILongPressGestureRecognizer, UIPanGestureRecognizer, SCChatTableViewDelegate, UITableView;

@interface SCChatViewControllerV2 : SCChatBaseViewController <SCActionMenuViewControllerDelegate, SCChatViewModelReducerVisibilityDelegate, SCChatTableLongPressDelegate, SCChatCashControllerDelegate, SCChatFullscreenMediaChatTableCellDelegate, SCChatViewHeaderDataSource, SCChatInputControllerDelegate, SCSnapReplayControllerV3Provider, SCChatCellGestureDelegate, UIScrollViewDelegate, SCHeaderDelegate, SCSnapPlayContainer, SCSnapPlayDelegate, SCTimeProfilable, SKStoreProductViewControllerDelegate, UIGestureRecognizerDelegate, SCChatDrawerSender, SCChatViewModelListener, SCDetectTouchViewDelegate, SCChatDelegate, SCChatStoryDelegate, SCOperaPresenterDelegate, SCReplyDelegate, SCChatHamburgerTableSectionOneOnOneSettingDataSource, SCChatHamburgerTableSectionOneOnOneSettingDelegate, SCChatHamburgerTableSectionFriendsDelegate, SCS2RStackDebuggable> {

	SCActionSheetCoordinator* _actionSheetCoordinator;
	NSMutableSet* _clearChatTimers;
	double _lastYOffset;
	SCManagedCapturerState* _managedCapturerState;
	NSString* _managedCapturerToken;
	BOOL _isRegularSession;
	BOOL _togglingCamera;
	BOOL _isChatViewCentered;
	BOOL _actionMenuShown;
	BOOL _actionMenuOpening;
	SCActionMenuViewController* _actionMenuViewController;
	SCUserSession* _userSession;
	SCChatTableController* _chatTableController;
	SCChatViewHeader* _header;
	SCChatMessageReleaser* _messageReleaser;
	SCChatAutoResponderController* _autoResponderController;
	SCChatCashMediatorV2* _cashMediator;
	SCChatCashController* _cashController;
	unsigned long long _lastRecipientChatSequenceSounded;
	long long _missCallType;
	SCDetectTouchView* _detectTouchView;
	SCBaseMediaOperaPresenter* _operaPresenter;
	SCBitmojiAvatarPickerViewController* _avatarPickerVC;
	SCChatSendHelper* _chatSendHelper;
	SCSearchStoriesPresenter* _searchStoriesPresenter;
	double _lastVerticalTranslateUp;
	id<SCChatStoryIconUpdater> _chatStoryIconUpdater;
	SCOperaPresenter* _storiesOperaPresenter;
	SCOperaPlaylistStoriesPlugin* _storiesPlugin;
	SCOperaPlaylistNotificationOptInPlugin* _optInPlugin;
	SCOperaPerformanceTrackingPlugin* _performanceTrackingPlugin;
	SCContextOperaPlaylistPlugin* _contextPlugin;
	SCOperaPlaylistCameraPlugin* _cameraPlugin;
	SCStoriesReplayManager* _storiesReplayManager;
	SCChatHamburgerTableSectionFriends* _friendsSection;
	SCChatViewLifeCycleListenerAnnouncer* _lifeCycleAnnouncer;
	SCChat* _chat;
	unsigned long long _deeplinkType;
	SCChatViewModelForChat* _chatViewModel;
	SCModalHamburgerRootViewController* _modalHamburgerViewController;
	SCBaseMediaFullScreenView* _baseMediaFullScreenView;
	UIWindow* _mediaFullScreenWindow;
	SCCustomVolumeController* _customVolumeController;
	UILongPressGestureRecognizer* _longPressGestureRecognizer;
	UIPanGestureRecognizer* _panGestureRecognizer;
	double _snapViewingChatOffset;
	SCChatTableViewDelegate* _tableDelegate;
	UITableView* _tableView;

}

@property (nonatomic,retain) SCModalHamburgerRootViewController * modalHamburgerViewController;              //@synthesize modalHamburgerViewController=_modalHamburgerViewController - In the implementation block
@property (nonatomic,retain) SCBaseMediaFullScreenView * baseMediaFullScreenView;                            //@synthesize baseMediaFullScreenView=_baseMediaFullScreenView - In the implementation block
@property (nonatomic,retain) UIWindow * mediaFullScreenWindow;                                               //@synthesize mediaFullScreenWindow=_mediaFullScreenWindow - In the implementation block
@property (nonatomic,retain) SCCustomVolumeController * customVolumeController;                              //@synthesize customVolumeController=_customVolumeController - In the implementation block
@property (nonatomic,retain) UILongPressGestureRecognizer * longPressGestureRecognizer;                      //@synthesize longPressGestureRecognizer=_longPressGestureRecognizer - In the implementation block
@property (nonatomic,retain) UIPanGestureRecognizer * panGestureRecognizer;                                  //@synthesize panGestureRecognizer=_panGestureRecognizer - In the implementation block
@property (assign,nonatomic) double snapViewingChatOffset;                                                   //@synthesize snapViewingChatOffset=_snapViewingChatOffset - In the implementation block
@property (nonatomic,retain) SCChatTableViewDelegate * tableDelegate;                                        //@synthesize tableDelegate=_tableDelegate - In the implementation block
@property (nonatomic,retain) UITableView * tableView;                                                        //@synthesize tableView=_tableView - In the implementation block
@property (nonatomic,retain) SCChat * chat;                                                                  //@synthesize chat=_chat - In the implementation block
@property (assign,nonatomic) unsigned long long deeplinkType;                                                //@synthesize deeplinkType=_deeplinkType - In the implementation block
@property (nonatomic,retain) SCChatViewModelForChat * chatViewModel;                                         //@synthesize chatViewModel=_chatViewModel - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)pageViewName;
+(int)context;
-(void)pan:(id)arg1 ;
-(void)lockScrollWithRequestId:(id)arg1 ;
-(void)unlockScrollWithRequestId:(id)arg1 ;
-(void)leftButtonPressed;
-(BOOL)isPartiallyVisible;
-(id)chatMessages;
-(id)getPageName;
-(id)getContainerView;
-(void)didSelectPreserveMessageForMessageId:(id)arg1 conversationId:(id)arg2 ;
-(void)didTapDeepLinkWithUrl:(id)arg1 additionalInfo:(id)arg2 ;
-(BOOL)doNotDisturb;
-(BOOL)shouldShowGreetingSticker;
-(BOOL)shouldPopToRootViewController;
-(id)getPageViewName;
-(void)_initGestures;
-(id)replyParameters;
-(void)operaPresenterDidFailToPresent:(id)arg1 ;
-(void)operaPresenterWillBeginPresenting:(id)arg1 transitionAnimator:(id)arg2 ;
-(void)operaPresenterWillBeginDismissing:(id)arg1 transitionAnimator:(id)arg2 ;
-(void)operaPresenterWillBeginAnimatingToDismiss:(id)arg1 ;
-(void)operaPresenterDidFinishDismissing:(id)arg1 ;
-(void)operaPresenterDidCancelDismissing:(id)arg1 ;
-(void)operaPresenterDidFinishPresenting:(id)arg1 transitionAnimator:(id)arg2 ;
-(void)operaPresenterDidTearDown:(id)arg1 ;
-(void)operaPresenter:(id)arg1 didBeginPlayingPlaylistGroupDataModel:(id)arg2 ;
-(void)operaPresenter:(id)arg1 didFinishViewingPlaylistGroupDataModel:(id)arg2 nextGroupDataModel:(id)arg3 ;
-(void)viewWillResignActive;
-(void)viewDidBecomeActive;
-(void)showTooltip;
-(void)viewDidSwipeIn;
-(void)viewDidSwipeOut;
-(void)viewDidAppearAtOffset:(double)arg1 ;
-(void)cardLinkingSuccessful;
-(void)flowSuccessfullyCompleted;
-(double)yOffsetForPaymentView;
-(void)didFinishSwipeDown;
-(void)didFinishSwipeToSend;
-(BOOL)isEligibleSenderReceiverPair;
-(void)viewWillEnterBackground;
-(BOOL)paymentSwipeSenderVisible;
-(BOOL)isPlayingSnap;
-(void)onPaymentTapped:(id)arg1 ;
-(BOOL)onChatTapped:(id)arg1 ;
-(void)attemptRetryBlockForMessage:(id)arg1 ;
-(void)textTableViewCellDidSelectCashLabelWithCell:(id)arg1 ;
-(BOOL)tableIsFadedOut;
-(CGRect)iconViewRectForSnap:(id)arg1 ;
-(void)stackedTableViewCell:(id)arg1 didSelectIndex:(unsigned long long)arg2 viewModel:(id)arg3 ;
-(void)stackedTableViewCellDidFinishPlayingNoteWithMessageId:(id)arg1 ;
-(id)operaPresenter;
-(id)searchStoriesPresenter;
-(CGRect)mediaBoundingFrame;
-(void)didRequestStateUpdateForMessageCell:(id)arg1 ;
-(void)dismissFullScreenView;
-(void)setChatViewModel:(SCChatViewModelForChat *)arg1 ;
-(void)deleteFailedPaymentMessage:(id)arg1 ;
-(void)didUpdateSaveForPaymentMessage:(id)arg1 ;
-(void)didSendPayment;
-(BOOL)isViewPartiallyVisible;
-(void)didViewModelsChange;
-(void)didShouldShowGreetingStickerStateChange:(BOOL)arg1 ;
-(void)dismissActionMenu:(BOOL)arg1 ;
-(id)_messageViewModelForIndexPath:(id)arg1 ;
-(void)didSaveOrUnsaveMessageId:(id)arg1 conversationId:(id)arg2 ;
-(void)didBatchSaveOrUnsaveMessageIds:(id)arg1 conversationId:(id)arg2 toSaved:(BOOL)arg3 ;
-(void)actionMenuDidOpen:(id)arg1 ;
-(void)actionMenuWillDismiss:(id)arg1 ;
-(void)actionMenuDidDismiss:(id)arg1 ;
-(void)didPressSendToForForwardableViewModel:(id)arg1 ;
-(void)didPressEraseMessageId:(id)arg1 conversationId:(id)arg2 ;
-(void)didSaveCustomSticker:(id)arg1 ;
-(void)didAddSnapchatter:(id)arg1 friendSourceType:(long long)arg2 conversationId:(id)arg3 ;
-(void)didRemoveSnapchatter:(id)arg1 conversationId:(id)arg2 ;
-(void)didSaveMediasToCameraRollFromViewModel:(id)arg1 ;
-(void)didPressAddToGroupButtonInChatBurger;
-(void)didPressSnapReplyForViewModel:(id)arg1 withSticker:(id)arg2 ;
-(void)didTapToViewStoryForFriendStories:(id)arg1 viewingType:(long long)arg2 viewLocation:(long long)arg3 ;
-(BOOL)shouldShowChatStoryHeader;
-(id)chatRecipientUsername;
-(SCChatViewModelForChat *)chatViewModel;
-(void)sendMediaDrawerMedia:(id)arg1 fromLocation:(SCD_Struct_SC420)arg2 ;
-(NSDictionary*)conversationStickerUsageHistory;
-(void)sendSticker:(id)arg1 fromPack:(id)arg2 fromPosition:(unsigned long long)arg3 fromSource:(long long)arg4 ;
-(void)chatDidAttemptToSendMessage;
-(void)onCellTapped:(id)arg1 cell:(id)arg2 ;
-(void)updateTableContentInsetForPresenceWithHeight:(double)arg1 ;
-(void)setActionMenuShown:(BOOL)arg1 ;
-(void)_initLogger;
-(void)_initHeader;
-(void)_initChatTable;
-(void)updateChatViewSize;
-(void)addLifeCycleListener:(id)arg1 ;
-(void)prepareToBeVisible;
-(id)chatInputController;
-(BOOL)isFullScreenPlayerShown;
-(void)releaseMemory;
-(void)viewDidFullyAppearFromStack:(BOOL)arg1 ;
-(BOOL)replyingToStoryWithChat;
-(void)viewDidFullyDisappearFromStack:(BOOL)arg1 ;
-(void)viewDidPopFromStack;
-(void)dismissAvatarPicker;
-(void)_cleanupHamburger;
-(BOOL)shouldDisableScrollOut:(id)arg1 ;
-(SCBaseMediaFullScreenView *)baseMediaFullScreenView;
-(BOOL)isFullScreenMode;
-(void)_onFailureCameraRollSave;
-(SCCustomVolumeController *)customVolumeController;
-(void)setCustomVolumeController:(SCCustomVolumeController *)arg1 ;
-(void)_playChatSoundMaybe:(unsigned long long)arg1 ;
-(BOOL)_isPlayingMedia;
-(void)_presentSwipeToSend;
-(void)chatInputControllerViewDidChange:(id)arg1 ;
-(void)handleSendCashActionInitiatedWithSwipe:(BOOL)arg1 ;
-(void)_playChatSentSoundMaybe;
-(void)didFollowThrough;
-(CGSize)_chatViewSize;
-(SCModalHamburgerRootViewController *)modalHamburgerViewController;
-(BOOL)_shouldShowMapInHamburger;
-(void)removeLifeCycleListener:(id)arg1 ;
-(id)_chatStoryIconUpdaterForViewLocation:(long long)arg1 ;
-(id)_firstStoryToReplayForFriendStories:(id)arg1 viewLocation:(long long)arg2 ;
-(void)_tapToLoadFriendStories:(id)arg1 viewingType:(long long)arg2 viewLocation:(long long)arg3 ;
-(id)_currentFriendStoriesDisplaying;
-(id)storiesReplayManager;
-(void)sccpConnectionStatusChanged;
-(void)userDidTakeScreenshot;
-(void)userDidScreenRecord;
-(void)_addCustomVolumeIgnoringNextVolumeChange:(BOOL)arg1 ;
-(void)_removeCustomVolume;
-(CGRect)_screenFrameExcludingHeader;
-(CGRect)_iconViewRectForIndexPath:(id)arg1 ;
-(void)goRightWithAnimation:(BOOL)arg1 ;
-(void)hamburgerTableSectionOneOnOneSettingDidBlockFriend:(id)arg1 ;
-(void)hamburgerTableSectionOneOnOneSettingDidRemoveFriend:(id)arg1 ;
-(void)replyWithParameter:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)chatInputControllerRecipient:(id)arg1 ;
-(void)chatInputControllerTextDidChange:(id)arg1 ;
-(void)chatInputController:(id)arg1 inputTextHeightDidChangeAnimated:(BOOL)arg2 ;
-(void)chatInputController:(id)arg1 didTapSendText:(id)arg2 ;
-(void)chatInputController:(id)arg1 didPasteGifData:(id)arg2 ;
-(void)chatInputController:(id)arg1 didTypingStateChange:(long long)arg2 ;
-(void)drawerActive;
-(void)drawerInactiveButVisible:(BOOL)arg1 ;
-(void)disableTableViewInteractionBeforeChatNotesRecording;
-(void)enableTableViewInteractionAfterChatNotesRecording;
-(BOOL)isQuickSnapEnabled;
-(void)didPressSnapAccessoryButton;
-(void)didReturnFromCameraWithoutSendingSnap;
-(BOOL)supports4GCalling;
-(BOOL)showAvatarPickerWithBitmojiUsers:(id)arg1 targetView:(id)arg2 delegate:(id)arg3 ;
-(BOOL)showFriendmojiHintWithTargetView:(id)arg1 delegate:(id)arg2 ;
-(void)friendmojiAvatarPickerClosedWithFriendmojiType:(long long)arg1 selectedStickerId:(id)arg2 ;
-(void)resizePreview:(BOOL)arg1 dueToTextInput:(BOOL)arg2 ;
-(BOOL)chatInputControllerShouldAllowTextEditing:(id)arg1 ;
-(void)chatInputControllerCashSendButtonPressed:(id)arg1 ;
-(void)chatInputController:(id)arg1 didTapSendPaymentText:(id)arg2 cashTagRanges:(id)arg3 amount:(unsigned long long)arg4 ;
-(void)mediaWillGoFullscreen;
-(void)mediaDidGoFullscreen:(BOOL)arg1 ;
-(void)mediaDidDismissFullscreen;
-(void)showCustomVolumeViewIgnoringNextVolumeChange:(BOOL)arg1 ;
-(void)hideCustomVolumeView;
-(BOOL)shouldDisableFullScreen;
-(void)didRequestRetryFailedMessage:(id)arg1 ;
-(void)didLongPressOnMessageViewModel:(id)arg1 cell:(id)arg2 ;
-(void)didShowCompleteDisplayForMessageId:(id)arg1 conversationId:(id)arg2 ;
-(void)didShowPendingDisplayForMessageId:(id)arg1 conversationId:(id)arg2 ;
-(void)didReceiveBitmojiInChat:(id)arg1 stickerId:(id)arg2 ;
-(void)presentMiniProfileForSnapchatter:(id)arg1 addSource:(long long)arg2 ;
-(void)didTapAddButtonForSnapchatter:(id)arg1 ;
-(void)willDisplayAlertView;
-(void)didDismissAlertView;
-(id)replayController;
-(void)sendAudioNoteWithData:(id)arg1 duration:(double)arg2 ;
-(void)sendVideoNoteWithData:(id)arg1 duration:(double)arg2 ;
-(void)gotoSendMeSnapsSettingsViewWithAnimation:(BOOL)arg1 ;
-(long long)retentionPolicy;
-(void)hamburgerTableSectionFriends:(id)arg1 askedToSwitchToChat:(id)arg2 deepLinkURL:(id)arg3 ;
-(id)additionalS2RDebugOutput;
-(id)initWithUserSession:(id)arg1 parentDelegate:(id)arg2 ;
-(void)layoutChatTableViewIfNeeded;
-(BOOL)canBeShown;
-(void)setKeyboardHidden:(BOOL)arg1 ;
-(BOOL)keyboardHidden;
-(BOOL)isTheUserConsumingMedia;
-(void)_playChatReceivedSoundMaybe;
-(long long)sourceViewType;
-(void)prepareSideMenuAppear;
-(void)restoreViewAfterSideMenuDisappear;
-(void)updateTableContentInset:(double)arg1 ;
-(id)messageViewModelWithMessageId:(id)arg1 ;
-(id)lifeCycleAnnouncer;
-(void)setLifeCycleAnnouncer:(id)arg1 ;
-(void)setModalHamburgerViewController:(SCModalHamburgerRootViewController *)arg1 ;
-(void)setBaseMediaFullScreenView:(SCBaseMediaFullScreenView *)arg1 ;
-(UIWindow *)mediaFullScreenWindow;
-(void)setMediaFullScreenWindow:(UIWindow *)arg1 ;
-(double)snapViewingChatOffset;
-(void)setSnapViewingChatOffset:(double)arg1 ;
-(id)_bubbleChatController;
-(void)_initAutoResponderController;
-(void)_initCashController;
-(unsigned long long)deeplinkType;
-(void)setDeeplinkType:(unsigned long long)arg1 ;
-(void)dismissTooltipIfNeeded;
-(void)_initMessageReleaser;
-(void)handleLongPressForCellWithBaseMessage:(id)arg1 messageViewModel:(id)arg2 ;
-(void)_saveToCameraRollForSavableViewModel:(id)arg1 ;
-(void)_onSuccessCameraRollSaveWithMessage:(id)arg1 chatSendHelper:(id)arg2 ;
-(BOOL)snapCellShouldHandleLongPressForSnap:(id)arg1 ;
-(void)longPressBeganForCellWithSnap:(id)arg1 cell:(id)arg2 ;
-(void)showActionMenuAtIndexPath:(id)arg1 cell:(id)arg2 selectedIndex:(unsigned long long)arg3 viewModel:(id)arg4 gestureType:(long long)arg5 ;
-(void)_batchSaveOrUnsaveMessages:(id)arg1 animated:(BOOL)arg2 toSaved:(BOOL)arg3 ;
-(void)handleLongPressForMessage:(id)arg1 messageViewModel:(id)arg2 cell:(id)arg3 ;
-(void)_showDeleteFailedMessageActionSheet:(id)arg1 ;
-(void)_showSendAndSaveActionSheet:(id)arg1 messageViewModel:(id)arg2 ;
-(void)_saveOrUnsaveMessage:(id)arg1 animated:(BOOL)arg2 ;
-(id)_snapChatTableViewCell:(id)arg1 ;
-(void)cancelAudioVideoNoteMaybeWithCompletion:(/*^block*/id)arg1 ;
-(void)showTooltipIfNeeded;
-(void)panInputAccessoriesWithGestureRecognizer:(id)arg1 dragToHide:(BOOL)arg2 ;
-(BOOL)inputAccessoriesHidden;
-(void)setInputAccessoriesHidden:(BOOL)arg1 ;
-(BOOL)inputViewTransparent;
-(void)setInputViewTransparent:(BOOL)arg1 ;
-(void)setIsFullScreenMode:(BOOL)arg1 ;
-(void)onSnapTapped:(id)arg1 cell:(id)arg2 ;
-(void)_saveViewModel:(id)arg1 ;
-(void)attemptRetryBlockForSnap:(id)arg1 ;
-(BOOL)_hasSendingMessageInBlockForViewModel:(id)arg1 indexPath:(id)arg2 ;
-(void)_addCustomStickerForData:(id)arg1 ;
-(void)_updateMessageStateForBaseMessage:(id)arg1 animated:(BOOL)arg2 ;
-(BOOL)_isPlayingStoryShare;
-(BOOL)_isPlayingNYCShare;
-(BOOL)_isPlayingSearchShare;
-(void)_messageSendEpilogue;
-(void)showSaveOptionsForSavableViewModel:(id)arg1 cell:(id)arg2 ;
-(void)handleLongPress:(id)arg1 forStackedViewModel:(id)arg2 ;
-(void)didLongPressOnCell:(id)arg1 indexPath:(id)arg2 selectedIndex:(unsigned long long)arg3 viewModel:(id)arg4 gestureRecognizer:(id)arg5 ;
-(void)didTapWhitespaceForStackedCell:(id)arg1 indexPath:(id)arg2 viewModel:(id)arg3 ;
-(void)detectTouchViewDidDetectTouch:(id)arg1 ;
-(void)presenceBarInitialized:(id)arg1 ;
-(id)getInputView;
-(void)outgoindCardWillBeShown;
-(void)outgoingCardDidHide;
-(void)videoPreviewWillGoFullscreen;
-(id)myUsername;
-(BOOL)isTextLengthBlockingPreview;
-(void)_switchChatTo:(id)arg1 ;
-(void)dealloc;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillBeginDragging:(id)arg1 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2 ;
-(UIPanGestureRecognizer *)panGestureRecognizer;
-(unsigned long long)supportedInterfaceOrientations;
-(void)loadView;
-(void)viewDidAppear:(BOOL)arg1 ;
-(void)setTableView:(UITableView *)arg1 ;
-(UITableView *)tableView;
-(void)viewDidLoad;
-(UILongPressGestureRecognizer *)longPressGestureRecognizer;
-(void)setLongPressGestureRecognizer:(UILongPressGestureRecognizer *)arg1 ;
-(id)userSession;
-(id)conversationId;
-(void)productViewControllerDidFinish:(id)arg1 ;
-(SCChat *)chat;
-(BOOL)isGroupConversation;
-(void)setChat:(SCChat *)arg1 ;
-(void)setPanGestureRecognizer:(UIPanGestureRecognizer *)arg1 ;
-(SCChatTableViewDelegate *)tableDelegate;
-(void)setTableDelegate:(SCChatTableViewDelegate *)arg1 ;
@end

