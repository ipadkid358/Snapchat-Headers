/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:20 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCOperaLayerViewController.h>
#import <UIKit/UIGestureRecognizerDelegate.h>
#import <Snapchat/SCOperaVideoControlsViewDelegate.h>
#import <Snapchat/SCOperaVideoControlsViewDataSource.h>
#import <Snapchat/SCTimeProfilable.h>
#import <Snapchat/SCAudioStitchControlsViewDelegate.h>
#import <Snapchat/SCAudioStitchPlaybackHandlerDelegate.h>
#import <Snapchat/SCOperaLayerViewControllerMediaContainer.h>

@class SCOperaVideoLayerView, SCFrameableContainerView, FBKVOController, NSNotificationCenter, SCStopwatch, NSTimer, UIGestureRecognizer, UIVisualEffectView, NSError, SCOperaVideoStallTracker, CADisplayLink, AVPlayerItemTrack, AVAsset, SCAudioStitchPlaybackHandler, CALayer, SCAVPlayerVolumeController, NSString;

@interface SCOperaVideoLayerViewController : SCOperaLayerViewController <UIGestureRecognizerDelegate, SCOperaVideoControlsViewDelegate, SCOperaVideoControlsViewDataSource, SCTimeProfilable, SCAudioStitchControlsViewDelegate, SCAudioStitchPlaybackHandlerDelegate, SCOperaLayerViewControllerMediaContainer> {

	SCOperaVideoLayerView* _layerView;
	SCFrameableContainerView* _containerView;
	FBKVOController* _kvoController;
	NSNotificationCenter* _notificationCenter;
	BOOL _fullyViewed;
	BOOL _isLooping;
	BOOL _hasSentMediaStartsToPlayEvent;
	BOOL _hasFullyAppearedOnScreen;
	double _durationSec;
	SCStopwatch* _mediaDisplayStopWatch;
	id _videoTimeObserver;
	BOOL _isSeeking;
	NSTimer* _controlsFadeTimer;
	long long _virtualOrientation;
	double _delayedTargetVolume;
	double _lastSetVolume;
	UIGestureRecognizer* _tapToToggleVideoControlRecognizer;
	UIGestureRecognizer* _tapToToggleVideoProgressRecognizer;
	BOOL _pausedForAttachment;
	UIVisualEffectView* _blurView;
	long long _lastPlaybackFailureType;
	NSError* _lastPlaybackError;
	BOOL _didRecoverFromPlayerItemError;
	BOOL _didRecoverFromMediaServiceError;
	BOOL _videoIsInErrorState;
	BOOL _videoWasPreparedWhenFullyAppeared;
	BOOL _didRetryOnFrozenVideo;
	BOOL _shouldStartPlaybackOnceReadyToPlay;
	BOOL _videoShouldBePlaying;
	BOOL _shouldShowLoadingIndicator;
	BOOL _shouldHandleDidReachEndOnResume;
	SCOperaVideoStallTracker* _stallTracker;
	CADisplayLink* _videoFrameRateTrackingDisplayLink;
	double _frameRateStartTrackingTime;
	long long _frameRateTrackedTimes;
	double _totalFrameRate;
	double _nominalFrameRate;
	double _timeToPrepareSec;
	double _startPreparingTimeSec;
	AVPlayerItemTrack* _frameRateVideoTrack;
	AVAsset* _videoAsset;
	SCAudioStitchPlaybackHandler* _audioStitchPlaybackHandler;
	BOOL _disableSwipeUp;
	NSTimer* _progressViewAutoCollapseTimer;
	CALayer* _subtitleLayer;
	BOOL _ignoreUpdateToSubtitleVideoSize;
	SCAVPlayerVolumeController* _volumeController;

}

@property (nonatomic,retain) SCAVPlayerVolumeController * volumeController;              //@synthesize volumeController=_volumeController - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)layerViewControllerWithConfiguration:(id)arg1 kvoController:(id)arg2 mediaDisplayStopwatch:(id)arg3 eventAnnouncer:(id)arg4 sharedResourceManager:(id)arg5 notificationCenter:(id)arg6 ;
+(int)context;
-(void)viewDidFullyAppear;
-(void)viewDidFullyDisappear;
-(void)fadeVolumeIn:(double)arg1 ;
-(void)fadeVolumeOut:(double)arg1 ;
-(void)audioStitchControlsViewDidFinishDisplayingOnboarding:(id)arg1 ;
-(void)audioStitchControlsViewViewportButtonDidTap:(id)arg1 ;
-(void)audioStitchPlaybackHandler:(id)arg1 canChangeViewportDidChange:(BOOL)arg2 ;
-(void)audioStitchPlaybackHandler:(id)arg1 viewportDidChange:(id)arg2 ;
-(void)setProgress:(double)arg1 forIndex:(unsigned long long)arg2 ;
-(void)videoControlsView:(id)arg1 didToggleVolume:(BOOL)arg2 ;
-(void)videoControlsView:(id)arg1 didToggleCaption:(BOOL)arg2 ;
-(void)videoControlsView:(id)arg1 didToggleRotateLeft:(BOOL)arg2 ;
-(void)videoControlsView:(id)arg1 didTogglePlay:(BOOL)arg2 ;
-(void)videoControlsViewDidBeginSeeking:(id)arg1 ;
-(void)videoControlsView:(id)arg1 didEndSeekingWithPlayButtonToggled:(BOOL)arg2 ;
-(void)videoControlsViewDidPressExit:(id)arg1 ;
-(void)videoControlsView:(id)arg1 didSeekToTime:(double)arg2 ;
-(void)videoControlsViewDidPressShowActionMenuButton:(id)arg1 ;
-(void)viewWillFullyAppear;
-(void)viewWillFullyAppearAtTime:(SCD_Struct_LS191)arg1 ;
-(void)cancelViewWillFullyAppearAtTime;
-(void)neighborViewDidFullyAppearWithCurrentViewRelativePosition:(unsigned long long)arg1 ;
-(BOOL)mediaIsBeingPreparedForDisplay;
-(long long)pageabilityForRelativePosition:(unsigned long long)arg1 ;
-(void)setPausedForAttachment:(BOOL)arg1 ;
-(CGRect)mediaViewFrame;
-(double)mediaHeightToWidthAspectRatio;
-(void)updateViewWithPreviousLayer:(id)arg1 currentLayer:(id)arg2 ;
-(void)didReceiveUpdateProperties:(id)arg1 ;
-(id)currentViewParameters;
-(id)initWithConfiguration:(id)arg1 eventAnnouncer:(id)arg2 sharedResourceManager:(id)arg3 ;
-(id)shareableMedia;
-(void)updateViewWithHorizontalPageOffset:(double)arg1 isCurrentPage:(BOOL)arg2 ;
-(void)_sendMediaStartsToDisplayIfNecessary;
-(void)_showLoadingIndicatorIfNecessary;
-(id)initWithConfiguration:(id)arg1 kvoController:(id)arg2 mediaDisplayStopwatch:(id)arg3 eventAnnouncer:(id)arg4 sharedResourceManager:(id)arg5 notificationCenter:(id)arg6 ;
-(void)_removeTimeObserver;
-(void)_loadPlayerViewIfNecessary;
-(void)_didStartToPlay;
-(void)_restartPlayer;
-(void)_updatePlayerStatusBasedOnPlayerItemStatus:(id)arg1 ;
-(void)_playerDidFailToPlay;
-(void)_startPlayingFromMediaStartTimeForItem:(id)arg1 ;
-(void)_tearDownPlayerView;
-(void)_startPlayingItem:(id)arg1 ;
-(void)seekToMediaStartTimeWithCompletion:(/*^block*/id)arg1 ;
-(void)_setupControlsIfNecessary;
-(BOOL)_shouldShowVideoControls;
-(void)_attachTimeObserver;
-(void)_stopTrackingVideoFrameRate;
-(void)_startTrackingVideoFrameRate;
-(void)_setUpCloseToAutoAdvanceNotificationIfNecessary;
-(void)_clearPlaybackErrorTrackingParams;
-(void)_updateResumeTime;
-(BOOL)_shouldLoopWhenReachEnd;
-(BOOL)_shouldAutoAdvanceWhenReachEnd;
-(void)_setupControlsFadeTimer;
-(void)_fadeOutControlsWithCompletion:(/*^block*/id)arg1 ;
-(void)_fadeOutControls;
-(void)_toggleVideoControlsView;
-(void)_fadeInControls;
-(void)_setTargetOrientation:(long long)arg1 andRotateView:(BOOL)arg2 ;
-(void)seekToTime:(double)arg1 toleranceBefore:(SCD_Struct_LS191)arg2 toleranceAfter:(SCD_Struct_LS191)arg3 completion:(/*^block*/id)arg4 ;
-(void)_updatePlaybackErrorTrackingParams;
-(void)_sendMediaFailsToDisplayEvent;
-(void)_frameRateTrackingDisplayLinkDidFire;
-(void)_playerDidResumeFromStall:(id)arg1 ;
-(void)_resumeForBufferStatusChangeIfNecessary;
-(void)_toggleSubtitlesIfNecessary;
-(void)_showLoadingIndicatorIfNecessaryWithDelay;
-(void)playerItemDidReachEnd;
-(void)_observePlayerViewForAutoResumeOnStallIfNecessary:(id)arg1 ;
-(void)_resetVideoAsset;
-(void)_setupVideoProgressTapGestureIfNecessary;
-(void)_hideArrowAndText:(BOOL)arg1 ;
-(void)_rotateVideoWithTransform:(CGAffineTransform)arg1 animated:(BOOL)arg2 ;
-(void)_toggleVideoProgressView;
-(void)_updateOverlappedLayersYOffset:(double)arg1 ;
-(void)_updateSubtitlesStyle;
-(void)_subtitleLayerVideoSizeChanged;
-(void)_updateSubtitleLayerScreenSize;
-(void)_enableLoadingIndicator:(BOOL)arg1 ;
-(void)_observePlayerViewForStreamingIfNecessary:(id)arg1 ;
-(void)_playerDidStall:(id)arg1 ;
-(CGSize)_contentSize;
-(void)dealloc;
-(SCD_Struct_LS191)duration;
-(BOOL)gestureRecognizerShouldBegin:(id)arg1 ;
-(BOOL)gestureRecognizer:(id)arg1 shouldBeRequiredToFailByGestureRecognizer:(id)arg2 ;
-(void)loadView;
-(id)_debugInfo;
-(void)viewDidLayoutSubviews;
-(void)setVolume:(double)arg1 ;
-(void)teardown;
-(void)resume;
-(SCD_Struct_LS191)currentTime;
-(void)handleTap:(id)arg1 ;
-(void)pause;
-(void)_updateLoadingIndicator;
-(void)_stopPlayback;
-(id)_videoAsset;
-(SCAVPlayerVolumeController *)volumeController;
-(void)seekToTime:(double)arg1 ;
-(void)setVolumeController:(SCAVPlayerVolumeController *)arg1 ;
-(BOOL)isOverlay;
@end

