/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:49 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCFideliusDataProvider.h>
#import <Snapchat/SCUserSessionScoped.h>
#import <Snapchat/SCTimeProfilable.h>
#import <Snapchat/SCFideliusProtocol.h>

@protocol SCPerforming;
@class SCEllipticCurveCrypto, SCFideliusUserIdentity, SCUserSession, SCFideliusLogger, NSString, SCFideliusDeviceGraphManager, SCFideliusUserDatabaseManager, User, NSMutableSet, SCFideliusServiceProvider;

@interface SCFideliusManager : NSObject <SCFideliusDataProvider, SCUserSessionScoped, SCTimeProfilable, SCFideliusProtocol> {

	id<SCPerforming> _performer;
	SCEllipticCurveCrypto* _beta;
	SCFideliusUserIdentity* _currentIdentity;
	SCUserSession* _userSession;
	unsigned long long _status;
	BOOL _newClientIdentity;
	SCFideliusLogger* _logger;
	BOOL _isStudySet;
	BOOL _isCleartextEnabled;
	BOOL _waitingForDbTransition;
	BOOL _fetchConversationQueued;
	NSString* _fetchConversationSource;
	long long _mismatchCount;
	SCFideliusDeviceGraphManager* _deviceGraphManager;
	SCFideliusUserDatabaseManager* _userDatabaseManager;
	long long initializeDbCount;
	User* _user;
	NSMutableSet* _suppressedSnaps;
	SCFideliusServiceProvider* _services;

}

@property (nonatomic,retain) SCFideliusServiceProvider * services;              //@synthesize services=_services - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)initSourceNames;
+(id)statusNames;
+(id)nameForStatus:(unsigned long long)arg1 ;
+(BOOL)isLoadingFinished:(unsigned long long)arg1 ;
+(int)context;
+(id)nameForType:(unsigned long long)arg1 ;
-(id)initWithUserSession:(id)arg1 ;
-(void)receiveLogoutNotification;
-(BOOL)shouldSuppressNotification:(id)arg1 ;
-(unsigned long long)loadingStatusEnum;
-(BOOL)isBetaReady:(id)arg1 ;
-(void)verifyOutBetaReturnedFromServer:(id)arg1 statusBeforeFetch:(unsigned long long)arg2 ;
-(BOOL)isCleartextEnabled;
-(id)userDbManager;
-(id)myBeta;
-(void)setSuppressedSnap:(id)arg1 ;
-(BOOL)isNewIdentity;
-(id)_myBeta;
-(void)loadFromDataAvailable;
-(void)loginWithIwek:(id)arg1 hashedBeta:(id)arg2 tempIdentity:(id)arg3 ;
-(id)initWithUserSession:(id)arg1 useFakePerformer:(BOOL)arg2 deviceGraphManager:(id)arg3 logger:(id)arg4 ;
-(void)onFideliusWarmStart;
-(void)_processServerInitIwek:(id)arg1 hashedOutBeta:(id)arg2 friends:(id)arg3 tempIdentity:(id)arg4 source:(unsigned long long)arg5 ;
-(void)_loadExistingIdentity:(id)arg1 hashedBeta:(id)arg2 source:(unsigned long long)arg3 ;
-(void)_clearUserInfo;
-(void)_useNewIdentity:(id)arg1 friends:(id)arg2 source:(unsigned long long)arg3 ;
-(void)_onClientInitFailure;
-(void)_loadFromDisk:(unsigned long long)arg1 ;
-(void)_loadFromArchive;
-(void)_generateAndUpload:(unsigned long long)arg1 ;
-(void)_loadFromDiskStage2:(unsigned long long)arg1 ;
-(BOOL)_stopDbLoadFromDisk;
-(void)_uploadFideliusInfo:(id)arg1 successBlock:(/*^block*/id)arg2 failureBlock:(/*^block*/id)arg3 ;
-(void)_resetCurrentDeviceUser;
-(void)_fetchUpdates:(id)arg1 ;
-(void)_fetchConversation;
-(void)_postTempReadyNotification;
-(void)_transitionFromTempReadyToFullReady:(id)arg1 initSource:(unsigned long long)arg2 ;
-(void)_loadLocalIdentityWithIwek:(id)arg1 hashedBeta:(id)arg2 source:(unsigned long long)arg3 callback:(/*^block*/id)arg4 ;
-(void)_clientInit:(id)arg1 source:(unsigned long long)arg2 ;
-(void)_postReadyNotification;
-(BOOL)_isReady:(id)arg1 ;
-(void)_logNotReady:(id)arg1 action:(id)arg2 ;
-(BOOL)_isBetaReady:(id)arg1 ;
-(void)_reuseAndUpload:(unsigned long long)arg1 ;
-(void)fetchUpdates:(id)arg1 ;
-(void)_processUpdatesResponse:(id)arg1 ;
-(void)_fetchUpdates:(id)arg1 successBlock:(/*^block*/id)arg2 failureBlock:(/*^block*/id)arg3 ;
-(BOOL)_preventTempIdentityTransition;
-(void)_reInitialize;
-(void)_setupStudy;
-(BOOL)_isCleartextEnabled;
-(void)reInitialize;
-(void)tweakReInitIdentity;
-(void)coldStartLoad;
-(BOOL)startedLoading;
-(void)logNotReady:(id)arg1 action:(id)arg2 ;
-(void)setFetchConversationSource:(id)arg1 ;
-(void)invalidate;
-(id)userSession;
-(id)loadingStatus;
-(BOOL)isReady:(id)arg1 ;
-(SCFideliusServiceProvider *)services;
-(void)setServices:(SCFideliusServiceProvider *)arg1 ;
-(id)user;
@end

