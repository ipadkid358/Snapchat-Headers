/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:09 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, NSDictionary, NSRegularExpression, NSMutableDictionary;

@interface NBPhoneNumberUtil : NSObject {

	NSString* _VALID_PUNCTUATION;
	NSString* _VALID_DIGITS_STRING;
	NSString* _PLUS_CHARS_;
	NSString* _REGION_CODE_FOR_NON_GEO_ENTITY;
	NSDictionary* _DIGIT_MAPPINGS;
	NSDictionary* _coreMetaData;
	NSRegularExpression* _PLUS_CHARS_PATTERN;
	NSRegularExpression* _CAPTURING_DIGIT_PATTERN;
	NSRegularExpression* _VALID_ALPHA_PHONE_PATTERN_;
	NSString* _LEADING_PLUS_CHARS_PATTERN_;
	NSString* _EXTN_PATTERN_;
	NSString* _SEPARATOR_PATTERN_;
	NSString* _VALID_PHONE_NUMBER_PATTERN_;
	NSString* _VALID_START_CHAR_PATTERN_;
	NSString* _UNWANTED_END_CHAR_PATTERN_;
	NSString* _SECOND_NUMBER_START_PATTERN_;
	NSDictionary* _ALPHA_MAPPINGS_;
	NSDictionary* _ALL_NORMALIZATION_MAPPINGS_;
	NSDictionary* _DIALLABLE_CHAR_MAPPINGS_;
	NSDictionary* _ALL_PLUS_NUMBER_GROUPING_SYMBOLS_;
	NSMutableDictionary* _mapCCode2CN;
	NSMutableDictionary* _mapCN2CCode;
	NSMutableDictionary* _i18nNumberFormat;
	NSMutableDictionary* _i18nPhoneNumberDesc;
	NSMutableDictionary* _i18nPhoneMetadata;

}

@property (nonatomic,readonly) NSDictionary * coreMetaData;                                                             //@synthesize coreMetaData=_coreMetaData - In the implementation block
@property (nonatomic,readonly) NSRegularExpression * PLUS_CHARS_PATTERN;                                                //@synthesize PLUS_CHARS_PATTERN=_PLUS_CHARS_PATTERN - In the implementation block
@property (nonatomic,readonly) NSRegularExpression * CAPTURING_DIGIT_PATTERN;                                           //@synthesize CAPTURING_DIGIT_PATTERN=_CAPTURING_DIGIT_PATTERN - In the implementation block
@property (nonatomic,readonly) NSRegularExpression * VALID_ALPHA_PHONE_PATTERN_;                                        //@synthesize VALID_ALPHA_PHONE_PATTERN_=_VALID_ALPHA_PHONE_PATTERN_ - In the implementation block
@property (nonatomic,readonly) NSString * LEADING_PLUS_CHARS_PATTERN_;                                                  //@synthesize LEADING_PLUS_CHARS_PATTERN_=_LEADING_PLUS_CHARS_PATTERN_ - In the implementation block
@property (nonatomic,readonly) NSString * EXTN_PATTERN_;                                                                //@synthesize EXTN_PATTERN_=_EXTN_PATTERN_ - In the implementation block
@property (setter=EPARATOR_PATTERN_,nonatomic,readonly) NSString * SEPARATOR_PATTERN_;                                  //@synthesize SEPARATOR_PATTERN_=_SEPARATOR_PATTERN_ - In the implementation block
@property (nonatomic,readonly) NSString * VALID_PHONE_NUMBER_PATTERN_;                                                  //@synthesize VALID_PHONE_NUMBER_PATTERN_=_VALID_PHONE_NUMBER_PATTERN_ - In the implementation block
@property (nonatomic,readonly) NSString * VALID_START_CHAR_PATTERN_;                                                    //@synthesize VALID_START_CHAR_PATTERN_=_VALID_START_CHAR_PATTERN_ - In the implementation block
@property (nonatomic,readonly) NSString * UNWANTED_END_CHAR_PATTERN_;                                                   //@synthesize UNWANTED_END_CHAR_PATTERN_=_UNWANTED_END_CHAR_PATTERN_ - In the implementation block
@property (setter=ECOND_NUMBER_START_PATTERN_,nonatomic,readonly) NSString * SECOND_NUMBER_START_PATTERN_;              //@synthesize SECOND_NUMBER_START_PATTERN_=_SECOND_NUMBER_START_PATTERN_ - In the implementation block
@property (nonatomic,readonly) NSDictionary * ALPHA_MAPPINGS_;                                                          //@synthesize ALPHA_MAPPINGS_=_ALPHA_MAPPINGS_ - In the implementation block
@property (nonatomic,readonly) NSDictionary * ALL_NORMALIZATION_MAPPINGS_;                                              //@synthesize ALL_NORMALIZATION_MAPPINGS_=_ALL_NORMALIZATION_MAPPINGS_ - In the implementation block
@property (nonatomic,readonly) NSDictionary * DIALLABLE_CHAR_MAPPINGS_;                                                 //@synthesize DIALLABLE_CHAR_MAPPINGS_=_DIALLABLE_CHAR_MAPPINGS_ - In the implementation block
@property (nonatomic,readonly) NSDictionary * ALL_PLUS_NUMBER_GROUPING_SYMBOLS_;                                        //@synthesize ALL_PLUS_NUMBER_GROUPING_SYMBOLS_=_ALL_PLUS_NUMBER_GROUPING_SYMBOLS_ - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * mapCCode2CN;                                                         //@synthesize mapCCode2CN=_mapCCode2CN - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * mapCN2CCode;                                                         //@synthesize mapCN2CCode=_mapCN2CCode - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * i18nNumberFormat;                                                    //@synthesize i18nNumberFormat=_i18nNumberFormat - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * i18nPhoneNumberDesc;                                                 //@synthesize i18nPhoneNumberDesc=_i18nPhoneNumberDesc - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * i18nPhoneMetadata;                                                   //@synthesize i18nPhoneMetadata=_i18nPhoneMetadata - In the implementation block
@property (nonatomic,readonly) NSString * VALID_PUNCTUATION;                                                            //@synthesize VALID_PUNCTUATION=_VALID_PUNCTUATION - In the implementation block
@property (nonatomic,readonly) NSString * VALID_DIGITS_STRING;                                                          //@synthesize VALID_DIGITS_STRING=_VALID_DIGITS_STRING - In the implementation block
@property (nonatomic,readonly) NSString * PLUS_CHARS_;                                                                  //@synthesize PLUS_CHARS_=_PLUS_CHARS_ - In the implementation block
@property (nonatomic,readonly) NSString * REGION_CODE_FOR_NON_GEO_ENTITY;                                               //@synthesize REGION_CODE_FOR_NON_GEO_ENTITY=_REGION_CODE_FOR_NON_GEO_ENTITY - In the implementation block
@property (nonatomic,readonly) NSDictionary * DIGIT_MAPPINGS;                                                           //@synthesize DIGIT_MAPPINGS=_DIGIT_MAPPINGS - In the implementation block
+(id)stringByTrimming:(id)arg1 ;
+(id)sharedInstance;
-(id)replaceStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3 ;
-(id)matchesByRegex:(id)arg1 regex:(id)arg2 ;
-(NSMutableDictionary *)mapCN2CCode;
-(NSMutableDictionary *)mapCCode2CN;
-(void)initRegularExpressionSet;
-(void)initNormalizationMappings;
-(void)initCC2CN;
-(void)clearCC2CN;
-(void)clearCN2CC;
-(void)setMapCCode2CN:(NSMutableDictionary *)arg1 ;
-(void)setMapCN2CCode:(NSMutableDictionary *)arg1 ;
-(NSString *)VALID_START_CHAR_PATTERN_;
-(long long)stringPositionByRegex:(id)arg1 regex:(id)arg2 ;
-(NSString *)UNWANTED_END_CHAR_PATTERN_;
-(NSString *)SECOND_NUMBER_START_PATTERN_;
-(NSString *)VALID_PHONE_NUMBER_PATTERN_;
-(BOOL)matchesEntirely:(id)arg1 string:(id)arg2 ;
-(NSDictionary *)ALL_NORMALIZATION_MAPPINGS_;
-(id)normalizeHelper:(id)arg1 normalizationReplacements:(id)arg2 removeNonMatches:(BOOL)arg3 ;
-(id)normalizeDigitsOnly:(id)arg1 ;
-(id)normalizePhoneNumber:(id)arg1 ;
-(NSDictionary *)DIGIT_MAPPINGS;
-(id)stringByReplacingOccurrencesString:(id)arg1 withMap:(id)arg2 removeNonMatches:(BOOL)arg3 ;
-(long long)getLengthOfGeographicalAreaCode:(id)arg1 ;
-(id)getRegionCodeForNumber:(id)arg1 ;
-(id)getMetadataForRegion:(id)arg1 ;
-(BOOL)isNumberGeographical:(id)arg1 ;
-(long long)getLengthOfNationalDestinationCode:(id)arg1 ;
-(BOOL)hasValue:(id)arg1 ;
-(id)format:(id)arg1 numberFormat:(int)arg2 ;
-(id)componentsSeparatedByRegex:(id)arg1 regex:(id)arg2 ;
-(id)regionCodeFromCountryCode:(unsigned)arg1 ;
-(int)getNumberType:(id)arg1 ;
-(BOOL)isNaN:(id)arg1 ;
-(id)getNationalSignificantNumber:(id)arg1 ;
-(id)prefixNumberWithCountryCallingCode:(unsigned)arg1 phoneNumberFormat:(int)arg2 formattedNationalNumber:(id)arg3 formattedExtension:(id)arg4 ;
-(BOOL)hasValidCountryCallingCode:(unsigned)arg1 ;
-(id)getMetadataForRegionOrCallingCode:(unsigned)arg1 regionCode:(id)arg2 ;
-(id)maybeGetFormattedExtension:(id)arg1 metadata:(id)arg2 numberFormat:(int)arg3 ;
-(id)formatNsn:(id)arg1 metadata:(id)arg2 phoneNumberFormat:(int)arg3 carrierCode:(id)arg4 ;
-(id)formatByPattern:(id)arg1 numberFormat:(int)arg2 userDefinedFormats:(id)arg3 ;
-(id)chooseFormattingPatternForNumber:(id)arg1 nationalNumber:(id)arg2 ;
-(id)formatNsnUsingPattern:(id)arg1 formattingPattern:(id)arg2 numberFormat:(int)arg3 carrierCode:(id)arg4 ;
-(id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2 ;
-(id)getRegionCodeForCountryCode:(unsigned)arg1 ;
-(id)getMetadataForNonGeographicalRegion:(unsigned)arg1 ;
-(id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(BOOL)arg3 ;
-(id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2 ;
-(BOOL)canBeInternationallyDialled:(id)arg1 ;
-(NSDictionary *)DIALLABLE_CHAR_MAPPINGS_;
-(id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2 ;
-(BOOL)isValidRegionCode:(id)arg1 ;
-(BOOL)isNANPACountry:(id)arg1 ;
-(unsigned)getCountryCodeForValidRegion:(id)arg1 ;
-(id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2 ;
-(BOOL)hasUnexpectedItalianLeadingZero:(id)arg1 ;
-(BOOL)hasFormattingPatternForNumber:(id)arg1 ;
-(id)getNddPrefixForRegion:(id)arg1 stripNonDigits:(BOOL)arg2 ;
-(BOOL)rawInputContainsNationalPrefix:(id)arg1 nationalPrefix:(id)arg2 regionCode:(id)arg3 ;
-(BOOL)isStartingStringByRegex:(id)arg1 regex:(id)arg2 ;
-(id)parse:(id)arg1 defaultRegion:(id)arg2 ;
-(BOOL)isValidNumber:(id)arg1 ;
-(BOOL)isLeadingZeroPossible:(unsigned)arg1 ;
-(id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2 ;
-(long long)indexOfStringByString:(id)arg1 target:(id)arg2 ;
-(id)replaceFirstStringByRegex:(id)arg1 regex:(id)arg2 withTemplate:(id)arg3 ;
-(NSString *)SEPARATOR_PATTERN_;
-(id)getExampleNumber:(id)arg1 ;
-(id)getExampleNumberForType:(id)arg1 type:(int)arg2 ;
-(id)getNumberDescByType:(id)arg1 type:(int)arg2 ;
-(id)getExampleNumberForNonGeoEntity:(unsigned)arg1 ;
-(int)getNumberTypeHelper:(id)arg1 metadata:(id)arg2 ;
-(BOOL)isNumberMatchingDesc:(id)arg1 numberDesc:(id)arg2 ;
-(NSDictionary *)coreMetaData;
-(BOOL)isValidNumberForRegion:(id)arg1 regionCode:(id)arg2 ;
-(id)getRegionCodeForNumberFromRegionList:(id)arg1 regionCodes:(id)arg2 ;
-(unsigned)getCountryCodeForValidRegion:(id)arg1 error:(id*)arg2 ;
-(BOOL)isViablePhoneNumber:(id)arg1 ;
-(id)maybeStripExtension:(id*)arg1 ;
-(BOOL)isPossibleNumber:(id)arg1 ;
-(int)isPossibleNumberWithReason:(id)arg1 ;
-(int)testNumberLengthAgainstPattern:(id)arg1 number:(id)arg2 ;
-(BOOL)isPossibleNumberString:(id)arg1 regionDialingFrom:(id)arg2 ;
-(BOOL)truncateTooLongNumber:(id)arg1 ;
-(unsigned)maybeExtractCountryCode:(id)arg1 metadata:(id)arg2 nationalNumber:(id*)arg3 keepRawInput:(BOOL)arg4 phoneNumber:(id*)arg5 ;
-(int)maybeStripInternationalPrefixAndNormalize:(id*)arg1 possibleIddPrefix:(id)arg2 ;
-(unsigned)extractCountryCode:(id)arg1 nationalNumber:(id*)arg2 ;
-(BOOL)maybeStripNationalPrefixAndCarrierCode:(id*)arg1 metadata:(id)arg2 carrierCode:(id*)arg3 ;
-(NSRegularExpression *)CAPTURING_DIGIT_PATTERN;
-(NSString *)LEADING_PLUS_CHARS_PATTERN_;
-(void)normalizeSB:(id*)arg1 ;
-(BOOL)parsePrefixAsIdd:(id)arg1 sourceString:(id*)arg2 ;
-(NSString *)EXTN_PATTERN_;
-(id)matcheFirstByRegex:(id)arg1 regex:(id)arg2 ;
-(id)parseHelper:(id)arg1 defaultRegion:(id)arg2 keepRawInput:(BOOL)arg3 checkRegion:(BOOL)arg4 ;
-(id)parseAndKeepRawInput:(id)arg1 defaultRegion:(id)arg2 ;
-(void)buildNationalNumberForParsing:(id)arg1 nationalNumber:(id*)arg2 ;
-(BOOL)checkRegionForParsing:(id)arg1 defaultRegion:(id)arg2 ;
-(id)extractPossibleNumber:(id)arg1 ;
-(int)isNumberMatch:(id)arg1 second:(id)arg2 ;
-(BOOL)isNationalNumberSuffixOfTheOther:(id)arg1 second:(id)arg2 ;
-(id)matchedStringByRegex:(id)arg1 regex:(id)arg2 ;
-(id)countryCodeFromRegionCode:(id)arg1 ;
-(id)convertAlphaCharactersInNumber:(id)arg1 ;
-(long long)getLengthOfGeographicalAreaCode:(id)arg1 error:(id*)arg2 ;
-(long long)getLengthOfNationalDestinationCode:(id)arg1 error:(id*)arg2 ;
-(BOOL)formattingRuleHasFirstGroupOnly:(id)arg1 ;
-(id)format:(id)arg1 numberFormat:(int)arg2 error:(id*)arg3 ;
-(id)formatByPattern:(id)arg1 numberFormat:(int)arg2 userDefinedFormats:(id)arg3 error:(id*)arg4 ;
-(id)formatNationalNumberWithCarrierCode:(id)arg1 carrierCode:(id)arg2 error:(id*)arg3 ;
-(id)formatNationalNumberWithPreferredCarrierCode:(id)arg1 fallbackCarrierCode:(id)arg2 error:(id*)arg3 ;
-(id)formatNumberForMobileDialing:(id)arg1 regionCallingFrom:(id)arg2 withFormatting:(BOOL)arg3 error:(id*)arg4 ;
-(id)formatOutOfCountryCallingNumber:(id)arg1 regionCallingFrom:(id)arg2 error:(id*)arg3 ;
-(id)formatInOriginalFormat:(id)arg1 regionCallingFrom:(id)arg2 error:(id*)arg3 ;
-(id)formatOutOfCountryKeepingAlphaChars:(id)arg1 regionCallingFrom:(id)arg2 error:(id*)arg3 ;
-(id)getExampleNumber:(id)arg1 error:(id*)arg2 ;
-(id)getExampleNumberForType:(id)arg1 type:(int)arg2 error:(id*)arg3 ;
-(id)getExampleNumberForNonGeoEntity:(unsigned)arg1 error:(id*)arg2 ;
-(id)getRegionCodesForCountryCode:(unsigned)arg1 ;
-(unsigned)getCountryCodeForRegion:(id)arg1 ;
-(BOOL)isAlphaNumber:(id)arg1 ;
-(BOOL)isPossibleNumber:(id)arg1 error:(id*)arg2 ;
-(int)isPossibleNumberWithReason:(id)arg1 error:(id*)arg2 ;
-(BOOL)isPossibleNumberString:(id)arg1 regionDialingFrom:(id)arg2 error:(id*)arg3 ;
-(BOOL)truncateTooLongNumber:(id)arg1 error:(id*)arg2 ;
-(unsigned)maybeExtractCountryCode:(id)arg1 metadata:(id)arg2 nationalNumber:(id*)arg3 keepRawInput:(BOOL)arg4 phoneNumber:(id*)arg5 error:(id*)arg6 ;
-(int)maybeStripInternationalPrefixAndNormalize:(id*)arg1 possibleIddPrefix:(id)arg2 error:(id*)arg3 ;
-(BOOL)maybeStripNationalPrefixAndCarrierCode:(id*)arg1 metadata:(id)arg2 carrierCode:(id*)arg3 error:(id*)arg4 ;
-(id)parse:(id)arg1 defaultRegion:(id)arg2 error:(id*)arg3 ;
-(id)parseWithPhoneCarrierRegion:(id)arg1 error:(id*)arg2 ;
-(id)parseAndKeepRawInput:(id)arg1 defaultRegion:(id)arg2 error:(id*)arg3 ;
-(id)parseHelper:(id)arg1 defaultRegion:(id)arg2 keepRawInput:(BOOL)arg3 checkRegion:(BOOL)arg4 error:(id*)arg5 ;
-(int)isNumberMatch:(id)arg1 second:(id)arg2 error:(id*)arg3 ;
-(BOOL)canBeInternationallyDialled:(id)arg1 error:(id*)arg2 ;
-(NSString *)VALID_PUNCTUATION;
-(NSString *)VALID_DIGITS_STRING;
-(NSString *)PLUS_CHARS_;
-(NSString *)REGION_CODE_FOR_NON_GEO_ENTITY;
-(NSRegularExpression *)PLUS_CHARS_PATTERN;
-(NSRegularExpression *)VALID_ALPHA_PHONE_PATTERN_;
-(NSDictionary *)ALPHA_MAPPINGS_;
-(NSDictionary *)ALL_PLUS_NUMBER_GROUPING_SYMBOLS_;
-(NSMutableDictionary *)i18nNumberFormat;
-(void)setI18nNumberFormat:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)i18nPhoneNumberDesc;
-(void)setI18nPhoneNumberDesc:(NSMutableDictionary *)arg1 ;
-(NSMutableDictionary *)i18nPhoneMetadata;
-(void)setI18nPhoneMetadata:(NSMutableDictionary *)arg1 ;
-(id)init;
-(void)dealloc;
-(id)loadMetadata:(id)arg1 ;
@end

