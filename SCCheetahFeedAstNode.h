/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:08 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <libobjc.A.dylib/NSCopying.h>
#import <libobjc.A.dylib/NSCoding.h>

@class SCCheetahFeedAstConstantNode, NSString, SCCheetahFeedAstSignalNode, SCCheetahFeedAstBinaryOperatorNode, SCCheetahFeedAstComparatorNode, SCCheetahFeedAstBoundedSigmoidNode, SCCheetahFeedAstPieceWiseLinearNode, SCCheetahFeedAstAggregatorNode, SCCheetahFeedAstSquashNode;

@interface SCCheetahFeedAstNode : NSObject <NSCopying, NSCoding> {

	unsigned long long _subtype;
	SCCheetahFeedAstConstantNode* _constantNode_constantNode;
	NSString* _constantNode_name;
	SCCheetahFeedAstSignalNode* _signalNode_signalNode;
	NSString* _signalNode_name;
	SCCheetahFeedAstBinaryOperatorNode* _binaryOperatorNode_binaryOperatorNode;
	NSString* _binaryOperatorNode_name;
	SCCheetahFeedAstComparatorNode* _comparatorNode_comparatorNode;
	NSString* _comparatorNode_name;
	SCCheetahFeedAstBoundedSigmoidNode* _boundedSigmoidNode_boundedSigmoidNode;
	NSString* _boundedSigmoidNode_name;
	SCCheetahFeedAstPieceWiseLinearNode* _pieceWiseLinearNode_pieceWiseLinearNode;
	NSString* _pieceWiseLinearNode_name;
	SCCheetahFeedAstAggregatorNode* _aggregatorNode_aggregatorNode;
	NSString* _aggregatorNode_name;
	SCCheetahFeedAstSquashNode* _squashNode_squashNode;
	NSString* _squashNode_name;

}
+(id)aggregatorNodeWithAggregatorNode:(id)arg1 name:(id)arg2 ;
+(id)binaryOperatorNodeWithBinaryOperatorNode:(id)arg1 name:(id)arg2 ;
+(id)boundedSigmoidNodeWithBoundedSigmoidNode:(id)arg1 name:(id)arg2 ;
+(id)comparatorNodeWithComparatorNode:(id)arg1 name:(id)arg2 ;
+(id)constantNodeWithConstantNode:(id)arg1 name:(id)arg2 ;
+(id)pieceWiseLinearNodeWithPieceWiseLinearNode:(id)arg1 name:(id)arg2 ;
+(id)signalNodeWithSignalNode:(id)arg1 name:(id)arg2 ;
+(id)squashNodeWithSquashNode:(id)arg1 name:(id)arg2 ;
-(id)internalInit;
-(void)matchConstantNode:(/*^block*/id)arg1 signalNode:(/*^block*/id)arg2 binaryOperatorNode:(/*^block*/id)arg3 comparatorNode:(/*^block*/id)arg4 boundedSigmoidNode:(/*^block*/id)arg5 pieceWiseLinearNode:(/*^block*/id)arg6 aggregatorNode:(/*^block*/id)arg7 squashNode:(/*^block*/id)arg8 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id)description;
-(id)copyWithZone:(NSZone*)arg1 ;
@end

