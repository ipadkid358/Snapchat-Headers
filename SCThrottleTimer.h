/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:47 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSRunLoop, NSString, NSTimer, SCThrottleTarget;

@interface SCThrottleTimer : NSObject {

	BOOL _isScheduled;
	BOOL _isThrottled;
	BOOL _repeats;
	double _timeInterval;
	id _userInfo;
	NSRunLoop* _runLoop;
	NSString* _runLoopMode;
	double _tolerance;
	NSTimer* _internalTimer;
	SCThrottleTarget* _target;

}

@property (assign,nonatomic) BOOL isScheduled;                       //@synthesize isScheduled=_isScheduled - In the implementation block
@property (assign,nonatomic) BOOL isThrottled;                       //@synthesize isThrottled=_isThrottled - In the implementation block
@property (assign,nonatomic) BOOL repeats;                           //@synthesize repeats=_repeats - In the implementation block
@property (assign,nonatomic) double timeInterval;                    //@synthesize timeInterval=_timeInterval - In the implementation block
@property (nonatomic,retain) id userInfo;                            //@synthesize userInfo=_userInfo - In the implementation block
@property (nonatomic,retain) NSTimer * internalTimer;                //@synthesize internalTimer=_internalTimer - In the implementation block
@property (nonatomic,retain) SCThrottleTarget * target;              //@synthesize target=_target - In the implementation block
@property (nonatomic,retain) NSRunLoop * runLoop;                    //@synthesize runLoop=_runLoop - In the implementation block
@property (nonatomic,retain) NSString * runLoopMode;                 //@synthesize runLoopMode=_runLoopMode - In the implementation block
@property (assign,nonatomic) double tolerance;                       //@synthesize tolerance=_tolerance - In the implementation block
-(id)initWithInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 repeats:(BOOL)arg5 ;
-(void)_removeTimer;
-(void)setInternalTimer:(NSTimer *)arg1 ;
-(NSTimer *)internalTimer;
-(void)setIsThrottled:(BOOL)arg1 ;
-(BOOL)isThrottled;
-(void)setIsScheduled:(BOOL)arg1 ;
-(void)_createTimer;
-(id)initWithInterval:(double)arg1 target:(id)arg2 selector:(SEL)arg3 userInfo:(id)arg4 ;
-(void)_onThrottleTargetDidTrigger:(id)arg1 ;
-(NSRunLoop *)runLoop;
-(double)tolerance;
-(void)setTolerance:(double)arg1 ;
-(BOOL)isScheduled;
-(void)cancel;
-(void)dealloc;
-(id)userInfo;
-(void)setTarget:(SCThrottleTarget *)arg1 ;
-(SCThrottleTarget *)target;
-(void)setUserInfo:(id)arg1 ;
-(double)timeInterval;
-(void)setTimeInterval:(double)arg1 ;
-(BOOL)repeats;
-(void)schedule;
-(void)fire;
-(void)reschedule;
-(void)setRunLoop:(NSRunLoop *)arg1 ;
-(NSString *)runLoopMode;
-(void)setRunLoopMode:(NSString *)arg1 ;
-(void)setRepeats:(BOOL)arg1 ;
@end

