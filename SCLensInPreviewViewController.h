/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:38 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <UIKit/UIViewController.h>
#import <UIKit/UICollectionViewDelegate.h>
#import <UIKit/UICollectionViewDataSource.h>
#import <Snapchat/SCLensDataProviderListener.h>
#import <Snapchat/SCImageProcessLensCommandDelegate.h>

@protocol SCLensPreviewViewControllerDelegate;
@class UIView, SCLensLogger, SCLensDownloadableContent, SCLensInPreviewCollectionView, SCLoadingIndicatorView, SCGrowingButton, SCLensDataProvider, NSString, NSArray, SCLens, SCLensUIUpdateListenerAnnouncer, NSMutableDictionary, SCPromise, SCLensInPreviewView;

@interface SCLensInPreviewViewController : UIViewController <UICollectionViewDelegate, UICollectionViewDataSource, SCLensDataProviderListener, SCImageProcessLensCommandDelegate> {

	UIView* _sourceView;
	UIView* _parentView;
	SCLensLogger* _lensLogger;
	SCLensDownloadableContent* _lensDownloadableContent;
	SCLensInPreviewCollectionView* _collectionView;
	SCLoadingIndicatorView* _loadingIndicatorView;
	SCGrowingButton* _revertButton;
	SCLensDataProvider* _lensDataProvider;
	NSString* _lensDataProviderToken;
	NSArray* _lenses;
	SCLens* _activeLens;
	SCLens* _originalSelectedLens;
	long long _faceCount;
	SCLensUIUpdateListenerAnnouncer* _uiUpdateAnnouncer;
	NSMutableDictionary* _visibleLenses;
	BOOL _lensDidApply;
	SCPromise* _firstLensActivationPromise;
	id<SCLensPreviewViewControllerDelegate> _delegate;

}

@property (nonatomic,retain) SCLensInPreviewView * view; 
@property (assign,nonatomic,__weak) id<SCLensPreviewViewControllerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)lensDataProvider:(id)arg1 didUpdateAllLenses:(id)arg2 requiresAnimation:(BOOL)arg3 ;
-(void)lensDataProvider:(id)arg1 didUpdateLens:(id)arg2 ;
-(id)_cellAtIndex:(long long)arg1 ;
-(void)imageProcessLensCommand:(id)arg1 didFinishProcessingFrameWithLens:(id)arg2 ;
-(void)imageProcessLensCommand:(id)arg1 didRecognizeExpression:(id)arg2 ;
-(void)imageProcessLensCommand:(id)arg1 didRecognizeFaces:(unsigned long long)arg2 ;
-(void)_activateLens:(id)arg1 ;
-(void)_setUpCollectionView;
-(void)_updateContentBasedOnFaceCount;
-(void)_revertTapped:(id)arg1 ;
-(void)_deselectLensAtIndexPath:(id)arg1 ;
-(BOOL)_isAnyLensSelected;
-(void)_showRevertButton;
-(void)_hideRevertButton;
-(void)activateLens:(id)arg1 ;
-(void)updateSelectedAppearanceOfAllVisibleCells;
-(id)_lensForLensId:(id)arg1 ;
-(void)_hideLoadingIndicatorView;
-(void)_showLoadingIndicatorView;
-(BOOL)_hasUnavailableLens;
-(unsigned long long)_indexOfUnavailableLens;
-(id)_configurationForLens:(id)arg1 ;
-(void)_resetLensAppliedImage;
-(id)lensWithIndex:(long long)arg1 ;
-(BOOL)_isSelectedLens:(id)arg1 ;
-(id)_safeLensWithId:(id)arg1 ;
-(id)initWithDataProvider:(id)arg1 dataFetcher:(id)arg2 downloadableContent:(id)arg3 logger:(id)arg4 faceCount:(long long)arg5 activeLens:(id)arg6 originalSelectedLens:(id)arg7 ;
-(void)presentFromViewController:(id)arg1 parentView:(id)arg2 sourceView:(id)arg3 bottomView:(id)arg4 ;
-(void)activateFirstLens;
-(void)_reloadCellWithLens:(id)arg1 ;
-(BOOL)_isReady;
-(void)setDelegate:(id<SCLensPreviewViewControllerDelegate>)arg1 ;
-(id<SCLensPreviewViewControllerDelegate>)delegate;
-(long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(long long)numberOfSectionsInCollectionView:(id)arg1 ;
-(BOOL)collectionView:(id)arg1 shouldSelectItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)applicationDidBecomeActive:(id)arg1 ;
-(void)loadView;
-(void)viewDidLoad;
-(void)dismiss;
-(void)_reloadData;
-(void)setFaceCount:(long long)arg1 ;
-(void)_configureCell:(id)arg1 forIndexPath:(id)arg2 ;
@end

