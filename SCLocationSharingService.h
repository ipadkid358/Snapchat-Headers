/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:40 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCMapGhostModeTimerControllerDelegate.h>
#import <Snapchat/SCLocationObserver.h>
#import <Snapchat/SCTimeProfilable.h>

@class SCUserSession, SCQueuePerformer, SCMapLocationSharingCacheObject, SCLocationSharingServiceLogger, SCMapBeaconController, SCEncryptedCache, NSMutableArray, NSTimer, SCMapSerialAsyncBlockPerformer, SCGCDTimer, SCMapGhostModeTimerController, NSString;

@interface SCLocationSharingService : NSObject <SCMapGhostModeTimerControllerDelegate, SCLocationObserver, SCTimeProfilable> {

	SCUserSession* _userSession;
	SCQueuePerformer* _performer;
	SCMapLocationSharingCacheObject* _mainThreadCacheObject;
	SCLocationSharingServiceLogger* _logger;
	SCMapBeaconController* _beaconController;
	BOOL _shouldDisplayGhostModeTimerDoneNotification;
	double _revalidateCachedPrefsRetryInterval;
	SCEncryptedCache* _cache;
	NSMutableArray* _pendingLocationUpdates;
	NSTimer* _pollingTimer;
	double _nextLocationUpdateAllowed;
	BOOL _isUploadingLocation;
	double _uploadLocationInterval;
	BOOL _gpsDidResetSinceLastLocationUpdate;
	SCMapSerialAsyncBlockPerformer* _asyncBlockPerformer;
	BOOL _isPeriodicallyUpdatingLocation;
	SCGCDTimer* _forcedLocationUpdateTimer;
	BOOL _wantsActiveLocationMonitoring;
	BOOL _serverNeedsBackgroundLocationUpdate;
	SCMapGhostModeTimerController* _ghostModeTimerController;
	SCMapLocationSharingCacheObject* _performerThreadCacheObject;

}

@property (assign) BOOL wantsActiveLocationMonitoring;                                                  //@synthesize wantsActiveLocationMonitoring=_wantsActiveLocationMonitoring - In the implementation block
@property (assign) BOOL serverNeedsBackgroundLocationUpdate;                                            //@synthesize serverNeedsBackgroundLocationUpdate=_serverNeedsBackgroundLocationUpdate - In the implementation block
@property (retain) SCMapLocationSharingCacheObject * mainThreadCacheObject; 
@property (nonatomic,retain) SCMapLocationSharingCacheObject * performerThreadCacheObject;              //@synthesize performerThreadCacheObject=_performerThreadCacheObject - In the implementation block
@property (nonatomic,readonly) SCMapGhostModeTimerController * ghostModeTimerController;                //@synthesize ghostModeTimerController=_ghostModeTimerController - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(int)_spectaclesDeviceColorToEnum:(id)arg1 ;
+(int)context;
-(int)sharingAudience;
-(id)initWithUserSession:(id)arg1 ;
-(BOOL)locationObserverWantsActiveLocationMonitoring;
-(id)locationObserverDispatchQueue;
-(double)locationObserverDesiredAccuracy;
-(id)locationObserverIdentifier;
-(BOOL)locationObserverWantsBackgroundLocationMonitoring;
-(void)onLocationUpdate:(id)arg1 ;
-(void)onLocationError:(id)arg1 ;
-(void)onLocationAuthorizationStatusChange:(int)arg1 ;
-(id)_preferences;
-(void)_stopPollingTimer;
-(BOOL)onboarded;
-(void)serverRequestedBackgroundLocationUpdate;
-(BOOL)ghostMode;
-(BOOL)hasFetchedLocationPreferences;
-(void)ensureHasPreferencesWithSource:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(id)customSharingModeFriendIds;
-(void)setGhostMode:(id)arg1 sharingAudience:(id)arg2 customSharingModeFriendIds:(id)arg3 source:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)setDidOnboard;
-(void)revalidateCachedPreferencesWithSource:(long long)arg1 ;
-(void)_startPollingTimerIfForegrounded;
-(SCMapLocationSharingCacheObject *)performerThreadCacheObject;
-(SCMapLocationSharingCacheObject *)mainThreadCacheObject;
-(void)setMainThreadCacheObject:(SCMapLocationSharingCacheObject *)arg1 ;
-(void)setPerformerThreadCacheObject:(SCMapLocationSharingCacheObject *)arg1 ;
-(void)_savePerformerThreadCacheObjectToDisk;
-(void)_exitGhostModeBecauseTimerExpired;
-(void)_fetchLocationPreferencesWithCompletion:(/*^block*/id)arg1 ;
-(void)_updateLocationPreferences:(id)arg1 ghostModeDuration:(double)arg2 updateType:(long long)arg3 source:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)_ensurePreferencesLoadedFromCacheWithCompletion:(/*^block*/id)arg1 ;
-(void)_updateWithLatestServerPreferencesWithFetchType:(unsigned long long)arg1 source:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)_syncPreferencesToServerIfNecessaryWithSource:(long long)arg1 updateType:(long long)arg2 ;
-(void)_postPreferencesSyncedNotification;
-(BOOL)_isExplicitlyInGhostModeOrSimilar;
-(void)_flushPendingLocationUpdatesASAP;
-(void)_setLocationPreferencesWithRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)backgroundSharingEnabled;
-(void)setGhostMode:(BOOL)arg1 duration:(double)arg2 updateType:(long long)arg3 source:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)updateLocationPreferences:(id)arg1 source:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)_startPollingTimer;
-(void)_checkIfShouldStartForcedUpdates;
-(void)_forcedLocationTick;
-(void)_displayGhostModeTimerDoneNotificationIfPossible;
-(void)setWantsActiveLocationMonitoring:(BOOL)arg1 ;
-(void)_delayForcedUpdateTimer;
-(void)_postPreferencesUpdatedNotification;
-(void)setGhostMode:(BOOL)arg1 updateType:(long long)arg2 source:(long long)arg3 completion:(/*^block*/id)arg4 ;
-(void)setServerNeedsBackgroundLocationUpdate:(BOOL)arg1 ;
-(BOOL)_isReadyToUploadLocations;
-(void)_flushPendingLocationUpdates;
-(void)_uploadLocationUpdates:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)wantsActiveLocationMonitoring;
-(BOOL)serverNeedsBackgroundLocationUpdate;
-(void)_updateCurrentLocation:(id)arg1 locationUpdateQueuedHandler:(/*^block*/id)arg2 ;
-(void)_setBirthday:(id)arg1 ;
-(void)_setSpectaclesUsageInfo:(id)arg1 ;
-(BOOL)_hasPreferences;
-(void)_generateCurrentDeviceData:(/*^block*/id)arg1 ;
-(void)ghostModeTimerController:(id)arg1 wantsToRefreshLocationSharingPreferencesWithCompletion:(/*^block*/id)arg2 ;
-(void)ghostModeTimerControllerWantsToExitGhostMode:(id)arg1 ;
-(BOOL)needsPreferencesSync;
-(id)_fetchedLocationPreferences;
-(void)setBackgroundSharingEnabled:(BOOL)arg1 source:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)uploadLocations;
-(void)_clearOnboardedState;
-(SCMapGhostModeTimerController *)ghostModeTimerController;
-(void)dealloc;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(void)applicationWillEnterForeground:(id)arg1 ;
-(void)_timerDidFire:(id)arg1 ;
@end

