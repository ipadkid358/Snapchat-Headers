/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:12 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SCChatMessageSender, SCChatConversationManager, SCUserHelperProtocol, SCChatLogger, SCChatGalleryLogger, SCChatRequestManager;
#import <Snapchat/Snapchat-Structs.h>
@class SCChatV3ConversationStore, SCChatV3MessageStateHandler, NSMutableDictionary, SOJUMessageGenerator;

@interface SCChatV3MessageSender : NSObject {

	SCChatV3ConversationStore* _conversationStore;
	SCChatV3MessageStateHandler* _messageStateHandler;
	id<SCChatMessageSender> _messageSender;
	id<SCChatConversationManager> _conversationManager;
	id<SCUserHelperProtocol> _userHelper;
	NSMutableDictionary* _conversationIdToSendQueue;
	id<SCChatLogger> _logger;
	id<SCChatGalleryLogger> _galleryLogger;
	SOJUMessageGenerator* _sojuMessageGenerator;
	id<SCChatRequestManager> _chatRequestManager;
	BOOL _messageQueueEnabled;

}

@property (assign,nonatomic) BOOL messageQueueEnabled;              //@synthesize messageQueueEnabled=_messageQueueEnabled - In the implementation block
-(id)sendSnapStateMessageForMessage:(id)arg1 conversation:(id)arg2 participant:(id)arg3 ;
-(id)conversation:(id)arg1 sendMessage:(id)arg2 addOnSuccess:(BOOL)arg3 withCompletionHandler:(/*^block*/id)arg4 ;
-(void)conversationId:(id)arg1 message:(id)arg2 sentWithResult:(long long)arg3 response:(id)arg4 ;
-(BOOL)messageQueueEnabled;
-(void)conversationId:(id)arg1 sendWireMessage:(id)arg2 useQueue:(BOOL)arg3 withHandler:(/*^block*/id)arg4 ;
-(void)_updateAuthIfNessaryForConversation:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)_getQueueForConversationId:(id)arg1 ;
-(void)sendConversationMessage:(id)arg1 withCompletionHandler:(/*^block*/id)arg2 ;
-(id)_makeRequestToUpdateSnapStateWithSnapStateMessage:(id)arg1 conversation:(id)arg2 clientSnapId:(id)arg3 encryptedId:(id)arg4 stackId:(id)arg5 ;
-(void)_appendFailedSilentWireMessage:(id)arg1 ;
-(void)makeRequestToUpdateSnapState;
-(void)_makeRequestWithSnapUpdatesByConvId:(id)arg1 ;
-(void)_handleSucceededSnapUpdatesByConvId:(id)arg1 ;
-(id)initWithMessageSender:(id)arg1 conversationStore:(id)arg2 messageStateHandler:(id)arg3 chatRequestManager:(id)arg4 experimentManager:(id)arg5 conversationManager:(id)arg6 userHelper:(id)arg7 logger:(id)arg8 galleryLogger:(id)arg9 ;
-(id)conversation:(id)arg1 sendMessage:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)sendReleaseForConversation:(id)arg1 fromParticipant:(id)arg2 forChatMessages:(id)arg3 withReleaseTimestamp:(id)arg4 ;
-(id)sendV2ReleaseForConversation:(id)arg1 fromParticipant:(id)arg2 releaseType:(long long)arg3 upToKnownChatSequenceNumbers:(NSDictionary*)arg4 ;
-(void)sendPresenceForConversation:(id)arg1 fromParticipant:(id)arg2 toParticipants:(id)arg3 legacyPresences:(id)arg4 extendedPresences:(id)arg5 presencesMetadata:(id)arg6 ;
-(void)sendVolatileMessageForConversation:(id)arg1 fromParticipant:(id)arg2 talkCorePayload:(id)arg3 ;
-(void)sendConnectedCallMessageForConversation:(id)arg1 fromParticipant:(id)arg2 audio:(BOOL)arg3 ;
-(id)sendMessageStateMessageForForMessage:(id)arg1 conversation:(id)arg2 messageState:(long long)arg3 participant:(id)arg4 ;
-(id)sendMessagePreservationMessageForMessage:(id)arg1 conversation:(id)arg2 participant:(id)arg3 preserved:(BOOL)arg4 ;
-(id)sendMessageEraseMessageForMessage:(id)arg1 conversation:(id)arg2 participant:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)retryFailedSilentMesssagesInConversation:(id)arg1 ;
-(id)sendCashRain:(id)arg1 conversation:(id)arg2 ;
-(void)uploadReplyMedia:(id)arg1 conversationId:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 uploadId:(id)arg5 ;
-(void)setMessageQueueEnabled:(BOOL)arg1 ;
@end

