/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:32 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCContextCardsTask.h>

@class NSString, SCWeakTimer, NSDate, SCContextCardsRequest, SCCache, SCUserSession, NSArray, NSNumber;

@interface SCContextCardsAPIRequestTask : SCContextCardsTask {

	NSString* _requestId;
	NSString* _sessionId;
	NSString* _appengineRequestId;
	BOOL _completed;
	/*^block*/id _onComplete;
	SCWeakTimer* _timeoutEnforcer;
	NSDate* _startTime;
	double _requestCreateTime;
	BOOL _canceled;
	SCContextCardsRequest* _request;
	SCCache* _preloadCache;
	SCUserSession* _userSession;
	SCContextCardsRequest* _existingRequest;
	NSString* _strategy;
	double _timeout;
	NSArray* _builtQueries;
	NSNumber* _serverLatencyMs;
	NSNumber* _queueLatencyMs;
	NSNumber* _transmitLatencyMs;
	NSNumber* _responseLatencyMs;
	NSNumber* _executionTimeMs;

}

@property (nonatomic,readonly) NSNumber * serverLatencyMs;                //@synthesize serverLatencyMs=_serverLatencyMs - In the implementation block
@property (nonatomic,readonly) NSNumber * queueLatencyMs;                 //@synthesize queueLatencyMs=_queueLatencyMs - In the implementation block
@property (nonatomic,readonly) NSNumber * transmitLatencyMs;              //@synthesize transmitLatencyMs=_transmitLatencyMs - In the implementation block
@property (nonatomic,readonly) NSNumber * responseLatencyMs;              //@synthesize responseLatencyMs=_responseLatencyMs - In the implementation block
@property (nonatomic,readonly) NSNumber * executionTimeMs;                //@synthesize executionTimeMs=_executionTimeMs - In the implementation block
+(id)buildRequestFromSessionParams:(id)arg1 userSession:(id)arg2 requestId:(id)arg3 sessionId:(id)arg4 ;
+(id)_appListGroupPreferences:(id)arg1 ;
-(NSNumber *)serverLatencyMs;
-(void)_executeRequest:(/*^block*/id)arg1 ;
-(void)_reportError:(/*^block*/id)arg1 error:(id)arg2 ;
-(id)initWithContextSessionParams:(id)arg1 userSession:(id)arg2 sessionId:(id)arg3 existingRequest:(id)arg4 strategy:(id)arg5 timeout:(double)arg6 ;
-(void)executeWithCompletion:(/*^block*/id)arg1 ;
-(NSNumber *)executionTimeMs;
-(NSNumber *)queueLatencyMs;
-(NSNumber *)transmitLatencyMs;
-(void)_fetchResponseFromCache:(/*^block*/id)arg1 ;
-(/*^block*/id)_getSuccessBlock;
-(void)_enforceTimeout;
-(void)_reportSuccess:(/*^block*/id)arg1 response:(id)arg2 ;
-(void)_recordLatencies:(id)arg1 response:(id)arg2 ;
-(id)_clientDebugTimingCard:(id)arg1 response:(id)arg2 protoDecodeTime:(double)arg3 requestTime:(double)arg4 ;
-(id)_clientDebugQueryCard:(id)arg1 ;
-(id)appengineRequestId;
-(void)cancel;
-(NSNumber *)responseLatencyMs;
@end

