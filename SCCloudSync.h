/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:15 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCService.h>
#import <Snapchat/SCUserSessionScoped.h>

@protocol SCGalleryProfile, SCCloudSyncDataVault, SCNetworker, SCCloudSyncLogger, SCCloudSyncFeatureSettingsDataProvider, SCCloudSyncSearchIndexer, SCCloudSyncGalleryDataSource, SCObserving;
@class SCCloudFS, SCExperimentManager, SCDataObjectContext, SCCloudSyncRetry, SCQueuePerformer, SCCloudSyncStatusListenerAnnouncer, NSError, SCSentinel, SCCloudSyncOperation, NSMutableDictionary, NSString;

@interface SCCloudSync : NSObject <SCService, SCUserSessionScoped> {

	id<SCGalleryProfile> _profile;
	mutex _dataVaultMutex;
	/*^block*/id _dataVaultBlock;
	id<SCCloudSyncDataVault> _dataVaultLoaded;
	mutex _cloudFSMutex;
	/*^block*/id _cloudFSBlock;
	SCCloudFS* _cloudFSLoaded;
	mutex _networkerMutex;
	/*^block*/id _networkerBlock;
	id<SCNetworker> _networkerLoaded;
	mutex _loggerMutex;
	/*^block*/id _loggerBlock;
	id<SCCloudSyncLogger> _loggerLoaded;
	mutex _experimentManagerMutex;
	/*^block*/id _experimentManagerBlock;
	SCExperimentManager* _experimentManagerLoaded;
	mutex _featureSettingsDataProviderMutex;
	/*^block*/id _featureSettingsDataProviderBlock;
	id<SCCloudSyncFeatureSettingsDataProvider> _featureSettingsDataProviderLoaded;
	mutex _searchIndexerMutex;
	/*^block*/id _searchIndexerBlock;
	id<SCCloudSyncSearchIndexer> _searchIndexerLoaded;
	mutex _galleryDataSourceMutex;
	/*^block*/id _galleryDataSourceBlock;
	id<SCCloudSyncGalleryDataSource> _galleryDataSourceLoaded;
	long long _clientCompatVersion;
	SCDataObjectContext* _dataObjectContext;
	SCCloudSyncRetry* _cloudSyncRetry;
	BOOL _mayUpload;
	BOOL _requiresUpgrade;
	SCQueuePerformer* _performer;
	SCCloudSyncStatusListenerAnnouncer* _announcer;
	NSError* _lastError;
	unsigned long long _clientRetryCount;
	id<SCObserving> _featureSettingsObserveContext;
	SCSentinel* _invalidateSentinel;
	SCCloudSyncOperation* _currentUploadOperation;
	NSMutableDictionary* _entriesDependency;
	BOOL _enableOutOfOrderDeletion;
	BOOL _isBackingUpNow;
	BOOL _syncedFirstPage;
	unsigned long long _status;

}

@property (assign) unsigned long long status;                       //@synthesize status=_status - In the implementation block
@property (assign) BOOL isBackingUpNow;                             //@synthesize isBackingUpNow=_isBackingUpNow - In the implementation block
@property (assign) BOOL syncedFirstPage;                            //@synthesize syncedFirstPage=_syncedFirstPage - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)defaultLongRunningNotifier;
+(id)defaultImmediateNotifier;
+(id)statusString:(unsigned long long)arg1 ;
-(id)dedicatedQueue;
-(void)runWithServiceTerm:(id)arg1 ;
-(id)_logger;
-(id)_experimentManager;
-(id)_networker;
-(id)_cloudFS;
-(id)_dataVault;
-(id)_detectAndResolveConflictsForOperation:(id)arg1 ;
-(void)_removeFailedEntry:(id)arg1 ;
-(id)_galleryDataSource;
-(void)_transitionToState:(unsigned long long)arg1 serviceTerm:(id)arg2 backOffTimeInMilliseconds:(double)arg3 ;
-(void)_scheduleBackgroundMediaUploadForOperation:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(BOOL)isBackingUpNow;
-(BOOL)syncedFirstPage;
-(BOOL)_shouldSyncOperationRunImmediately:(id)arg1 ;
-(void)_getFastlaneOperationSnapshot:(id*)arg1 operation:(id*)arg2 ;
-(id)_featureSettingsDataProvider;
-(id)_getAllSnapIdsForOperation:(id)arg1 ;
-(void)_resetSeqNumIfNecessary;
-(BOOL)_hasPendingOperations;
-(void)_resyncWithServiceTerm:(id)arg1 forceRebase:(BOOL)arg2 ;
-(void)setSyncedFirstPage:(BOOL)arg1 ;
-(void)_galleryResyncRequired;
-(void)_checkIfSyncRequiredBeforeTransition:(id)arg1 ;
-(void)_checkToUploadWithServiceTerm:(id)arg1 ;
-(void)_uploadWithServiceTerm:(id)arg1 ;
-(id)_uploadStateNotifier;
-(void)setIsBackingUpNow:(BOOL)arg1 ;
-(void)_updateDependentGraph:(long long)arg1 ;
-(void)_resyncAfterAbortingOperationSnapshot:(id)arg1 serviceTerm:(id)arg2 ;
-(void)_cleanUncommittedChanges;
-(void)_reExecuteOptimistically:(BOOL)arg1 ;
-(void)_checkEntryChanges:(id)arg1 ;
-(void)_checkBackgroundMediaUploadStatus;
-(void)_skipPendingOperations:(id)arg1 deleteEntryIds:(id)arg2 ;
-(void)_onOperationFailed:(id)arg1 snapshot:(id)arg2 serviceTerm:(id)arg3 ;
-(BOOL)_shouldInfiniteRetryGCSError:(id)arg1 ;
-(double)_clientRetryBackoffTime:(unsigned long long)arg1 ;
-(void)_resetBackgroundMediaUploadedStateForSyncOperation:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_handleServletPartialError:(id)arg1 requestId:(id)arg2 syncOperation:(id)arg3 syncOperationSnapshot:(id)arg4 retryCount:(long long)arg5 serviceTerm:(id)arg6 ;
-(void)_processResyncResponse:(id)arg1 forceRebase:(BOOL)arg2 serviceTerm:(id)arg3 ;
-(id)_searchIndexer;
-(id)initWithProfile:(id)arg1 dataVault:(/*^block*/id)arg2 cloudFS:(/*^block*/id)arg3 networker:(/*^block*/id)arg4 clientCompatVersion:(long long)arg5 dataObjectContext:(id)arg6 featureSettingsDataProvider:(/*^block*/id)arg7 searchIndexer:(/*^block*/id)arg8 galleryDataSource:(/*^block*/id)arg9 experimentManager:(/*^block*/id)arg10 logger:(/*^block*/id)arg11 ;
-(void)appendOperationAndExecuteOptimistically:(id)arg1 fromFailedEntry:(id)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)fetchLastErrorWithCompletionHandler:(/*^block*/id)arg1 ;
-(BOOL)isInitialPageSyncCompleted;
-(BOOL)isFullySynced;
-(void)setIsBackingUpNowAsynchonously:(BOOL)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_resyncWithTerm:(id)arg1 syncOperation:(id)arg2 retryOperation:(id)arg3 syncOperationSnapshot:(id)arg4 ;
-(void)dealloc;
-(void)invalidate;
-(unsigned long long)status;
-(void)setStatus:(unsigned long long)arg1 ;
-(void)_applicationWillEnterForeground;
-(BOOL)_isInvalidated;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
@end

