/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:16 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <libobjc.A.dylib/NSStreamDelegate.h>

@protocol OS_dispatch_queue, OS_dispatch_data;
@class NSObject, NSMutableArray, NSInputStream, NSOutputStream, NSMutableData, NSString, SRSecurityPolicy, NSURLRequest, NSMutableSet, NSArray, SRIOConsumerPool, SRProxyConnect, NSURL, SRDelegateController, NSOperationQueue;

@interface SRWebSocket : NSObject <NSStreamDelegate> {

	opaque_pthread_mutex_t* _kvoLock;
	int _propertyLock;
	NSObject*<OS_dispatch_queue> _workQueue;
	NSMutableArray* _consumers;
	NSInputStream* _inputStream;
	NSOutputStream* _outputStream;
	NSObject*<OS_dispatch_data> _readBuffer;
	unsigned long long _readBufferOffset;
	NSObject*<OS_dispatch_data> _outputBuffer;
	unsigned long long _outputBufferOffset;
	unsigned char _currentFrameOpcode;
	unsigned long long _currentFrameCount;
	unsigned long long _readOpCount;
	unsigned _currentStringScanPosition;
	NSMutableData* _currentFrameData;
	NSString* _closeReason;
	NSString* _secKey;
	SRSecurityPolicy* _securityPolicy;
	BOOL _requestRequiresSSL;
	BOOL _streamSecurityValidated;
	unsigned char _currentReadMaskKey[4];
	unsigned long long _currentReadMaskOffset;
	BOOL _closeWhenFinishedWriting;
	BOOL _failed;
	NSURLRequest* _urlRequest;
	BOOL _sentClose;
	BOOL _didFail;
	BOOL _cleanupScheduled;
	int _closeCode;
	BOOL _isPumping;
	NSMutableSet* _scheduledRunloops;
	SRWebSocket* _selfRetain;
	NSArray* _requestedProtocols;
	SRIOConsumerPool* _consumerPool;
	SRProxyConnect* _proxyConnect;
	BOOL _allowsUntrustedSSLCertificates;
	long long _readyState;
	NSURL* _url;
	CFHTTPMessageRef _receivedHTTPHeaders;
	NSArray* _requestCookies;
	NSString* _protocol;
	SRDelegateController* _delegateController;

}

@property (assign) long long readyState;                                                      //@synthesize readyState=_readyState - In the implementation block
@property (assign,nonatomic) BOOL allowsUntrustedSSLCertificates;                             //@synthesize allowsUntrustedSSLCertificates=_allowsUntrustedSSLCertificates - In the implementation block
@property (nonatomic,readonly) SRDelegateController * delegateController;                     //@synthesize delegateController=_delegateController - In the implementation block
@property (assign,nonatomic,__weak) id<SRWebSocketDelegate> delegate; 
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> delegateDispatchQueue; 
@property (nonatomic,retain) NSOperationQueue * delegateOperationQueue; 
@property (nonatomic,readonly) NSURL * url;                                                   //@synthesize url=_url - In the implementation block
@property (nonatomic,readonly) CFHTTPMessageRef receivedHTTPHeaders;                          //@synthesize receivedHTTPHeaders=_receivedHTTPHeaders - In the implementation block
@property (nonatomic,copy) NSArray * requestCookies;                                          //@synthesize requestCookies=_requestCookies - In the implementation block
@property (nonatomic,copy,readonly) NSString * protocol;                                      //@synthesize protocol=_protocol - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(BOOL)automaticallyNotifiesObserversOfReadyState;
-(id)initWithURLRequest:(id)arg1 protocols:(id)arg2 securityPolicy:(id)arg3 ;
-(id)initWithURLRequest:(id)arg1 protocols:(id)arg2 allowsUntrustedSSLCertificates:(BOOL)arg3 ;
-(id)initWithURLRequest:(id)arg1 protocols:(id)arg2 ;
-(id)initWithURL:(id)arg1 protocols:(id)arg2 ;
-(id)initWithURL:(id)arg1 protocols:(id)arg2 allowsUntrustedSSLCertificates:(BOOL)arg3 ;
-(void)_connectionDoneWithError:(id)arg1 readStream:(id)arg2 writeStream:(id)arg3 ;
-(void)_updateSecureStreamOptions;
-(BOOL)_checkHandshake:(CFHTTPMessageRef)arg1 ;
-(void)_readFrameNew;
-(SRDelegateController *)delegateController;
-(void)_HTTPHeadersDidFinish;
-(void)_readHTTPHeader;
-(void)_readUntilHeaderCompleteWithCallback:(/*^block*/id)arg1 ;
-(NSArray *)requestCookies;
-(void)closeWithCode:(long long)arg1 reason:(id)arg2 ;
-(void)_sendFrameWithOpcode:(long long)arg1 data:(id)arg2 ;
-(void)_scheduleCleanup;
-(void)assertOnWorkQueue;
-(void)_pumpWriting;
-(BOOL)sendString:(id)arg1 error:(id*)arg2 ;
-(BOOL)sendDataNoCopy:(id)arg1 error:(id*)arg2 ;
-(void)_closeWithProtocolError:(id)arg1 ;
-(void)_readFrameContinue;
-(void)handleCloseWithData:(id)arg1 ;
-(void)_handlePingWithData:(id)arg1 ;
-(void)handlePong:(id)arg1 ;
-(void)_handleFrameWithData:(id)arg1 opCode:(long long)arg2 ;
-(void)_addConsumerWithDataLength:(unsigned long long)arg1 callback:(/*^block*/id)arg2 readToCurrentFrame:(BOOL)arg3 unmaskBytes:(BOOL)arg4 ;
-(void)_handleFrameHeader:(SCD_Struct_SR438)arg1 curData:(id)arg2 ;
-(void)_addConsumerWithScanner:(/*^block*/id)arg1 callback:(/*^block*/id)arg2 dataLength:(unsigned long long)arg3 ;
-(void)_pumpScanner;
-(void)_cleanupSelfReference:(id)arg1 ;
-(void)_readUntilBytes:(const void*)arg1 length:(unsigned long long)arg2 callback:(/*^block*/id)arg3 ;
-(void)_addConsumerWithScanner:(/*^block*/id)arg1 callback:(/*^block*/id)arg2 ;
-(BOOL)_innerPumpScanner;
-(void)safeHandleEvent:(unsigned long long)arg1 stream:(id)arg2 ;
-(id)initWithURLRequest:(id)arg1 securityPolicy:(id)arg2 ;
-(id)initWithURL:(id)arg1 securityPolicy:(id)arg2 ;
-(BOOL)sendPing:(id)arg1 error:(id*)arg2 ;
-(void)setDelegateDispatchQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)delegateDispatchQueue;
-(void)setDelegateOperationQueue:(NSOperationQueue *)arg1 ;
-(CFHTTPMessageRef)receivedHTTPHeaders;
-(void)setRequestCookies:(NSArray *)arg1 ;
-(BOOL)allowsUntrustedSSLCertificates;
-(void)setAllowsUntrustedSSLCertificates:(BOOL)arg1 ;
-(void)scheduleInRunLoop:(id)arg1 forMode:(id)arg2 ;
-(void)stream:(id)arg1 handleEvent:(unsigned long long)arg2 ;
-(void)unscheduleFromRunLoop:(id)arg1 forMode:(id)arg2 ;
-(void)setDelegate:(id<SRWebSocketDelegate>)arg1 ;
-(void)dealloc;
-(id<SRWebSocketDelegate>)delegate;
-(NSURL *)url;
-(id)initWithURL:(id)arg1 ;
-(void)close;
-(NSString *)protocol;
-(void)open;
-(void)closeConnection;
-(void)_failWithError:(id)arg1 ;
-(BOOL)sendData:(id)arg1 error:(id*)arg2 ;
-(void)send:(id)arg1 ;
-(void)_writeData:(id)arg1 ;
-(id)initWithURLRequest:(id)arg1 ;
-(long long)readyState;
-(void)setReadyState:(long long)arg1 ;
-(NSOperationQueue *)delegateOperationQueue;
-(void)didConnect;
@end

