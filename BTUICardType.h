/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:22 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@class NSString, NSArray, NSIndexSet;

@interface BTUICardType : NSObject {

	NSString* _brand;
	NSArray* _validNumberPrefixes;
	NSIndexSet* _validNumberLengths;
	unsigned long long _validCvvLength;
	NSArray* _formatSpaces;
	unsigned long long _maxNumberLength;

}

@property (nonatomic,copy,readonly) NSString * brand;                           //@synthesize brand=_brand - In the implementation block
@property (nonatomic,readonly) NSArray * validNumberPrefixes;                   //@synthesize validNumberPrefixes=_validNumberPrefixes - In the implementation block
@property (nonatomic,readonly) NSIndexSet * validNumberLengths;                 //@synthesize validNumberLengths=_validNumberLengths - In the implementation block
@property (nonatomic,readonly) unsigned long long validCvvLength;               //@synthesize validCvvLength=_validCvvLength - In the implementation block
@property (nonatomic,readonly) NSArray * formatSpaces;                          //@synthesize formatSpaces=_formatSpaces - In the implementation block
@property (nonatomic,readonly) unsigned long long maxNumberLength;              //@synthesize maxNumberLength=_maxNumberLength - In the implementation block
+(id)cardsByBrand;
+(id)allCards;
+(unsigned long long)maxNumberLength;
+(id)cardTypeForBrand:(id)arg1 ;
+(id)cardTypeForNumber:(id)arg1 ;
+(id)possibleCardTypesForNumber:(id)arg1 ;
-(id)formatNumber:(id)arg1 ;
-(NSString *)brand;
-(id)initWithBrand:(id)arg1 prefixes:(id)arg2 validNumberLengths:(id)arg3 validCvvLength:(unsigned long long)arg4 formatSpaces:(id)arg5 ;
-(NSArray *)validNumberPrefixes;
-(unsigned long long)validCvvLength;
-(unsigned long long)maxNumberLength;
-(id)initWithBrand:(id)arg1 prefixes:(id)arg2 ;
-(NSArray *)formatSpaces;
-(id)formatNumber:(id)arg1 kerning:(double)arg2 ;
-(NSIndexSet *)validNumberLengths;
-(BOOL)completeNumber:(id)arg1 ;
-(BOOL)validCvv:(id)arg1 ;
-(BOOL)validAndNecessarilyCompleteNumber:(id)arg1 ;
-(BOOL)validNumber:(id)arg1 ;
-(id)description;
@end

