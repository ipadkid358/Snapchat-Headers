/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:38 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCUserSessionScoped.h>
#import <Snapchat/SCLensDiscoveryDataProvider.h>

@protocol SCLensDiscoveryDataProviderDelegate, SCOnDemandLensAllTimeHitsDataProviderSearchDelegate;
@class NSMutableSet, NSArray, NSDate, NSMutableDictionary, SCFailedAttemptRecovery, SCUserSession, NSString;

@interface SCOnDemandLensAllTimeHitsDataProvider : NSObject <SCUserSessionScoped, SCLensDiscoveryDataProvider> {

	id<SCLensDiscoveryDataProviderDelegate> _delegate;
	NSMutableSet* _categoryIdsCurrentlyFetching;
	NSArray* _categories;
	NSDate* _categoriesFetchTimestamp;
	unsigned long long _categoriesFetchingState;
	NSMutableDictionary* _categoryIdToLensesMutable;
	NSMutableDictionary* _lensIdToThumbnailUrlMutable;
	SCFailedAttemptRecovery* _failedFetchAttemptRecovery;
	NSMutableSet* _searchRequestKeys;
	id<SCOnDemandLensAllTimeHitsDataProviderSearchDelegate> _searchDelegate;
	SCUserSession* _userSession;

}

@property (nonatomic,retain) SCUserSession * userSession;                                                                //@synthesize userSession=_userSession - In the implementation block
@property (assign,nonatomic,__weak) id<SCOnDemandLensAllTimeHitsDataProviderSearchDelegate> searchDelegate;              //@synthesize searchDelegate=_searchDelegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)removeSavedState;
+(id)archivePath;
-(void)_saveState;
-(id)initWithUserSession:(id)arg1 ;
-(void)_createAttemptRecovery;
-(void)_updateCategoriesIfNeededCheckForTimestamp:(BOOL)arg1 checkForError:(BOOL)arg2 ;
-(void)_checkForTimestamp;
-(void)_fetchCategories;
-(void)_resetData;
-(void)updateCategoriesIfNeeded;
-(unsigned long long)numberOfObjectsInCategoryAtIndex:(long long)arg1 ;
-(id)objectAtIndex:(long long)arg1 inCategoryWithId:(id)arg2 ;
-(void)loadNextPageForCategoryWithId:(id)arg1 ;
-(void)cancelSearchRequestForKey:(id)arg1 ;
-(void)_fetchLensesForCategoryWithId:(id)arg1 offset:(unsigned long long)arg2 ;
-(long long)_indexOfCategoryById:(id)arg1 ;
-(id)onDemandGeofilterNetworking;
-(id)_lensesFromTemplates:(id)arg1 lensIdToThumbnailUrlDict:(id*)arg2 ;
-(id)searchRequestKeys;
-(id)thumbnailPreviewUrlStringForLensId:(id)arg1 ;
-(id)searchForQuery:(id)arg1 offset:(unsigned long long)arg2 count:(unsigned long long)arg3 ;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)setDelegate:(id)arg1 ;
-(id)delegate;
-(void)invalidate;
-(id)categories;
-(void)commonInit;
-(void)setSearchDelegate:(id<SCOnDemandLensAllTimeHitsDataProviderSearchDelegate>)arg1 ;
-(id<SCOnDemandLensAllTimeHitsDataProviderSearchDelegate>)searchDelegate;
-(SCUserSession *)userSession;
-(void)setUserSession:(SCUserSession *)arg1 ;
@end

