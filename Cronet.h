/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:44 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


#import <Snapchat/Snapchat-Structs.h>
@interface Cronet : NSObject
+(id)getAcceptLanguagesFromPreferredLanguages:(id)arg1 ;
+(void)checkNotStarted;
+(id)getNetLogPathForFile:(id)arg1 ;
+(id)createUnsupportedConfigurationError:(id)arg1 ;
+(id)createIllegalArgumentErrorWithArgument:(id)arg1 reason:(id)arg2 ;
+(id)getAcceptLanguages;
+(void)configureCronetEnvironmentForTesting:(CronetEnvironment*)arg1 ;
+(void)unswizzleForTesting;
+(id)createCronetErrorWithCode:(int)arg1 userInfo:(id)arg2 ;
+(void)setAcceptLanguages:(id)arg1 ;
+(void)setHttp2Enabled:(BOOL)arg1 ;
+(void)setQuicEnabled:(BOOL)arg1 ;
+(void)setBrotliEnabled:(BOOL)arg1 ;
+(void)setMetricsEnabled:(BOOL)arg1 ;
+(BOOL)addQuicHint:(id)arg1 port:(int)arg2 altPort:(int)arg3 ;
+(void)setExperimentalOptions:(id)arg1 ;
+(void)setUserAgent:(id)arg1 partial:(BOOL)arg2 ;
+(void)setSslKeyLogFileName:(id)arg1 ;
+(void)setHttpCacheType:(long long)arg1 ;
+(void)setRequestFilterBlock:(/*^block*/id)arg1 ;
+(BOOL)addPublicKeyPinsForHost:(id)arg1 pinHashes:(id)arg2 includeSubdomains:(BOOL)arg3 expirationDate:(id)arg4 error:(id*)arg5 ;
+(void)setEnablePublicKeyPinningBypassForLocalTrustAnchors:(BOOL)arg1 ;
+(SingleThreadTaskRunner*)getFileThreadRunnerForTesting;
+(SingleThreadTaskRunner*)getNetworkThreadRunnerForTesting;
+(void)shutdownForTesting;
+(void)registerHttpProtocolHandler;
+(void)unregisterHttpProtocolHandler;
+(void)installIntoSessionConfiguration:(id)arg1 ;
+(BOOL)startNetLogToFile:(id)arg1 logBytes:(BOOL)arg2 ;
+(void)stopNetLog;
+(id)getUserAgent;
+(void)setNetworkThreadPriority:(double)arg1 ;
+(stream_engine*)getGlobalEngine;
+(id)getGlobalMetricsDeltas;
+(void)enableTestCertVerifierForTesting;
+(void)setMockCertVerifierForTesting:(unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier> >*)arg1 ;
+(void)setHostResolverRulesForTesting:(id)arg1 ;
+(void)preventStrippingCronetBidirectionalStream;
+(void)initialize;
+(void)start;
+(void)startInternal;
@end

