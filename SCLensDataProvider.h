/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:38 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCLensDataProviderBase.h>
#import <Snapchat/SCTimeProfilable.h>
#import <Snapchat/SCLensCameraScreenDataProviderProtocol.h>

@protocol SCLensDataProviderConfiguration;
@class NSArray, SCOnDemandLensOnCameraFilter, NSString;

@interface SCLensDataProvider : SCLensDataProviderBase <SCTimeProfilable, SCLensCameraScreenDataProviderProtocol> {

	unsigned long long _cameraPosition;
	BOOL _isFetchForFrontCameraTriggered;
	BOOL _isFetchForBackCameraTriggered;
	NSArray* _categoryIds;
	id<SCLensDataProviderConfiguration> _configuration;
	SCOnDemandLensOnCameraFilter* _onDemandLensOnCameraFilter;
	BOOL _showBirthdayReplyLens;
	NSArray* _onDemandGeoLenses;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (assign,nonatomic) BOOL showBirthdayReplyLens;                 //@synthesize showBirthdayReplyLens=_showBirthdayReplyLens - In the implementation block
@property (nonatomic,readonly) NSArray * onDemandGeoLenses;              //@synthesize onDemandGeoLenses=_onDemandGeoLenses - In the implementation block
+(int)context;
-(id)lenses;
-(id)initWithUserSession:(id)arg1 ;
-(id)applicableContext;
-(id)originalLens;
-(void)setApplicableContext:(id)arg1 ;
-(id)categoryIds;
-(void)setCategoryIds:(id)arg1 devicePosition:(unsigned long long)arg2 ;
-(id)initWithUserSession:(id)arg1 configuration:(id)arg2 ;
-(NSArray *)onDemandGeoLenses;
-(void)setShowBirthdayReplyLens:(BOOL)arg1 ;
-(id)lensForId:(id)arg1 ;
-(id)firstApplicableLens;
-(BOOL)isRegressorNeeded;
-(void)updateLenses;
-(void)updateDownloadableData;
-(void)setFilteringSettings:(unsigned long long)arg1 ;
-(void)_locationServicesDataStoreDidUpdate:(id)arg1 ;
-(void)_unlockedLensesDataStoreDidUpdate:(id)arg1 ;
-(id)lensesForCameraPosition:(unsigned long long)arg1 applicableContext:(id)arg2 categoryIds:(id)arg3 ;
-(void)setCategoryIds:(id)arg1 devicePosition:(unsigned long long)arg2 applicableContext:(id)arg3 ;
-(void)setCategoryIds:(id)arg1 ;
-(BOOL)showBirthdayReplyLens;
-(void)_scheduledLiveLensesDataStoreDidUpdate:(id)arg1 ;
-(void)_lensStudioDataStoreDidUpdate:(id)arg1 ;
-(void)_scheduledPrefetchLensesDataStoreDidUpdate:(id)arg1 ;
-(void)_arcadiaDidUpdateFavoriteLenses:(id)arg1 ;
-(void)syncDownloadableDataIfNecessary;
-(id)_sortedLensesWithCarouselPositionFromLenses:(id)arg1 cameraContext:(id)arg2 onDemandGeoLens:(id)arg3 ;
-(id)lensFromKarmaTest;
-(void)syncDownloadableData;
-(BOOL)_setCameraPosition:(unsigned long long)arg1 ;
-(BOOL)_shouldTriggerFetchingForCurrentCameraPosition;
-(BOOL)_setCategoryIds:(id)arg1 ;
-(BOOL)_setApplicableContext:(id)arg1 ;
-(void)updateLensesWithFetching:(BOOL)arg1 requiresAnimation:(BOOL)arg2 ;
-(void)didStopUpdatingLensData;
-(void)setPreviewFaceFilteringSettings;
-(void)setPreviewNoFaceFilteringSettings;
-(void)setCameraPosition:(unsigned long long)arg1 ;
@end

