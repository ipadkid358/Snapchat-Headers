/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:17 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/AMPUploaderDelegate.h>

@protocol AMPConfigProtocol;
@class AMPUploader, NSString, AMPEventConfigurer, AMPFailureInfoRepository, AMPEventListRepository, AMPSingleScheduler, AMPOverflowManager, AMPSequenceIdRepository, AMPFailureInfo, AMPEventList, AMPSequenceIdProvider;

@interface AMPEventLogger : NSObject <AMPUploaderDelegate> {

	AMPUploader* _uploader;
	NSString* _logQueueName;
	id<AMPConfigProtocol> _config;
	AMPEventConfigurer* _eventConfigurer;
	AMPFailureInfoRepository* _failureInfoRepo;
	AMPEventListRepository* _eventListRepo;
	/*^block*/id _checkUserCreated;
	AMPSingleScheduler* _singleUploadScheduler;
	AMPOverflowManager* _overflowManager;
	AMPSequenceIdRepository* _sequenceIdRepo;
	AMPFailureInfo* _failureInfo;
	AMPEventList* _eventList;
	AMPSequenceIdProvider* _sequenceIdProvider;

}

@property (nonatomic,readonly) id<AMPConfigProtocol> config;                            //@synthesize config=_config - In the implementation block
@property (nonatomic,readonly) AMPEventConfigurer * eventConfigurer;                    //@synthesize eventConfigurer=_eventConfigurer - In the implementation block
@property (nonatomic,readonly) AMPFailureInfoRepository * failureInfoRepo;              //@synthesize failureInfoRepo=_failureInfoRepo - In the implementation block
@property (nonatomic,readonly) AMPEventListRepository * eventListRepo;                  //@synthesize eventListRepo=_eventListRepo - In the implementation block
@property (nonatomic,readonly) id checkUserCreated;                                     //@synthesize checkUserCreated=_checkUserCreated - In the implementation block
@property (nonatomic,readonly) AMPSingleScheduler * singleUploadScheduler;              //@synthesize singleUploadScheduler=_singleUploadScheduler - In the implementation block
@property (nonatomic,readonly) AMPOverflowManager * overflowManager;                    //@synthesize overflowManager=_overflowManager - In the implementation block
@property (nonatomic,readonly) AMPSequenceIdRepository * sequenceIdRepo;                //@synthesize sequenceIdRepo=_sequenceIdRepo - In the implementation block
@property (nonatomic,readonly) AMPFailureInfo * failureInfo;                            //@synthesize failureInfo=_failureInfo - In the implementation block
@property (nonatomic,readonly) AMPEventList * eventList;                                //@synthesize eventList=_eventList - In the implementation block
@property (nonatomic,readonly) AMPSequenceIdProvider * sequenceIdProvider;              //@synthesize sequenceIdProvider=_sequenceIdProvider - In the implementation block
@property (nonatomic,readonly) AMPUploader * uploader;                                  //@synthesize uploader=_uploader - In the implementation block
@property (nonatomic,readonly) NSString * logQueueName;                                 //@synthesize logQueueName=_logQueueName - In the implementation block
-(AMPUploader *)uploader;
-(AMPEventList *)eventList;
-(NSString *)logQueueName;
-(AMPSequenceIdProvider *)sequenceIdProvider;
-(AMPSequenceIdRepository *)sequenceIdRepo;
-(AMPEventListRepository *)eventListRepo;
-(void)_logEvent:(id)arg1 uploadImmediately:(BOOL)arg2 ;
-(BOOL)_shouldRejectEvent:(id)arg1 ;
-(BOOL)_shouldReportOverflownEvents;
-(void)_reportOverflownEventsAndCrash;
-(AMPOverflowManager *)overflowManager;
-(void)_saveEventListAndSequenceIdProvider;
-(BOOL)_isLoggingUploadDetailsEvent:(id)arg1 ;
-(BOOL)_shouldUploadBatchImmediately;
-(void)uploadEventBatch;
-(void)_scheduleUpload;
-(AMPSingleScheduler *)singleUploadScheduler;
-(id)checkUserCreated;
-(BOOL)isEqualToLogger:(id)arg1 ;
-(void)successfullyUploadedEvents:(long long)arg1 totalEventsOverflowed:(unsigned long long)arg2 criticalEventsOverflowed:(unsigned long long)arg3 p0EventsOverflowed:(unsigned long long)arg4 ;
-(void)uploader:(id)arg1 failedToUploadEvents:(long long)arg2 ;
-(id)initWithConfiguration:(id)arg1 eventListRepo:(id)arg2 sequenceIdRepo:(id)arg3 eventList:(id)arg4 userCheck:(/*^block*/id)arg5 scheduler:(id)arg6 uploader:(id)arg7 overflowManager:(id)arg8 logQueueName:(id)arg9 ;
-(void)logEvent:(id)arg1 uploadImmediately:(BOOL)arg2 ;
-(void)saveEvents;
-(AMPEventConfigurer *)eventConfigurer;
-(AMPFailureInfoRepository *)failureInfoRepo;
-(AMPFailureInfo *)failureInfo;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(id<AMPConfigProtocol>)config;
@end

