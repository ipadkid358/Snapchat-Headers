/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:16 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCSpectaclesStreamDelegate.h>
#import <Snapchat/SCSpectaclesMessageBufferDelegate.h>
#import <Snapchat/SCSpectaclesNetworkClient.h>

@protocol SCSpectaclesNetworkClientDelegate;
@class SCSpectaclesAEADPacketEncryptor, SCSpectaclesStream, SCSpectaclesMessageBuffer, SCWeakTimer, NSString;

@interface SCSpectaclesMalibuNetworkClient : NSObject <SCSpectaclesStreamDelegate, SCSpectaclesMessageBufferDelegate, SCSpectaclesNetworkClient> {

	BOOL _hasProcessedData;
	BOOL _active;
	BOOL _connected;
	BOOL _suspended;
	id<SCSpectaclesNetworkClientDelegate> _delegate;
	SCSpectaclesAEADPacketEncryptor* _encryptor;
	SCSpectaclesStream* _stream;
	SCSpectaclesMessageBuffer* _messageBuffer;
	SCWeakTimer* _activityTimer;
	double _networkTimeout;
	unsigned long long _lastCancellationRequestId;
	unsigned long long _lastReceivedResponseId;
	unsigned long long _nextFreeRequestId;

}

@property (assign,nonatomic,__weak) id<SCSpectaclesNetworkClientDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,retain) SCSpectaclesAEADPacketEncryptor * encryptor;                        //@synthesize encryptor=_encryptor - In the implementation block
@property (nonatomic,retain) SCSpectaclesStream * stream;                                        //@synthesize stream=_stream - In the implementation block
@property (nonatomic,retain) SCSpectaclesMessageBuffer * messageBuffer;                          //@synthesize messageBuffer=_messageBuffer - In the implementation block
@property (nonatomic,retain) SCWeakTimer * activityTimer;                                        //@synthesize activityTimer=_activityTimer - In the implementation block
@property (assign,nonatomic) double networkTimeout;                                              //@synthesize networkTimeout=_networkTimeout - In the implementation block
@property (assign,nonatomic) BOOL hasProcessedData;                                              //@synthesize hasProcessedData=_hasProcessedData - In the implementation block
@property (assign,getter=isActive,nonatomic) BOOL active;                                        //@synthesize active=_active - In the implementation block
@property (assign,getter=isConnected,nonatomic) BOOL connected;                                  //@synthesize connected=_connected - In the implementation block
@property (assign,nonatomic) BOOL suspended;                                                     //@synthesize suspended=_suspended - In the implementation block
@property (assign,nonatomic) unsigned long long lastCancellationRequestId;                       //@synthesize lastCancellationRequestId=_lastCancellationRequestId - In the implementation block
@property (assign,nonatomic) unsigned long long lastReceivedResponseId;                          //@synthesize lastReceivedResponseId=_lastReceivedResponseId - In the implementation block
@property (assign,nonatomic) unsigned long long nextFreeRequestId;                               //@synthesize nextFreeRequestId=_nextFreeRequestId - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_shortData:(id)arg1 ;
+(id)_requestDescription:(id)arg1 ;
+(id)_responseDescription:(id)arg1 ;
-(SCSpectaclesAEADPacketEncryptor *)encryptor;
-(SCWeakTimer *)activityTimer;
-(void)setActivityTimer:(SCWeakTimer *)arg1 ;
-(void)_startActivityTimer;
-(void)_stopActivityTimer;
-(void)setHasProcessedData:(BOOL)arg1 ;
-(void)_checkIfResponseTimedOut;
-(BOOL)hasProcessedData;
-(void)_sendEncryptionSetupRequest:(id)arg1 ;
-(void)_handleAmbaResponseData:(id)arg1 ;
-(void)_handleEncryptionSetupResponseData:(id)arg1 ;
-(void)_exchangeNonces;
-(void)cancelOutstandingRequest;
-(void)setEncryptor:(SCSpectaclesAEADPacketEncryptor *)arg1 ;
-(SCSpectaclesMessageBuffer *)messageBuffer;
-(void)messageBufferReceivedData:(id)arg1 messageType:(unsigned long long)arg2 ;
-(void)setMessageBuffer:(SCSpectaclesMessageBuffer *)arg1 ;
-(void)streamDidReadData:(id)arg1 ;
-(void)streamDidWriteData;
-(void)streamDidError:(id)arg1 ;
-(void)streamDidOpen;
-(void)streamDidEnd;
-(id)initWithStream:(id)arg1 encryptionKey:(id)arg2 networkTimeout:(double)arg3 delegate:(id)arg4 ;
-(void)halt;
-(void)sendNetworkRequest:(id)arg1 ;
-(unsigned long long)lastReceivedResponseId;
-(unsigned long long)lastCancellationRequestId;
-(void)_sendAmbaRequest:(id)arg1 ;
-(void)setLastCancellationRequestId:(unsigned long long)arg1 ;
-(void)setLastReceivedResponseId:(unsigned long long)arg1 ;
-(unsigned long long)nextFreeRequestId;
-(void)setNextFreeRequestId:(unsigned long long)arg1 ;
-(double)networkTimeout;
-(void)setDelegate:(id<SCSpectaclesNetworkClientDelegate>)arg1 ;
-(void)dealloc;
-(id<SCSpectaclesNetworkClientDelegate>)delegate;
-(BOOL)isActive;
-(void)suspend;
-(void)start;
-(void)setActive:(BOOL)arg1 ;
-(void)setSuspended:(BOOL)arg1 ;
-(BOOL)isConnected;
-(void)setConnected:(BOOL)arg1 ;
-(void)setNetworkTimeout:(double)arg1 ;
-(SCSpectaclesStream *)stream;
-(void)setStream:(SCSpectaclesStream *)arg1 ;
-(BOOL)suspended;
@end

