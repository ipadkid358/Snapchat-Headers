/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:03 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCUserSessionScoped.h>

@protocol OS_dispatch_queue;
@class NSString, SCQueuePerformer, EGODatabase, EGODatabaseStatement, NSObject, NSMutableDictionary, NSMutableSet, NSNumber, NSArray, SCFriendsFeedRerankerV2Metadata, NSDictionary, NSDate;

@interface SCPreferences : NSObject <SCUserSessionScoped> {

	NSString* _filePath;
	BOOL _fileExists;
	SCQueuePerformer* _performer;
	EGODatabase* _database;
	EGODatabaseStatement* _queryValueForKey;
	EGODatabaseStatement* _queryKeysWithPrefix;
	EGODatabaseStatement* _replaceValueForKey;
	EGODatabaseStatement* _deleteWithKey;
	EGODatabaseStatement* _beginTransaction;
	EGODatabaseStatement* _commitTransaction;
	NSObject*<OS_dispatch_queue> _cacheAccessSync;
	NSMutableDictionary* _cachedKeyValues;
	NSMutableDictionary* _observeGraph;
	NSMutableDictionary* _allBatchChangedObjects;
	BOOL _fastAccessStatsCollected;
	NSMutableDictionary* _fastAccessedKeyValues;
	NSMutableSet* _fastAccessStats;
	/*^block*/id _fastAccessStatsBlock;
	BOOL _fastAccessStatsChanged;

}

@property (nonatomic,copy) NSNumber * warmStartBackgroundTimeThresholdInSeconds; 
@property (nonatomic,copy) NSNumber * warmStartLastFullRankingTimeThresholdInSecs; 
@property (nonatomic,copy) NSNumber * friendFeedTimeAwayThresholdInSecs; 
@property (nonatomic,copy) NSNumber * lastFullRankingTimeThresholdInSecs; 
@property (nonatomic,copy) NSNumber * rerankerStoryDemotionFactor; 
@property (nonatomic,copy) NSNumber * rerankerChatDemotionFactor; 
@property (assign,nonatomic) BOOL rerankerEnabled; 
@property (nonatomic,copy) NSArray * globalServerSignals; 
@property (nonatomic,copy) SCFriendsFeedRerankerV2Metadata * rerankerV2Metadata; 
@property (nonatomic,copy) NSDictionary * lensSubPickerActiveOptionIds; 
@property (nonatomic,copy) NSString * onDemandLensOnCameraSelectedOptionId; 
@property (assign,nonatomic) BOOL hasShownAnonymousLoggingDialog; 
@property (nonatomic,copy) NSString * searchVersionNumber; 
@property (assign,nonatomic) unsigned long long birthdayCardSeenTimes; 
@property (nonatomic,copy) NSString * birthdayCardTimeStamp; 
@property (nonatomic,copy) NSString * lastFullyWatchedSearchStoryId; 
@property (assign,nonatomic) BOOL trendingSectionEnabled; 
@property (nonatomic,copy) NSString * giphyApiKey; 
@property (nonatomic,copy) NSDate * lastStickerSearchPreviewUsedTime; 
@property (nonatomic,copy) NSDate * lastSeenStickerSearchAnimatedTooltipTime; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)_currentPreferences;
+(void)_setCurrentPreferences:(id)arg1 ;
-(NSNumber *)rerankerStoryDemotionFactor;
-(NSNumber *)rerankerChatDemotionFactor;
-(BOOL)rerankerEnabled;
-(NSNumber *)lastFullRankingTimeThresholdInSecs;
-(NSNumber *)warmStartLastFullRankingTimeThresholdInSecs;
-(NSNumber *)friendFeedTimeAwayThresholdInSecs;
-(NSNumber *)warmStartBackgroundTimeThresholdInSeconds;
-(SCFriendsFeedRerankerV2Metadata *)rerankerV2Metadata;
-(NSString *)giphyApiKey;
-(void)unobserve:(id)arg1 observedKeys:(id)arg2 ;
-(void)_pushFastAccessStats;
-(void)_readFastAccessKeyValues;
-(id)_objectForKeyFromDB:(id)arg1 ;
-(void)_cancelFastAccessStats;
-(void)_setObjectDataToDB:(id)arg1 forKey:(id)arg2 ;
-(void)_writeFastAccessKeyValuesIfChanged;
-(void)_notifyObserverForChangedObjects:(id)arg1 ;
-(id)_keysWithPrefixFromDB:(id)arg1 ;
-(void)_removeFastAccessKeyValues;
-(void)_checkIfFastAccessStatsChanged;
-(void)_setupDatabaseIfExists;
-(id)_queryValueForKey;
-(id)_queryKeysWithPrefix;
-(id)_deleteWithKey;
-(id)_replaceValueForKey;
-(id)keysWithPrefix:(id)arg1 ;
-(void)performChanges:(/*^block*/id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)observe:(id)arg1 queue:(id)arg2 changeHandler:(/*^block*/id)arg3 ;
-(void)setRerankerEnabled:(BOOL)arg1 ;
-(void)setWarmStartBackgroundTimeThresholdInSeconds:(NSNumber *)arg1 ;
-(void)setWarmStartLastFullRankingTimeThresholdInSecs:(NSNumber *)arg1 ;
-(void)setFriendFeedTimeAwayThresholdInSecs:(NSNumber *)arg1 ;
-(void)setRerankerStoryDemotionFactor:(NSNumber *)arg1 ;
-(void)setRerankerChatDemotionFactor:(NSNumber *)arg1 ;
-(void)setLastFullRankingTimeThresholdInSecs:(NSNumber *)arg1 ;
-(NSArray *)globalServerSignals;
-(void)setGlobalServerSignals:(NSArray *)arg1 ;
-(void)setRerankerV2Metadata:(SCFriendsFeedRerankerV2Metadata *)arg1 ;
-(BOOL)hasValidApprovedODGItem;
-(void)setLensSubPickerActiveOptionIds:(NSDictionary *)arg1 ;
-(NSDictionary *)lensSubPickerActiveOptionIds;
-(NSString *)onDemandLensOnCameraSelectedOptionId;
-(void)setOnDemandLensOnCameraSelectedOptionId:(NSString *)arg1 ;
-(long long)contentArchiveSizeForLensId:(id)arg1 ;
-(void)setContentArchiveSize:(long long)arg1 forLensId:(id)arg2 ;
-(NSDate *)lastStickerSearchPreviewUsedTime;
-(NSDate *)lastSeenStickerSearchAnimatedTooltipTime;
-(void)setLastSeenStickerSearchAnimatedTooltipTime:(NSDate *)arg1 ;
-(void)setLastStickerSearchPreviewUsedTime:(NSDate *)arg1 ;
-(NSString *)searchVersionNumber;
-(void)setSearchVersionNumber:(NSString *)arg1 ;
-(BOOL)hasShownAnonymousLoggingDialog;
-(void)setHasShownAnonymousLoggingDialog:(BOOL)arg1 ;
-(unsigned long long)birthdayCardSeenTimes;
-(void)setBirthdayCardSeenTimes:(unsigned long long)arg1 ;
-(NSString *)birthdayCardTimeStamp;
-(void)setBirthdayCardTimeStamp:(NSString *)arg1 ;
-(NSString *)lastFullyWatchedSearchStoryId;
-(void)setLastFullyWatchedSearchStoryId:(NSString *)arg1 ;
-(void)setTrendingSectionEnabled:(BOOL)arg1 ;
-(void)setGiphyApiKey:(NSString *)arg1 ;
-(BOOL)trendingSectionEnabled;
-(void)_setupDatabase;
-(id)objectForKeyedSubscript:(id)arg1 ;
-(void)setObject:(id)arg1 forKeyedSubscript:(id)arg2 ;
-(void)invalidate;
-(id)objectForKey:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(void)synchronize;
-(id)initWithFilePath:(id)arg1 ;
-(id)_beginTransaction;
-(id)_commitTransaction;
-(void)performChangesAndWait:(/*^block*/id)arg1 ;
@end

