/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:39 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSCoding.h>
#import <Snapchat/SCLocationDataFetcherDelegate.h>
#import <Snapchat/SCLocationControllerDelegate.h>
#import <Snapchat/SCLocationDataControllerDelegate.h>
#import <Snapchat/SCTimeProfilable.h>

@class CLLocation, SCUserSession, SCLocationDataFetcher, SCLocationController, SCVenueFilterController, SCLocationAdIdentityController, SCUnlockablesPreCacheController, SCLocationMobStoriesController, SCLocationSharedStoriesController, SCLocationWeatherController, SCLocationUnlockablesController, SCLocationServicesListenerAnnouncer, NSMutableDictionary, NSDate, NSMutableSet, NSString;

@interface SCLocationServicesDataStore : NSObject <NSCoding, SCLocationDataFetcherDelegate, SCLocationControllerDelegate, SCLocationDataControllerDelegate, SCTimeProfilable> {

	CLLocation* _lastFetchLocation;
	BOOL _isDebouncing;
	SCUserSession* _userSession;
	BOOL _forceUseNextLocation;
	BOOL _fetchingLocationData;
	SCLocationDataFetcher* _locationDataFetcher;
	long long _state;
	SCLocationController* _locationController;
	SCVenueFilterController* _venueFilterController;
	SCLocationAdIdentityController* _adIdentityController;
	SCUnlockablesPreCacheController* _unlockablesPreCacheController;
	SCLocationMobStoriesController* _mobStoriesController;
	SCLocationSharedStoriesController* _sharedStoriesController;
	SCLocationWeatherController* _weatherController;
	SCLocationUnlockablesController* _unlockablesController;
	SCLocationServicesListenerAnnouncer* _locationServicesAnnouncer;
	NSMutableDictionary* _datastore;
	CLLocation* _location;
	CLLocation* _dataLocation;
	NSDate* _lastIpRequestTime;
	NSDate* _updateUntil;
	NSMutableSet* _updateLocationCallers;

}

@property (nonatomic,retain) SCLocationController * locationController;                                    //@synthesize locationController=_locationController - In the implementation block
@property (nonatomic,retain) SCLocationDataFetcher * locationDataFetcher;                                  //@synthesize locationDataFetcher=_locationDataFetcher - In the implementation block
@property (nonatomic,retain) SCVenueFilterController * venueFilterController;                              //@synthesize venueFilterController=_venueFilterController - In the implementation block
@property (nonatomic,retain) SCLocationAdIdentityController * adIdentityController;                        //@synthesize adIdentityController=_adIdentityController - In the implementation block
@property (nonatomic,retain) SCUnlockablesPreCacheController * unlockablesPreCacheController;              //@synthesize unlockablesPreCacheController=_unlockablesPreCacheController - In the implementation block
@property (nonatomic,retain) SCLocationMobStoriesController * mobStoriesController;                        //@synthesize mobStoriesController=_mobStoriesController - In the implementation block
@property (nonatomic,retain) SCLocationSharedStoriesController * sharedStoriesController;                  //@synthesize sharedStoriesController=_sharedStoriesController - In the implementation block
@property (nonatomic,retain) SCLocationWeatherController * weatherController;                              //@synthesize weatherController=_weatherController - In the implementation block
@property (nonatomic,retain) SCLocationUnlockablesController * unlockablesController;                      //@synthesize unlockablesController=_unlockablesController - In the implementation block
@property (nonatomic,retain) SCLocationServicesListenerAnnouncer * locationServicesAnnouncer;              //@synthesize locationServicesAnnouncer=_locationServicesAnnouncer - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * datastore;                                              //@synthesize datastore=_datastore - In the implementation block
@property (assign,nonatomic) BOOL fetchingLocationData;                                                    //@synthesize fetchingLocationData=_fetchingLocationData - In the implementation block
@property (nonatomic,retain) CLLocation * location;                                                        //@synthesize location=_location - In the implementation block
@property (nonatomic,retain) CLLocation * dataLocation;                                                    //@synthesize dataLocation=_dataLocation - In the implementation block
@property (nonatomic,retain) NSDate * lastIpRequestTime;                                                   //@synthesize lastIpRequestTime=_lastIpRequestTime - In the implementation block
@property (nonatomic,retain) NSDate * updateUntil;                                                         //@synthesize updateUntil=_updateUntil - In the implementation block
@property (retain) NSMutableSet * updateLocationCallers;                                                   //@synthesize updateLocationCallers=_updateLocationCallers - In the implementation block
@property (nonatomic,readonly) long long state;                                                            //@synthesize state=_state - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)removeSavedState;
+(id)stringWithLocationDataState:(long long)arg1 ;
+(BOOL)_shouldUseNewLocation:(id)arg1 oldLocation:(id)arg2 ;
+(BOOL)_legacyShouldUseNewLocation:(id)arg1 comparedToOldLocation:(id)arg2 ;
+(id)sharedInstance;
+(id)path;
+(int)context;
-(void)locationController:(id)arg1 didUpdateLocation:(id)arg2 context:(long long)arg3 ;
-(void)locationController:(id)arg1 didUpdateSpeed:(id)arg2 ;
-(void)locationController:(id)arg1 didUpdateAltitude:(double)arg2 ;
-(void)locationController:(id)arg1 didFailWithError:(id)arg2 context:(long long)arg3 ;
-(void)startUpdatingLocationServicesIfNecessaryWithContext:(long long)arg1 userSession:(id)arg2 caller:(id)arg3 ;
-(void)stopUpdatingLocationData;
-(void)_ensureNonNilObjects;
-(void)startUpdatingLocationDataWithContext:(long long)arg1 userSession:(id)arg2 caller:(id)arg3 ;
-(void)updateLocationDataOnceIfNecessaryWithContext:(long long)arg1 userSession:(id)arg2 caller:(id)arg3 ;
-(void)updateLocationDataOnceWithContext:(long long)arg1 userSession:(id)arg2 caller:(id)arg3 ;
-(void)locationDataController:(id)arg1 didUpdateData:(id)arg2 forKey:(id)arg3 ;
-(void)locationDataFetcherFetchedLocationData:(id)arg1 forLocation:(id)arg2 ;
-(void)locationDataFetcherFailedToFetchLocationDataWithError:(id)arg1 ;
-(SCLocationServicesListenerAnnouncer *)locationServicesAnnouncer;
-(void)updateLocationDataOnceWithLocationServices:(BOOL)arg1 context:(long long)arg2 userSession:(id)arg3 caller:(id)arg4 ;
-(void)_startUpdatingLocationDataWithLocationServices:(BOOL)arg1 context:(long long)arg2 userSession:(id)arg3 caller:(id)arg4 ;
-(void)_setUserSessionIfValid:(id)arg1 ;
-(void)_didStartLocationUpdatingWithCaller:(id)arg1 ;
-(void)_didStopLocationUpdating;
-(void)_prepareLocationDataUpdate;
-(void)_fetchIpBasedLocationDataWithContext:(long long)arg1 ;
-(void)fetchDataForLocation:(id)arg1 context:(long long)arg2 trigger:(long long)arg3 ;
-(BOOL)shouldProcessResponseWithNewLocation:(id)arg1 oldLocation:(id)arg2 ;
-(void)debounceFetchDataWithLatestLocation:(id)arg1 context:(long long)arg2 trigger:(long long)arg3 ;
-(double)currentLocationDataAccuracy;
-(id)sharedStorySponsorForStoryGroupId:(id)arg1 ;
-(void)processWhiteListedSharedStoryResponse:(id)arg1 ;
-(SCLocationDataFetcher *)locationDataFetcher;
-(void)setLocationDataFetcher:(SCLocationDataFetcher *)arg1 ;
-(void)setLocationController:(SCLocationController *)arg1 ;
-(SCVenueFilterController *)venueFilterController;
-(void)setVenueFilterController:(SCVenueFilterController *)arg1 ;
-(SCLocationAdIdentityController *)adIdentityController;
-(void)setAdIdentityController:(SCLocationAdIdentityController *)arg1 ;
-(SCUnlockablesPreCacheController *)unlockablesPreCacheController;
-(void)setUnlockablesPreCacheController:(SCUnlockablesPreCacheController *)arg1 ;
-(SCLocationMobStoriesController *)mobStoriesController;
-(void)setMobStoriesController:(SCLocationMobStoriesController *)arg1 ;
-(SCLocationSharedStoriesController *)sharedStoriesController;
-(void)setSharedStoriesController:(SCLocationSharedStoriesController *)arg1 ;
-(SCLocationWeatherController *)weatherController;
-(void)setWeatherController:(SCLocationWeatherController *)arg1 ;
-(SCLocationUnlockablesController *)unlockablesController;
-(void)setUnlockablesController:(SCLocationUnlockablesController *)arg1 ;
-(void)setLocationServicesAnnouncer:(SCLocationServicesListenerAnnouncer *)arg1 ;
-(void)setDatastore:(NSMutableDictionary *)arg1 ;
-(BOOL)fetchingLocationData;
-(void)setFetchingLocationData:(BOOL)arg1 ;
-(CLLocation *)dataLocation;
-(void)setDataLocation:(CLLocation *)arg1 ;
-(NSDate *)lastIpRequestTime;
-(void)setLastIpRequestTime:(NSDate *)arg1 ;
-(NSDate *)updateUntil;
-(void)setUpdateUntil:(NSDate *)arg1 ;
-(NSMutableSet *)updateLocationCallers;
-(void)setUpdateLocationCallers:(NSMutableSet *)arg1 ;
-(id)init;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(long long)state;
-(id)objectForKey:(id)arg1 ;
-(void)_setState:(long long)arg1 ;
-(CLLocation *)location;
-(void)clear;
-(void)setLocation:(CLLocation *)arg1 ;
-(id)userSession;
-(void)stopUpdatingLocation;
-(void)saveState;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(NSMutableDictionary *)datastore;
-(SCLocationController *)locationController;
-(void)_setObject:(id)arg1 forKey:(id)arg2 ;
@end

