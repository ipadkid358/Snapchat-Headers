/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:38 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCLensCarouselPresenterProtocol.h>
#import <Snapchat/SCLensUIUpdateListener.h>
#import <Snapchat/SCLensDataProviderListener.h>
#import <UIKit/UICollectionViewDelegate.h>
#import <UIKit/UICollectionViewDelegateFlowLayout.h>
#import <UIKit/UICollectionViewDataSource.h>
#import <Snapchat/LSAEffectComponentListener.h>

@protocol SCLensDataProviderProtocol, SCLensCarouselPresenterDelegate;
@class UICollectionView, SCLensLayoutProvider, SCLensUsageTracker, SCLensActionController, SCLens, NSString, SCCreateOwnTooltipView, SCPreferences, NSArray;

@interface SCLensCarouselPresenter : NSObject <SCLensCarouselPresenterProtocol, SCLensUIUpdateListener, SCLensDataProviderListener, UICollectionViewDelegate, UICollectionViewDelegateFlowLayout, UICollectionViewDataSource, LSAEffectComponentListener> {

	/*^block*/id _collectionViewInitializationBlock;
	UICollectionView* _lensCollectionView;
	SCLensLayoutProvider* _layoutProvider;
	id<SCLensDataProviderProtocol> _lensDataProvider;
	id<SCLensCarouselPresenterDelegate> _delegate;
	SCLensUsageTracker* _lensUsageTracker;
	SCLensActionController* _lensActionController;
	BOOL _lensesActive;
	SCLens* _selectedLens;
	NSString* _lensIdToRestore;
	SCCreateOwnTooltipView* _createYourOwnToolTipView;
	double _createYourOwnToolTipViewAlpha;
	SCPreferences* _userPreferences;
	NSArray* _lenses;

}

@property (nonatomic,readonly) NSArray * lenses;                    //@synthesize lenses=_lenses - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)effectComponent:(id)arg1 didTurnOnEffectWithId:(id)arg2 features:(unsigned long long)arg3 ;
-(NSArray *)lenses;
-(void)willShowLenses;
-(void)didHideLenses;
-(void)didUpdateActiveLensOrder:(id)arg1 ;
-(void)didSelectLens:(id)arg1 ;
-(void)willDisplayLens:(id)arg1 ;
-(void)didEndDisplayingLens:(id)arg1 ;
-(void)lensDataProvider:(id)arg1 didUpdateAllLenses:(id)arg2 requiresAnimation:(BOOL)arg3 ;
-(void)lensDataProvider:(id)arg1 didUpdateLens:(id)arg2 ;
-(void)setLensIdToRestore:(id)arg1 ;
-(id)selectedLens;
-(void)selectLensToTheLeft;
-(BOOL)selectLensWithId:(id)arg1 ;
-(long long)_indexOfLensById:(id)arg1 ;
-(void)reloadCellWithLens:(id)arg1 ;
-(id)lensFromCurrentArrayByLensId:(id)arg1 ;
-(id)initWithLensCollectionViewBlock:(/*^block*/id)arg1 layoutProvider:(id)arg2 lensDataProvider:(id)arg3 lensUsageTracker:(id)arg4 lensActionController:(id)arg5 delegate:(id)arg6 userPreferences:(id)arg7 ;
-(unsigned long long)_selectLensWithId:(id)arg1 ;
-(void)selectLensAtIndex:(unsigned long long)arg1 ;
-(void)scrollLensesCollectionToItem:(unsigned long long)arg1 animated:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(id)lensCollectionView;
-(unsigned long long)currentSelectedLensIndex;
-(void)_configureCell:(id)arg1 forIndex:(long long)arg2 ;
-(unsigned long long)_updateCurrentLensesSelection;
-(id)_defaultSelectedLens;
-(CGPoint)pointForTargetContentOffset:(CGPoint)arg1 ;
-(void)selectLensAccordingScrollViewContentOffset:(id)arg1 ;
-(void)updateCurrentLensesSelection;
-(void)updateLensesList:(id)arg1 ;
-(BOOL)_hasLeftCarousel;
-(void)_adjustLensCellPositionAndScale:(id)arg1 atIndex:(long long)arg2 ;
-(void)adjustLenseViewCollectionVisibleCellsScale;
-(double)_distanceFromCenterToCenterOfCell:(id)arg1 ;
-(unsigned long long)indexOfItemToSnapForPoint:(CGPoint)arg1 layout:(id)arg2 ;
-(void)_removeCreateYourOwnHint;
-(void)setLenses:(NSArray *)arg1 ;
-(id)_lensWithIndex:(long long)arg1 ;
-(void)_metricsForOriginalCell:(id)arg1 outAlpha:(double*)arg2 outScale:(double*)arg3 ;
-(double)_scaleForCell:(id)arg1 maximumScale:(double)arg2 ;
-(double)_offsetForCell:(id)arg1 currentScale:(double)arg2 maximumScale:(double)arg3 ;
-(void)_setUpCreateYourOwnHintIfNeeded;
-(CGPoint)_collectionViewCenterPoint;
-(id)initWithLensCollectionViewBlock:(/*^block*/id)arg1 layoutProvider:(id)arg2 lensDataProvider:(id)arg3 lensUsageTracker:(id)arg4 lensActionController:(id)arg5 delegate:(id)arg6 ;
-(void)selectLensToTheRight;
-(void)setCreateYourOwnTooltipVisible:(BOOL)arg1 ;
-(void)scrollViewDidScroll:(id)arg1 ;
-(void)scrollViewWillEndDragging:(id)arg1 withVelocity:(CGPoint)arg2 targetContentOffset:(inout CGPoint*)arg3 ;
-(void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(BOOL)arg2 ;
-(void)scrollViewDidEndDecelerating:(id)arg1 ;
-(long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2 ;
-(id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 didSelectItemAtIndexPath:(id)arg2 ;
-(void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3 ;
-(id)cellAtIndex:(long long)arg1 ;
@end

