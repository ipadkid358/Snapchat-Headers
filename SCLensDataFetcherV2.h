/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:38 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCLensLoadingQueueDelegate.h>
#import <Snapchat/SCUserSessionScoped.h>
#import <Snapchat/SCLensUIUpdateListener.h>
#import <Snapchat/SCManagedDatastore.h>

@protocol SCPerforming;
@class SCLensDownloadOperationFactoryV2, SCLensDataFetcherListenerV2Announcer, SCLensLoadingQueueV2, NSArray, SCRequestManager, SCLensURLDataFetcher, SCLensBlobDataFetcher, SCFeatureSettingsManager, SCPreferences, NSString, NSMutableSet, NSMutableDictionary;

@interface SCLensDataFetcherV2 : NSObject <SCLensLoadingQueueDelegate, SCUserSessionScoped, SCLensUIUpdateListener, SCManagedDatastore> {

	SCLensDownloadOperationFactoryV2* _operationsFactory;
	SCLensDataFetcherListenerV2Announcer* _announcer;
	SCLensLoadingQueueV2* _contentQueue;
	SCLensLoadingQueueV2* _imageQueue;
	SCLensLoadingQueueV2* _categoryQueue;
	SCLensLoadingQueueV2* _assetsQueue;
	SCLensLoadingQueueV2* _filterOverlayImageQueue;
	SCLensLoadingQueueV2* _warmupQueue;
	NSArray* _allQueues;
	id<SCPerforming> _performer;
	SCRequestManager* _requestManager;
	SCLensURLDataFetcher* _urlDataFetcher;
	SCLensBlobDataFetcher* _blobDataFetcher;
	SCFeatureSettingsManager* _featureSettingsManager;
	SCPreferences* _userPreferences;
	NSString* _currentSelectedLensId;
	NSMutableSet* _visibleLensIds;
	NSMutableSet* _explicitlySelectedLensIds;
	NSMutableDictionary* _lensIdsToVisibleIndexes;

}

@property (nonatomic,retain) SCLensDownloadOperationFactoryV2 * operationsFactory;              //@synthesize operationsFactory=_operationsFactory - In the implementation block
@property (nonatomic,retain) SCLensDataFetcherListenerV2Announcer * announcer;                  //@synthesize announcer=_announcer - In the implementation block
@property (nonatomic,retain) SCLensLoadingQueueV2 * contentQueue;                               //@synthesize contentQueue=_contentQueue - In the implementation block
@property (nonatomic,retain) SCLensLoadingQueueV2 * imageQueue;                                 //@synthesize imageQueue=_imageQueue - In the implementation block
@property (nonatomic,retain) SCLensLoadingQueueV2 * categoryQueue;                              //@synthesize categoryQueue=_categoryQueue - In the implementation block
@property (nonatomic,retain) SCLensLoadingQueueV2 * assetsQueue;                                //@synthesize assetsQueue=_assetsQueue - In the implementation block
@property (nonatomic,retain) SCLensLoadingQueueV2 * filterOverlayImageQueue;                    //@synthesize filterOverlayImageQueue=_filterOverlayImageQueue - In the implementation block
@property (nonatomic,retain) SCLensLoadingQueueV2 * warmupQueue;                                //@synthesize warmupQueue=_warmupQueue - In the implementation block
@property (nonatomic,retain) NSArray * allQueues;                                               //@synthesize allQueues=_allQueues - In the implementation block
@property (nonatomic,retain) id<SCPerforming> performer;                                        //@synthesize performer=_performer - In the implementation block
@property (nonatomic,retain) SCRequestManager * requestManager;                                 //@synthesize requestManager=_requestManager - In the implementation block
@property (nonatomic,retain) SCLensURLDataFetcher * urlDataFetcher;                             //@synthesize urlDataFetcher=_urlDataFetcher - In the implementation block
@property (nonatomic,retain) SCLensBlobDataFetcher * blobDataFetcher;                           //@synthesize blobDataFetcher=_blobDataFetcher - In the implementation block
@property (nonatomic,retain) SCFeatureSettingsManager * featureSettingsManager;                 //@synthesize featureSettingsManager=_featureSettingsManager - In the implementation block
@property (nonatomic,retain) SCPreferences * userPreferences;                                   //@synthesize userPreferences=_userPreferences - In the implementation block
@property (nonatomic,retain) NSString * currentSelectedLensId;                                  //@synthesize currentSelectedLensId=_currentSelectedLensId - In the implementation block
@property (nonatomic,retain) NSMutableSet * visibleLensIds;                                     //@synthesize visibleLensIds=_visibleLensIds - In the implementation block
@property (nonatomic,retain) NSMutableSet * explicitlySelectedLensIds;                          //@synthesize explicitlySelectedLensIds=_explicitlySelectedLensIds - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * lensIdsToVisibleIndexes;                     //@synthesize lensIdsToVisibleIndexes=_lensIdsToVisibleIndexes - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id<SCPerforming>)performer;
-(SCLensDataFetcherListenerV2Announcer *)announcer;
-(id)kindName;
-(void)handleEmergencyDiskConditionWithDispatchGroup:(id)arg1 ;
-(void)removeExpiredContentAsync:(id)arg1 reason:(unsigned long long)arg2 dispatchGroup:(id)arg3 ;
-(void)removeAllUserSessionDataAsync:(id)arg1 ;
-(void)setPerformer:(id<SCPerforming>)arg1 ;
-(void)setAnnouncer:(SCLensDataFetcherListenerV2Announcer *)arg1 ;
-(void)willShowLenses;
-(void)didHideLenses;
-(void)didUpdateActiveLensOrder:(id)arg1 ;
-(void)didSelectLens:(id)arg1 ;
-(void)willDisplayLens:(id)arg1 ;
-(void)didEndDisplayingLens:(id)arg1 ;
-(void)pauseDownloads;
-(void)resumeDownloads;
-(SCFeatureSettingsManager *)featureSettingsManager;
-(void)fetchAsset:(id)arg1 lens:(id)arg2 completionPerformer:(id)arg3 completion:(/*^block*/id)arg4 ;
-(SCLensURLDataFetcher *)urlDataFetcher;
-(void)setUrlDataFetcher:(SCLensURLDataFetcher *)arg1 ;
-(SCLensBlobDataFetcher *)blobDataFetcher;
-(void)setBlobDataFetcher:(SCLensBlobDataFetcher *)arg1 ;
-(NSString *)currentSelectedLensId;
-(NSMutableDictionary *)lensIdsToVisibleIndexes;
-(long long)requestPriorityForLens:(id)arg1 requestTiming:(long long)arg2 ;
-(long long)fallbackPriorityForLens:(id)arg1 requestTiming:(long long)arg2 ;
-(long long)lensContentFetchPolicy:(id)arg1 ;
-(long long)lensDataFetchPolicy:(id)arg1 ;
-(NSMutableSet *)visibleLensIds;
-(NSMutableSet *)explicitlySelectedLensIds;
-(BOOL)wasLensContenteFetchedToday:(id)arg1 ;
-(/*^block*/id)orderingComparator;
-(/*^block*/id)warmupOrderingComparator;
-(/*^block*/id)lensContentDownloadOperationsSettingsBlock;
-(/*^block*/id)lensImageDownloadOperationsSettingsBlock;
-(/*^block*/id)lensCategoryDownloadOperationsSettingsBlock;
-(/*^block*/id)assetDownloadOperationsSettingsBlock;
-(/*^block*/id)warmupOperationsSettingsBlock;
-(SCLensDownloadOperationFactoryV2 *)operationsFactory;
-(SCLensLoadingQueueV2 *)contentQueue;
-(id)checkCacheAndScheduleOperationIfNeeded:(/*^block*/id)arg1 onQueue:(id)arg2 ;
-(SCLensLoadingQueueV2 *)filterOverlayImageQueue;
-(void)saveLastFetchDateForLensContent:(id)arg1 ;
-(SCLensLoadingQueueV2 *)categoryQueue;
-(SCLensLoadingQueueV2 *)assetsQueue;
-(void)fetchLenses:(id)arg1 requestTiming:(long long)arg2 ;
-(NSArray *)allQueues;
-(void)setCurrentSelectedLensId:(NSString *)arg1 ;
-(void)removeExpiredData:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(SCLensLoadingQueueV2 *)warmupQueue;
-(void)queue:(id)arg1 willStartOperation:(id)arg2 ;
-(void)queue:(id)arg1 didFinishOperation:(id)arg2 result:(id)arg3 ;
-(id)initWithFeatureSettingsManager:(id)arg1 userPreferences:(id)arg2 urlDataFetcher:(id)arg3 blobDataFetcher:(id)arg4 operationsFactory:(id)arg5 performer:(id)arg6 ;
-(void)fetchCategory:(id)arg1 lens:(id)arg2 requestTiming:(long long)arg3 ;
-(void)fetchLenses:(id)arg1 ;
-(void)clearCacheWithCompletionBlock:(/*^block*/id)arg1 ;
-(void)setOperationsFactory:(SCLensDownloadOperationFactoryV2 *)arg1 ;
-(void)setContentQueue:(SCLensLoadingQueueV2 *)arg1 ;
-(void)setCategoryQueue:(SCLensLoadingQueueV2 *)arg1 ;
-(void)setAssetsQueue:(SCLensLoadingQueueV2 *)arg1 ;
-(void)setFilterOverlayImageQueue:(SCLensLoadingQueueV2 *)arg1 ;
-(void)setWarmupQueue:(SCLensLoadingQueueV2 *)arg1 ;
-(void)setAllQueues:(NSArray *)arg1 ;
-(void)setFeatureSettingsManager:(SCFeatureSettingsManager *)arg1 ;
-(void)setVisibleLensIds:(NSMutableSet *)arg1 ;
-(void)setExplicitlySelectedLensIds:(NSMutableSet *)arg1 ;
-(void)setLensIdsToVisibleIndexes:(NSMutableDictionary *)arg1 ;
-(void)invalidate;
-(void)applicationDidEnterBackground:(id)arg1 ;
-(SCPreferences *)userPreferences;
-(void)setUserPreferences:(SCPreferences *)arg1 ;
-(void)clearInMemoryCache;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
-(SCLensLoadingQueueV2 *)imageQueue;
-(void)setImageQueue:(SCLensLoadingQueueV2 *)arg1 ;
-(void)cancelDownloads;
-(id)reportMetrics;
-(SCRequestManager *)requestManager;
-(void)setRequestManager:(SCRequestManager *)arg1 ;
@end

