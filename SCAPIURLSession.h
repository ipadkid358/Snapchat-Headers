/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:07 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/NSURLSessionDelegate.h>
#import <libobjc.A.dylib/NSURLSessionTaskDelegate.h>
#import <libobjc.A.dylib/NSURLSessionDataDelegate.h>
#import <libobjc.A.dylib/NSURLSessionDownloadDelegate.h>

@protocol SCPerforming;
@class NSURLSessionConfiguration, NSURLSession, SCAPISessionTaskBookkeeper, NSMapTable, SCTimeoutIntervalForFirstByteStore, NSMutableDictionary, NSString;

@interface SCAPIURLSession : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate> {

	NSURLSessionConfiguration* _configuration;
	NSURLSession* _session;
	id<SCPerforming> _sessionPerformer;
	BOOL _isBackgroundUploadSession;
	double _lastSessionCreationTimeStamp;
	SCAPISessionTaskBookkeeper* _bookkeeper;
	NSMapTable* _containersKeyedByTasks;
	id<SCPerforming> _requestInfoContainerPerformer;
	SCTimeoutIntervalForFirstByteStore* _networkRTTEstimatorStore;
	unsigned long long _sessionSeqNum;
	NSMutableDictionary* _numSucceededWarmupRequestsPerHost;
	NSMutableDictionary* _numOutstandingRequestsPerHost;
	NSMutableDictionary* _numMaxOutstandingRequestsPerHost;
	NSMutableDictionary* _connectionIdleTimestampPerHost;
	BOOL _shouldUseCrNet;
	BOOL _isUsingCrNet;
	NSString* _identifier;

}

@property (assign,nonatomic) BOOL shouldUseCrNet;                   //@synthesize shouldUseCrNet=_shouldUseCrNet - In the implementation block
@property (assign) BOOL isUsingCrNet;                               //@synthesize isUsingCrNet=_isUsingCrNet - In the implementation block
@property (nonatomic,readonly) NSString * identifier;               //@synthesize identifier=_identifier - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)infoForTask:(id)arg1 ;
-(id)downloadTaskWithRequest:(id)arg1 requestInfoContainer:(id)arg2 ;
-(id)downloadTaskWithResumeData:(id)arg1 requestInfoContainer:(id)arg2 ;
-(void)startNetworkTimeoutIntervalMonitorIfNeeded;
-(void)_createNewSessionConfiguration:(id)arg1 ;
-(void)_startUsingCrNetIfNecessary;
-(id)createSessionWithTimeoutValue:(double)arg1 ;
-(void)_stopUsingCrNetIfNecessary;
-(BOOL)isUsingCrNet;
-(void)setIsUsingCrNet:(BOOL)arg1 ;
-(void)useNewSessionWithReason:(id)arg1 ;
-(void)useNewSessionWithReason:(id)arg1 params:(id)arg2 ;
-(double)_determineTimeoutValueForNewSession;
-(void)_recordSessionInfoForRequest:(id)arg1 requestInfo:(id)arg2 ;
-(void)setRequestInfoContainer:(id)arg1 forTask:(id)arg2 ;
-(id)_containerForTask:(id)arg1 ;
-(void)_removeContainerForTask:(id)arg1 ;
-(void)_updateConnectionRecordsWithFinishedTask:(id)arg1 requestInfo:(id)arg2 error:(id)arg3 ;
-(BOOL)isRedirectAllowed:(id)arg1 from:(id)arg2 ;
-(void)_recordConnectionMetricsWithRequestInfo:(id)arg1 task:(id)arg2 ;
-(void)setShouldUseCrNet:(BOOL)arg1 ;
-(id)dataTaskWithRequest:(id)arg1 requestInfoContainer:(id)arg2 ;
-(id)uploadTaskWithRequest:(id)arg1 fileURL:(id)arg2 requestInfoContainer:(id)arg3 ;
-(void)logTaskStarted:(id)arg1 ;
-(BOOL)shouldUseCrNet;
-(double)_timeoutInterval;
-(void)dealloc;
-(BOOL)respondsToSelector:(SEL)arg1 ;
-(NSString *)identifier;
-(id)initWithIdentifier:(id)arg1 ;
-(void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3 ;
-(void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(/*^block*/id)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5 ;
-(void)URLSession:(id)arg1 task:(id)arg2 didFinishCollectingMetrics:(id)arg3 ;
-(void)appWillEnterForeground;
-(void)appDidEnterBackground;
-(double)timeoutInterval;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5 ;
-(void)URLSession:(id)arg1 downloadTask:(id)arg2 didResumeAtOffset:(long long)arg3 expectedTotalBytes:(long long)arg4 ;
@end

