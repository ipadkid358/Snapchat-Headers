/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:07 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCCache.h>
@class NSString;


@protocol SCCache <NSObject>
@property (nonatomic,copy,readonly) NSString * kindName; 
@property (assign,nonatomic) BOOL underExperiment; 
@required
-(NSString *)kindName;
-(void)objectForKey:(id)arg1 dataDecoding:(/*^block*/id)arg2 block:(/*^block*/id)arg3;
-(void)removeObjectForKey:(id)arg1 block:(/*^block*/id)arg2;
-(void)setObject:(id)arg1 dataEncoding:(/*^block*/id)arg2 forKey:(id)arg3 expiration:(id)arg4 block:(/*^block*/id)arg5;
-(void)removeAllObjectsWithBlock:(/*^block*/id)arg1;
-(void)objectForKey:(id)arg1 dataDecoding:(/*^block*/id)arg2 resetExpiration:(id)arg3 whenLessThanDelta:(double)arg4 block:(/*^block*/id)arg5;
-(void)objectForKey:(id)arg1 dataDecoding:(/*^block*/id)arg2 resetExpiration:(id)arg3 whenLessThanDelta:(double)arg4 block:(/*^block*/id)arg5 returnExpired:(BOOL)arg6;
-(void)removeObjectsForKeys:(id)arg1 block:(/*^block*/id)arg2;
-(void)removeExpiredContentWithBlock:(/*^block*/id)arg1;
-(BOOL)underExperiment;
-(void)removeAllObjectsFromMemoryWithBlock:(/*^block*/id)arg1;
-(void)removeAllObjectsExceptKeys:(id)arg1 block:(/*^block*/id)arg2;
-(void)decreaseExpirationTo:(id)arg1 forKey:(id)arg2;
-(void)increaseExpirationTo:(id)arg1 forKey:(id)arg2;
-(void)contains:(id)arg1 block:(/*^block*/id)arg2;
-(void)setUnderExperiment:(BOOL)arg1;
-(void)invalidate;
-(BOOL)contains:(id)arg1;

@end

#import <Snapchat/SCManagedDatastore.h>

@protocol SCCacheKeyGenerator, SCConcurrentPerforming;
@class NSString, SCCacheMetrics, SCCacheSizePolicy, SCMemoryCacheKeyGenerator, PINMemoryCache, PINDiskCache, SCCacheManager;

@interface SCCache : NSObject <SCCache, SCManagedDatastore> {

	SCCacheMetrics* _metrics;
	SCCacheSizePolicy* _diskSizeLimitConfig;
	SCMemoryCacheKeyGenerator* _memKeyGenerator;
	id<SCCacheKeyGenerator> _diskKeyGenerator;
	BOOL _isScopeManagedDirectory;
	BOOL _underExperiment;
	BOOL _isInvalidated;
	NSString* _kindName;
	NSString* _metricsName;
	/*^block*/id _didRemoveObjectFromDiskBlock;
	PINMemoryCache* _memoryCache;
	PINDiskCache* _diskCache;
	SCCacheManager* _cacheManager;
	id<SCConcurrentPerforming> _workQueuePerformer;
	id<SCConcurrentPerforming> _diskCacheQueuePerformer;
	id<SCConcurrentPerforming> _completionQueuePerformer;

}

@property (nonatomic,retain) PINMemoryCache * memoryCache;                                     //@synthesize memoryCache=_memoryCache - In the implementation block
@property (nonatomic,retain) PINDiskCache * diskCache;                                         //@synthesize diskCache=_diskCache - In the implementation block
@property (nonatomic,retain) SCCacheManager * cacheManager;                                    //@synthesize cacheManager=_cacheManager - In the implementation block
@property (nonatomic,copy,readonly) NSString * metricsName;                                    //@synthesize metricsName=_metricsName - In the implementation block
@property (nonatomic,retain) id<SCConcurrentPerforming> workQueuePerformer;                    //@synthesize workQueuePerformer=_workQueuePerformer - In the implementation block
@property (nonatomic,retain) id<SCConcurrentPerforming> diskCacheQueuePerformer;               //@synthesize diskCacheQueuePerformer=_diskCacheQueuePerformer - In the implementation block
@property (nonatomic,retain) id<SCConcurrentPerforming> completionQueuePerformer;              //@synthesize completionQueuePerformer=_completionQueuePerformer - In the implementation block
@property (assign,nonatomic) BOOL isInvalidated;                                               //@synthesize isInvalidated=_isInvalidated - In the implementation block
@property (nonatomic,copy) id didRemoveObjectFromDiskBlock;                                    //@synthesize didRemoveObjectFromDiskBlock=_didRemoveObjectFromDiskBlock - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,copy,readonly) NSString * kindName;                                       //@synthesize kindName=_kindName - In the implementation block
@property (assign,nonatomic) BOOL underExperiment;                                             //@synthesize underExperiment=_underExperiment - In the implementation block
+(id)_stringForCacheName:(unsigned long long)arg1 ;
+(id)_cacheForName:(unsigned long long)arg1 defaultSizeMB:(unsigned long long)arg2 ;
+(id)attachmentsFaviconCache;
+(id)bitmojiBuilderManagerAssetCache;
+(id)bitmojiBuilderUserAvatarCache;
+(id)chatsMediaCache;
+(id)chatV3MediaDataCache;
+(id)contextFilterResourceCache;
+(id)customStickerCache;
+(id)customStickerMemoriesCache;
+(id)diskBackedMediaCache;
+(id)geoFilterURLDataCache;
+(id)geoFilterRenderedImagesCache;
+(id)helpVideoListingCache;
+(id)lensBitmojiListCache;
+(id)lensesFaceImageProviderCache;
+(id)lensURLDataCache;
+(id)mapLocationSharingServiceCache;
+(id)mapImageDataCache;
+(id)onDemandGeofilterCache;
+(id)onDemandGeofilterFontCache;
+(id)purikuraResourceCache;
+(id)reverseAudioFileCache;
+(id)searchImageDataCache;
+(id)searchVideoDataCache;
+(id)searchResponseCache;
+(id)searchThumbnailCache;
+(id)snapAdsPortalMediaManagerCache;
+(id)stickerPackMetadataCache;
+(id)storiesMediaCache;
+(id)threeDBitmojiCache;
+(id)unlockablesGeoFilterAreaCache;
+(id)discoverTilesCache;
+(id)storiesTilesCache;
+(id)discoverChannelsIconCache;
+(id)liveStoriesIconCache;
+(id)cognacMediaCache;
+(id)friendsProfileCollectionCache;
+(id)musicAudioDataCache;
+(id)snapcodeDataCache;
+(id)lensIdScanDataCache;
+(id)cheetahStoriesFeedCache;
+(void)setSharedMemoryByteLimit:(unsigned long long)arg1 ;
+(id)allStaticCacheNames;
-(NSString *)kindName;
-(void)handleEmergencyDiskConditionWithDispatchGroup:(id)arg1 ;
-(void)removeExpiredContentAsync:(id)arg1 reason:(unsigned long long)arg2 dispatchGroup:(id)arg3 ;
-(void)removeAllUserSessionDataAsync:(id)arg1 ;
-(PINDiskCache *)diskCache;
-(void)objectForKey:(id)arg1 dataDecoding:(/*^block*/id)arg2 block:(/*^block*/id)arg3 ;
-(void)removeObjectForKey:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)setObject:(id)arg1 dataEncoding:(/*^block*/id)arg2 forKey:(id)arg3 expiration:(id)arg4 block:(/*^block*/id)arg5 ;
-(void)removeAllObjectsWithBlock:(/*^block*/id)arg1 ;
-(unsigned long long)quotaInBytes;
-(id)_keyToLogId:(id)arg1 ;
-(id)initWithName:(id)arg1 metricsName:(id)arg2 cacheManager:(id)arg3 diskSizeLimitConfig:(id)arg4 cacheDirectory:(id)arg5 ;
-(/*^block*/id)_generateDiskRemovalBlock;
-(void)_configureDiskQuota;
-(void)_writeToCacheType:(unsigned long long)arg1 cacheObject:(id)arg2 encodedData:(id)arg3 dataEncoding:(/*^block*/id)arg4 forKey:(id)arg5 expiration:(id)arg6 dispatchGroup:(id)arg7 finishBlock:(/*^block*/id)arg8 failBlock:(/*^block*/id)arg9 ;
-(void)objectForKey:(id)arg1 dataDecoding:(/*^block*/id)arg2 resetExpiration:(id)arg3 whenLessThanDelta:(double)arg4 block:(/*^block*/id)arg5 ;
-(void)objectForKey:(id)arg1 dataDecoding:(/*^block*/id)arg2 resetExpiration:(id)arg3 whenLessThanDelta:(double)arg4 block:(/*^block*/id)arg5 returnExpired:(BOOL)arg6 ;
-(void)logCacheFetchStartWithKey:(id)arg1 ;
-(void)logCacheFetchEndWithKey:(id)arg1 cacheType:(unsigned long long)arg2 cacheError:(id)arg3 ;
-(void)logCacheFetchStepWithKey:(id)arg1 stepName:(id)arg2 ;
-(void)_executeCompletionBlock:(/*^block*/id)arg1 withKey:(id)arg2 object:(id)arg3 ;
-(void)_updateExpiration:(id)arg1 forKey:(id)arg2 ;
-(void)_readObjectFromDiskCache:(id)arg1 originalKey:(id)arg2 dataDecoding:(/*^block*/id)arg3 resetExpiration:(id)arg4 whenLessThanDelta:(double)arg5 block:(/*^block*/id)arg6 returnExpired:(BOOL)arg7 ;
-(void)removeObjectsForKeys:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)_removeAllObjectsWithEnumerationFromStorage:(unsigned long long)arg1 exceptKeys:(id)arg2 block:(/*^block*/id)arg3 ;
-(void)_removeFromCacheType:(unsigned long long)arg1 transformedKeys:(id)arg2 dispatchGroup:(id)arg3 finishBlock:(/*^block*/id)arg4 ;
-(void)_removeAllObjectsCompletelyFromStorage:(unsigned long long)arg1 block:(/*^block*/id)arg2 ;
-(void)removeExpiredContentWithBlock:(/*^block*/id)arg1 ;
-(BOOL)underExperiment;
-(void)removeAllObjectsFromMemoryWithBlock:(/*^block*/id)arg1 ;
-(void)removeAllObjectsExceptKeys:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)decreaseExpirationTo:(id)arg1 forKey:(id)arg2 ;
-(void)increaseExpirationTo:(id)arg1 forKey:(id)arg2 ;
-(void)contains:(id)arg1 block:(/*^block*/id)arg2 ;
-(void)setUnderExperiment:(BOOL)arg1 ;
-(id)initWithName:(id)arg1 diskSizeLimitConfig:(id)arg2 ;
-(id)initWithScopedDirectory:(id)arg1 name:(id)arg2 metricsName:(id)arg3 diskSizeLimitConfig:(id)arg4 ;
-(unsigned long long)memoryCacheUsageInBytes;
-(void)trimDiskCacheToQuota;
-(void)setDidRemoveObjectFromDiskBlock:(id)arg1 ;
-(NSString *)metricsName;
-(id)didRemoveObjectFromDiskBlock;
-(void)setMemoryCache:(PINMemoryCache *)arg1 ;
-(void)setDiskCache:(PINDiskCache *)arg1 ;
-(void)setCacheManager:(SCCacheManager *)arg1 ;
-(id<SCConcurrentPerforming>)workQueuePerformer;
-(void)setWorkQueuePerformer:(id<SCConcurrentPerforming>)arg1 ;
-(id<SCConcurrentPerforming>)diskCacheQueuePerformer;
-(void)setDiskCacheQueuePerformer:(id<SCConcurrentPerforming>)arg1 ;
-(id<SCConcurrentPerforming>)completionQueuePerformer;
-(void)setCompletionQueuePerformer:(id<SCConcurrentPerforming>)arg1 ;
-(void)dealloc;
-(unsigned long long)count;
-(void)invalidate;
-(void)validate;
-(void)setIsInvalidated:(BOOL)arg1 ;
-(SCCacheManager *)cacheManager;
-(BOOL)contains:(id)arg1 ;
-(BOOL)isInvalidated;
-(unsigned long long)sizeInBytes;
-(id)reportMetrics;
-(PINMemoryCache *)memoryCache;
@end

