/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:51:49 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <libobjc.A.dylib/NSFastEnumeration.h>

@interface SCDocObjectFetchedResult : NSObject <NSFastEnumeration> {

	vector<SCDocObject *, std::__1::allocator<SCDocObject *> >* _array;
	Class _objectClass;
	Error _error;
	unsigned long long _changesTimestamp;
	unsigned long long _fetchedResultId;
	shared_ptr<SC::Query::BaseExpr<bool> >* _expressionPtr;
	OrderBy* _orderBy;
	Limit _limit;

}

@property (nonatomic,readonly) id firstObject; 
@property (nonatomic,readonly) id lastObject; 
+(id)fetchedResultWithArray:(const vector<SCDocObject *, std::__1::allocator<SCDocObject *> >*)arg1 objectClass:(Class)arg2 error:(const Error*)arg3 changesTimestamp:(unsigned long long)arg4 expressionPtr:(const shared_ptr<SC::Query::BaseExpr<bool> >*)arg5 orderBy:(const OrderBy*)arg6 limit:(const Limit*)arg7 ;
-(const shared_ptr<SC::Query::BaseExpr<bool> >*)expressionPtr;
-(id)initWithArray:(const vector<SCDocObject *, std::__1::allocator<SCDocObject *> >*)arg1 objectClass:(Class)arg2 error:(const Error*)arg3 changesTimestamp:(unsigned long long)arg4 fetchedResultId:(unsigned long long)arg5 expressionPtr:(const shared_ptr<SC::Query::BaseExpr<bool> >*)arg6 orderBy:(const OrderBy*)arg7 limit:(const Limit*)arg8 ;
-(unsigned long long)changesTimestamp;
-(unsigned long long)fetchedResultId;
-(unsigned long long)countByEnumeratingWithState:(SCD_Struct_BC198*)arg1 objects:(id*)arg2 count:(unsigned long long)arg3 ;
-(unsigned long long)count;
-(id)firstObject;
-(id)lastObject;
-(id)objectAtIndexedSubscript:(unsigned long long)arg1 ;
-(BOOL)isEqual:(id)arg1 ;
-(unsigned long long)hash;
-(const vector<SCDocObject *, std::__1::allocator<SCDocObject *> >*)array;
-(Class)objectClass;
-(id)error;
-(const OrderBy*)orderBy;
-(const Limit*)limit;
@end

