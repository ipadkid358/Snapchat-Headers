/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:14 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <libobjc.A.dylib/AVPlayerItemOutputPullDelegate.h>
#import <Snapchat/SCAudioSessionListener.h>

@protocol OS_dispatch_semaphore;
@class SCImageProcessQueue, SCImageProcessVideoPlaybackRequest, NSArray, SCImageProcessPlaybackRenderer, CADisplayLink, NSObject, AVPlayerItemVideoOutput, AVPlayerItem, AVPlayer, AVAsset, FBKVOController, AVMutableComposition, AVMutableCompositionTrack, SCImageProcessVideoPlaybackSessionListenerAnnouncer, NSDictionary, AVAudioMix, NSString;

@interface SCImageProcessVideoPlaybackSession : NSObject <AVPlayerItemOutputPullDelegate, SCAudioSessionListener> {

	SCImageProcessQueue* _queue;
	SCImageProcessVideoPlaybackRequest* _request;
	long long _orientation;
	NSArray* _intermediateCommands;
	NSArray* _outputCommands;
	NSArray* _preOutputCommands;
	NSArray* _postOutputCommands;
	SCImageProcessPlaybackRenderer* _renderer;
	CADisplayLink* _displayLink;
	NSObject*<OS_dispatch_semaphore> _frameRenderSemaphore;
	double _firstHostTime;
	double _timeoutBeforeVideoOutputRemake;
	BOOL _hasExtractedFrame;
	AVPlayerItemVideoOutput* _videoOutput;
	AVPlayerItem* _playerItem;
	BOOL _playerHasReplacedWithItem;
	AVPlayer* _player;
	AVAsset* _asset;
	AVPlayer* _reverseAudioPlayer;
	AVPlayer* _audioPlayer;
	AVPlayer* _backgroundAudioPlayer;
	AVPlayerItem* _audioPlayerItem;
	CVBufferRef _lastPixelBuffer;
	FBKVOController* _KVOController;
	int _displayLinkCountDown;
	int _displayLinkFrameInterval;
	float _offset;
	float _volume;
	BOOL _shouldLoop;
	float _playerItemTimeScale;
	float _oldPlayerItemTimeScale;
	BOOL _paused;
	BOOL _wantToPlay;
	BOOL _playedToEndTime;
	BOOL _isOffsetLandscape;
	BOOL _reversePlaybackEnabled;
	BOOL _needToSeek;
	double _playerRate;
	double _oldPlayerRate;
	BOOL _performConfiguration;
	BOOL _hasUpdatedPlayerRate;
	BOOL _hasUpdatedReversePlaybackEnabled;
	float _deferredTrueScale;
	BOOL _hasUpdatedPlayerItemTimeScale;
	BOOL _mustSeekToBeginning;
	AVMutableComposition* _assetComposition;
	AVMutableComposition* _audioAssetComposition;
	AVMutableCompositionTrack* _assetVideoTrack;
	AVMutableCompositionTrack* _assetAudioTrack;
	BOOL _splitAudioVideoPlayback;
	SCImageProcessVideoPlaybackSessionListenerAnnouncer* _announcer;
	CGAffineTransform _viewportTransform;
	NSDictionary* _videoInfoForLogging;
	long long _noNewPixelBufferCount;
	long long _seekInProgress;
	SCD_Struct_LS191 _lastSmoothSeekTime;
	BOOL _isSmoothSeekInProgress;
	SCTV3PresenceBitmojiState _blackValueState;
	NSArray* _initializationCallstacks;
	BOOL _preciseSeeking;
	AVAudioMix* _audioProcessorMix;
	AVAsset* _backgroundAudioAsset;
	SCD_Struct_LS191 _startTimestamp;

}

@property (assign,nonatomic) float volume; 
@property (assign,nonatomic) BOOL shouldLoop; 
@property (nonatomic,readonly) BOOL isReversePlaying; 
@property (assign,nonatomic) SCD_Struct_LS191 startTimestamp;              //@synthesize startTimestamp=_startTimestamp - In the implementation block
@property (assign,nonatomic) BOOL preciseSeeking;                          //@synthesize preciseSeeking=_preciseSeeking - In the implementation block
@property (nonatomic,retain) AVAudioMix * audioProcessorMix;               //@synthesize audioProcessorMix=_audioProcessorMix - In the implementation block
@property (nonatomic,retain) AVAsset * backgroundAudioAsset;               //@synthesize backgroundAudioAsset=_backgroundAudioAsset - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)audioSessionDidBeginInterruption:(id)arg1 ;
-(void)audioSession:(id)arg1 didEndInterruption:(BOOL)arg2 ;
-(void)audioSessionRouteDidChangeReasonNewDeviceAvailable:(id)arg1 ;
-(void)audioSessionRouteDidChangeReasonOldDeviceUnavailable:(id)arg1 ;
-(void)_cleanUpDisplayLink;
-(void)setViewportTransform:(CGAffineTransform)arg1 ;
-(void)setBackgroundBlackValue:(double)arg1 duration:(double)arg2 ;
-(void)setOutputCommands:(id)arg1 ;
-(void)setPreOutputCommands:(id)arg1 ;
-(void)setPostOutputCommands:(id)arg1 ;
-(void)setIsOffsetLandscape:(BOOL)arg1 ;
-(BOOL)_setupAssetCompositionAndPlayerItem;
-(void)_remakeVideoOutput;
-(void)_observePlayerItem;
-(void)_onReceiveStopNotification:(id)arg1 ;
-(void)_rescaleAndChangePlayerItemIfNecessaryIgnoringOldSpeed:(BOOL)arg1 ;
-(void)_updatePlayerRateWithReversePlayback;
-(void)seekVideoAndAudioToBeginning;
-(void)_setAVPlayerVolumes:(float)arg1 ;
-(void)_applyAudioProcessorMix;
-(void)_startRunningShouldSeek:(BOOL)arg1 toTime:(SCD_Struct_LS191)arg2 ;
-(void)_unobservePlayerItem;
-(void)_rescaleAssetComposition:(float)arg1 ;
-(id)_generateAndConfigurePlayerItemFromAsset:(id)arg1 ;
-(void)_seekVideoAndAudioToTime:(SCD_Struct_LS191)arg1 ;
-(void)pauseRunning;
-(void)_smoothSeekToTime;
-(void)_playShouldSeek:(BOOL)arg1 toTime:(SCD_Struct_LS191)arg2 ;
-(void)_playerItemBufferDidBecomeEmpty:(id)arg1 ;
-(void)_playerItemLikelyToKeepUp:(id)arg1 ;
-(id)initWithQueue:(id)arg1 player:(id)arg2 asset:(id)arg3 layer:(id)arg4 orientation:(long long)arg5 intermediateCommands:(id)arg6 outputCommands:(id)arg7 postOutputCommands:(id)arg8 useHighFrameRate:(BOOL)arg9 isPlaybackBufferMonitoringEnabled:(BOOL)arg10 useSeparateAudioPlayer:(BOOL)arg11 videoInfoForLogging:(id)arg12 ;
-(void)commitConfigurationWithSeekToBeginning:(BOOL)arg1 ;
-(BOOL)isReversePlaying;
-(void)setAudioProcessorMix:(AVAudioMix *)arg1 ;
-(void)setBackgroundAudioAsset:(AVAsset *)arg1 ;
-(void)startRunningAtTime:(SCD_Struct_LS191)arg1 ;
-(void)startRunningFromBeginning;
-(void)resumeRunning;
-(void)setReversePlaybackEnabled:(BOOL)arg1 reverseAudioPlayer:(id)arg2 ;
-(void)setPlayerItemTimeScale:(double)arg1 ;
-(void)stopPlayingAndSeekSmoothlyToTime:(SCD_Struct_LS191)arg1 ;
-(BOOL)preciseSeeking;
-(void)setPreciseSeeking:(BOOL)arg1 ;
-(AVAudioMix *)audioProcessorMix;
-(AVAsset *)backgroundAudioAsset;
-(void)dealloc;
-(float)volume;
-(void)setVolume:(float)arg1 ;
-(void)setOffset:(float)arg1 ;
-(void)stopRunning;
-(BOOL)isPlaying;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)_applicationWillResignActive:(id)arg1 ;
-(void)_applicationDidBecomeActive:(id)arg1 ;
-(SCD_Struct_LS191)startTimestamp;
-(void)setStartTimestamp:(SCD_Struct_LS191)arg1 ;
-(void)_playerItemDidPlayToEndTime:(id)arg1 ;
-(BOOL)shouldLoop;
-(void)setShouldLoop:(BOOL)arg1 ;
-(void)addListener:(id)arg1 ;
-(void)beginConfiguration;
-(void)prepareToPlay;
-(void)removeListener:(id)arg1 ;
-(void)_displayLinkCallback:(id)arg1 ;
-(void)seekToTime:(SCD_Struct_LS191)arg1 ;
-(void)setPlayerRate:(double)arg1 ;
-(void)_pause;
@end

