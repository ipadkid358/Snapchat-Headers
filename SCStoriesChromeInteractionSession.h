/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:53 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCPublicContentMiniProfileControllerDelegate.h>
#import <Snapchat/SCMiniProfileViewControllerDelegate.h>
#import <Snapchat/SCStoryMiniProfileViewControllerDelegate.h>
#import <Snapchat/SCSearchStoryShareSessionDelegate.h>
#import <Snapchat/SCSearchEventListener.h>
#import <Snapchat/SCSerengetiViewControllerDismissalDelegate.h>
#import <Snapchat/SCOperaSession.h>

@protocol SCReplyDelegate, SCStartChatDelegate;
@class SCUserSession, User, SCOperaViewController, FBKVOController, SCPublicContentMiniProfileController, SCCheetahStoriesMiniProfileHandler, Story, SCSearchFriendProvider, SCMiniProfileActionHandler, SCStoryMiniProfileViewController, SCSearchStoryShareSession, SCSearchEventListenerAnnouncer, NSString;

@interface SCStoriesChromeInteractionSession : NSObject <SCPublicContentMiniProfileControllerDelegate, SCMiniProfileViewControllerDelegate, SCStoryMiniProfileViewControllerDelegate, SCSearchStoryShareSessionDelegate, SCSearchEventListener, SCSerengetiViewControllerDismissalDelegate, SCOperaSession> {

	SCUserSession* _userSession;
	User* _user;
	SCOperaViewController* _operaVC;
	id<SCReplyDelegate> _replyDelegate;
	id<SCStartChatDelegate> _startChatDelegate;
	FBKVOController* _kvoController;
	SCPublicContentMiniProfileController* _publicContentMiniProfileController;
	SCCheetahStoriesMiniProfileHandler* _miniProfileHandler;
	Story* _currentStory;
	BOOL _interactingFromContextMenu;
	SCSearchFriendProvider* _friendProvider;
	SCMiniProfileActionHandler* _miniProfileActionHandler;
	SCStoryMiniProfileViewController* _storyMiniProfileViewController;
	SCSearchStoryShareSession* _storyShareSession;
	SCSearchEventListenerAnnouncer* _eventAnnouncer;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)announcerIdentifier;
-(void)didTriggerEventWithEventName:(id)arg1 announcerIdentifier:(id)arg2 extraData:(id)arg3 ;
-(void)operaViewDidSendEvent:(id)arg1 context:(id)arg2 params:(id)arg3 ;
-(id)registeredEventsForOperaSession;
-(void)serengetiViewControllerDidDismiss:(id)arg1 ;
-(long long)_getAddSourceTypeForFriend:(id)arg1 ;
-(void)miniProfileController:(id)arg1 wantsToNavigateToChatWithDeepLinkURL:(id)arg2 ;
-(void)miniProfileViewControllerDidPressSnapButton:(id)arg1 ;
-(void)miniProfileViewControllerDidPressFriendStory:(id)arg1 ;
-(void)miniProfileViewControllerWasDismissed:(id)arg1 ;
-(id)additionalAddFriendContextForMiniProfileViewController:(id)arg1 ;
-(void)publicContentMiniProfile:(id)arg1 didTapButtonWithEntry:(id)arg2 ;
-(void)didDismissPublicContentMiniProfile;
-(void)searchModalPresenterPresentViewController:(id)arg1 animated:(BOOL)arg2 ;
-(void)searchModalPresenterDismissViewController:(id)arg1 animated:(BOOL)arg2 ;
-(void)storyMiniProfileViewControllerDidTapActionButton:(id)arg1 ;
-(id)storyMiniProfileViewControllerOperaDataModelToPresent:(id)arg1 ;
-(void)storyMiniProfileViewControllerDidSelectOptionShareStoryURL:(id)arg1 ;
-(void)storyMiniProfileViewControllerDidSelectOptionSendStory:(id)arg1 ;
-(id)initWithUserSession:(id)arg1 user:(id)arg2 operaViewController:(id)arg3 replyDelegate:(id)arg4 startChatDelegate:(id)arg5 miniProfileHandler:(id)arg6 ;
-(void)_miniProfileActionHandler:(id)arg1 didUpdateSubscribeState:(unsigned long long)arg2 ;
-(void)_showBusinessProfileWithLink:(id)arg1 ;
-(void)_displayUserMiniProfileWithFriend:(id)arg1 friendStories:(id)arg2 shouldAttributeToOurStories:(BOOL)arg3 ;
-(void)_prepareForMiniProfilePresentation;
-(void)_showMiniProfileWithFriendStories:(id)arg1 ;
-(void)_displayUserMiniProfileWithFriend:(id)arg1 currentStory:(id)arg2 ;
-(void)_showMiniProfileForDynamicStory:(id)arg1 ;
-(void)_displayContentMiniProfile:(id)arg1 ;
-(void)didDismissMiniProfile;
-(void)_showMiniProfileForDynamicStoryWithCurrentStory:(id)arg1 ;
-(void)dealloc;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
@end

