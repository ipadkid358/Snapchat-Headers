/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:17 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCNetworkActivityListener.h>

@protocol OS_dispatch_source, OS_dispatch_queue, SCPerforming;
@class NSMutableDictionary, NSDictionary, SCBatteryLoggerTimerItem, NSObject, NSMutableArray, SCBatteryHistory, NSString;

@interface SCBatteryLogger : NSObject <SCNetworkActivityListener> {

	NSMutableDictionary* _viewTimers;
	NSDictionary* _networkTimers;
	SCBatteryLoggerTimerItem* _cameraOnTimer;
	NSMutableDictionary* _pageViewSessionTimers;
	NSMutableDictionary* _allTimers;
	NSObject*<OS_dispatch_source> _batteryLevelTimer;
	NSObject*<OS_dispatch_queue> _batteryLoggerQueue;
	BOOL _inBackground;
	BOOL _viewChangedDuringBatteryDrop;
	BOOL _isLoggingTrueDrop;
	float _batteryLevel;
	id<SCPerforming> _queuePerformer;
	long long _batteryState;
	NSMutableArray* _performanceEvents;
	NSMutableArray* _blizzardEvents;
	NSMutableDictionary* _levelEventTrackers;
	SCBatteryHistory* _batteryHistory;
	SCBatteryLoggerTimerItem* _currentViewTimer;

}

@property (nonatomic,retain) id<SCPerforming> queuePerformer;                          //@synthesize queuePerformer=_queuePerformer - In the implementation block
@property (assign,nonatomic) float batteryLevel;                                       //@synthesize batteryLevel=_batteryLevel - In the implementation block
@property (assign,nonatomic) long long batteryState;                                   //@synthesize batteryState=_batteryState - In the implementation block
@property (nonatomic,retain) NSMutableArray * performanceEvents;                       //@synthesize performanceEvents=_performanceEvents - In the implementation block
@property (nonatomic,retain) NSMutableArray * blizzardEvents;                          //@synthesize blizzardEvents=_blizzardEvents - In the implementation block
@property (nonatomic,retain) NSMutableDictionary * levelEventTrackers;                 //@synthesize levelEventTrackers=_levelEventTrackers - In the implementation block
@property (nonatomic,retain) SCBatteryHistory * batteryHistory;                        //@synthesize batteryHistory=_batteryHistory - In the implementation block
@property (nonatomic,retain) SCBatteryLoggerTimerItem * currentViewTimer;              //@synthesize currentViewTimer=_currentViewTimer - In the implementation block
@property (assign,nonatomic) BOOL viewChangedDuringBatteryDrop;                        //@synthesize viewChangedDuringBatteryDrop=_viewChangedDuringBatteryDrop - In the implementation block
@property (assign,nonatomic) BOOL isLoggingTrueDrop;                                   //@synthesize isLoggingTrueDrop=_isLoggingTrueDrop - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)shared;
-(void)setPerformanceEvents:(NSMutableArray *)arg1 ;
-(NSMutableArray *)performanceEvents;
-(id<SCPerforming>)queuePerformer;
-(void)addLevelEventWithName:(id)arg1 withLevel:(unsigned long long)arg2 ;
-(void)setQueuePerformer:(id<SCPerforming>)arg1 ;
-(void)didSendBytes:(unsigned long long)arg1 ;
-(void)didReceiveBytes:(unsigned long long)arg1 ;
-(id)createTimerItemWithName:(id)arg1 ;
-(void)_setUpNetworkAndStateObservations;
-(void)batteryStateChanged;
-(id)_createBatteryLevelObservingTimer;
-(void)networkConnectivityChanged:(id)arg1 ;
-(void)_tearDownBatteryObservations;
-(void)_tearDownNetworkAndStateObservations;
-(BOOL)shouldLogThisSession;
-(id)getViewItemFromPageViewName:(id)arg1 ;
-(void)startTrackingViewItem:(id)arg1 timeStamp:(double)arg2 ;
-(void)endTrackingViewItem:(id)arg1 timeStamp:(double)arg2 ;
-(id)sessionNameFromPageName:(id)arg1 ;
-(SCBatteryHistory *)batteryHistory;
-(void)addPerformanceEvent:(id)arg1 ;
-(NSMutableArray *)blizzardEvents;
-(id)levelsForTracker:(id)arg1 ;
-(id)baseParametersWithBatteryStartLevel:(float)arg1 batteryChanged:(float)arg2 levels:(id)arg3 ;
-(void)setIsLoggingTrueDrop:(BOOL)arg1 ;
-(void)logBatteryLevelAndState;
-(id)_batteryStateString;
-(BOOL)isLoggingTrueDrop;
-(id)buildLoggingParamsWithStartBatteryLevel:(float)arg1 endBatteryLevel:(float)arg2 timestamp:(double)arg3 ;
-(void)setBlizzardEvents:(NSMutableArray *)arg1 ;
-(id)formatBatteryLevel:(float)arg1 ;
-(void)_setUpBatteryObservations;
-(void)startLoggingSessionIfNeeded;
-(void)setCpuUsageListener:(/*^block*/id)arg1 ;
-(void)viewDidAppearWithPageName:(id)arg1 ;
-(void)viewDidDisappearWithPageName:(id)arg1 ;
-(void)pageViewSessionDidStartWithName:(id)arg1 withPageViewStartTime:(double)arg2 ;
-(void)pageViewSessionDidEndWithName:(id)arg1 withPreviousSessionName:(id)arg2 withPageViewStartTime:(double)arg3 withPageViewEndTime:(double)arg4 ;
-(void)addBlizzardEvent:(id)arg1 props:(id)arg2 ;
-(void)logPageViewWithName:(id)arg1 withPageViewParameters:(id)arg2 ;
-(void)logBatteryLevelAndUpdateAppIsBackgrounded:(BOOL)arg1 ;
-(void)logManagedCapturerDidStartRunning;
-(void)logManagedCapturerDidStopRunning;
-(NSMutableDictionary *)levelEventTrackers;
-(void)setLevelEventTrackers:(NSMutableDictionary *)arg1 ;
-(void)setBatteryHistory:(SCBatteryHistory *)arg1 ;
-(SCBatteryLoggerTimerItem *)currentViewTimer;
-(void)setCurrentViewTimer:(SCBatteryLoggerTimerItem *)arg1 ;
-(BOOL)viewChangedDuringBatteryDrop;
-(void)setViewChangedDuringBatteryDrop:(BOOL)arg1 ;
-(void)setBatteryLevel:(float)arg1 ;
-(id)init;
-(void)dealloc;
-(void)resume;
-(long long)batteryState;
-(float)batteryLevel;
-(void)pause;
-(void)willResignActive:(id)arg1 ;
-(void)batteryLevelChanged;
-(void)setBatteryState:(long long)arg1 ;
-(void)didBecomeActive:(id)arg1 ;
@end

