/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:44 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/SCTimeProfilable.h>
#import <libobjc.A.dylib/NSCoding.h>

@protocol SCObserving;
@class NSMutableDictionary, NSString, SCSnapAdsPortalMetricCalendarData, SCSnapAdsPortalCampaignEntity, SCSnapAdsPortalAdSetEntity, SCSnapAdsPortalAdEntity, SCSnapAdsPortalAdAccount, SCSnapAdsPortalAccountEntity;

@interface SCSnapAdsPortalManager : NSObject <SCTimeProfilable, NSCoding> {

	NSMutableDictionary* _accountsByAccountId;
	NSString* _activeAccountId;
	id<SCObserving> _observeContext;
	BOOL _isAdvertiser;
	SCSnapAdsPortalMetricCalendarData* _activeCalendarData;
	SCSnapAdsPortalCampaignEntity* _activeCampaignEntity;
	SCSnapAdsPortalAdSetEntity* _activeAdSetEntity;
	SCSnapAdsPortalAdEntity* _activeAdEntity;

}

@property (nonatomic,readonly) SCSnapAdsPortalAdAccount * activeAccount; 
@property (nonatomic,readonly) SCSnapAdsPortalAccountEntity * activeAccountEntity; 
@property (nonatomic,retain) SCSnapAdsPortalMetricCalendarData * activeCalendarData;              //@synthesize activeCalendarData=_activeCalendarData - In the implementation block
@property (nonatomic,retain) SCSnapAdsPortalCampaignEntity * activeCampaignEntity;                //@synthesize activeCampaignEntity=_activeCampaignEntity - In the implementation block
@property (nonatomic,retain) SCSnapAdsPortalAdSetEntity * activeAdSetEntity;                      //@synthesize activeAdSetEntity=_activeAdSetEntity - In the implementation block
@property (nonatomic,retain) SCSnapAdsPortalAdEntity * activeAdEntity;                            //@synthesize activeAdEntity=_activeAdEntity - In the implementation block
@property (nonatomic,readonly) BOOL isAdvertiser;                                                 //@synthesize isAdvertiser=_isAdvertiser - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(void)sendRequestToEndpoint:(id)arg1 parameters:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)fetchEntityMetricsWithAccountId:(id)arg1 entityId:(id)arg2 entityType:(long long)arg3 startTime:(id)arg4 endTime:(id)arg5 completionBlock:(/*^block*/id)arg6 ;
+(void)sendRequestWithLoggingToEndpoint:(id)arg1 parameters:(id)arg2 networkEventType:(long long)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(id)_fetchSubEntitiesEndpointUrlForEntityType:(long long)arg1 entityId:(id)arg2 ;
+(id)_fetchSingleEntityEndpointUrlForEntityType:(long long)arg1 entityId:(id)arg2 ;
+(void)sendNotificationSettingsRequestWithParameters:(id)arg1 endpoint:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)fetchSnapAdsPortalAdAccountsDataWithSuccessBlock:(/*^block*/id)arg1 failureBlock:(/*^block*/id)arg2 ;
+(void)fetchSubEntitiesForEntityId:(id)arg1 entityType:(long long)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)fetchSingleEntityForEntityId:(id)arg1 entityType:(long long)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)sendRequestToEndpoint:(id)arg1 entityId:(id)arg2 entityType:(long long)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(void)updateSnapAdsPortalAdForAdAccountId:(id)arg1 adId:(id)arg2 updatedParams:(id)arg3 successBlock:(/*^block*/id)arg4 failureBlock:(/*^block*/id)arg5 ;
+(void)updateNotificationSettingWithAccountId:(id)arg1 notificationSetting:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(void)fetchAdCreativeForPreviewWithEntityType:(long long)arg1 entityId:(id)arg2 successBlock:(/*^block*/id)arg3 failureBlock:(/*^block*/id)arg4 ;
+(id)_sortAccountsByAccountName:(id)arg1 ;
+(id)path;
+(int)context;
+(id)shared;
+(BOOL)initialized;
-(BOOL)isAdvertiser;
-(void)configureWithUserSession:(id)arg1 ;
-(SCSnapAdsPortalCampaignEntity *)activeCampaignEntity;
-(SCSnapAdsPortalAdSetEntity *)activeAdSetEntity;
-(void)updateEntity:(id)arg1 updatedEffectiveStatus:(long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)fetchAdAccountsWithCompletionBlock:(/*^block*/id)arg1 ;
-(SCSnapAdsPortalMetricCalendarData *)activeCalendarData;
-(void)fetchEntityListWithEntityId:(id)arg1 entityType:(long long)arg2 objective:(long long)arg3 completionBlock:(/*^block*/id)arg4 ;
-(SCSnapAdsPortalAccountEntity *)activeAccountEntity;
-(void)fetchSingleEntityWithEntityId:(id)arg1 parentId:(id)arg2 entityType:(long long)arg3 completionBlock:(/*^block*/id)arg4 ;
-(void)setActiveCampaignEntity:(SCSnapAdsPortalCampaignEntity *)arg1 ;
-(void)setActiveAdSetEntity:(SCSnapAdsPortalAdSetEntity *)arg1 ;
-(void)setActiveAdEntity:(SCSnapAdsPortalAdEntity *)arg1 ;
-(void)_setDefaultActiveAccountIfNecessary;
-(id)findAdAccountByAdAccountId:(id)arg1 ;
-(void)_updateWithAccounts:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(id)_createAccountsWithSOJUAccounts:(id)arg1 didFetchAd:(BOOL)arg2 ;
-(void)fetchCampaignListWithAccountId:(id)arg1 completionBlock:(/*^block*/id)arg2 ;
-(void)fetchAdSetListWithCampaignId:(id)arg1 objective:(long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)fetchAdListWithAdSetId:(id)arg1 objective:(long long)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)_handleUpdateAdStatusFailureWithCompletionBlock:(/*^block*/id)arg1 ;
-(SCSnapAdsPortalAdEntity *)activeAdEntity;
-(BOOL)updateActiveAccount:(id)arg1 ;
-(void)updateNotificationSettingWithAccountId:(id)arg1 type:(long long)arg2 enabled:(BOOL)arg3 ;
-(void)_updateWithAccounts:(id)arg1 targetAccountId:(id)arg2 completionBlock:(/*^block*/id)arg3 ;
-(void)setActiveCalendarData:(SCSnapAdsPortalMetricCalendarData *)arg1 ;
-(id)init;
-(id)initWithCoder:(id)arg1 ;
-(void)encodeWithCoder:(id)arg1 ;
-(void)clear;
-(SCSnapAdsPortalAdAccount *)activeAccount;
-(BOOL)saveState;
-(void)setAdvertiser:(BOOL)arg1 ;
-(id)accounts;
@end

