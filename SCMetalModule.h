/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:24 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/SCProcessingModule.h>

@protocol SCMetalRenderCommand, MTLLibrary, MTLFunction, MTLComputePipelineState, MTLCommandQueue;
@class NSString;

@interface SCMetalModule : NSObject <SCProcessingModule> {

	id<SCMetalRenderCommand> _metalRenderCommand;
	id<MTLLibrary> _library;
	id<MTLFunction> _function;
	id<MTLComputePipelineState> _computePipelineState;
	id<MTLCommandQueue> _commandQueue;
	CVMetalTextureCacheRef _textureCache;

}

@property (nonatomic,readonly) id<MTLLibrary> library;                                        //@synthesize library=_library - In the implementation block
@property (nonatomic,readonly) id<MTLDevice> device; 
@property (nonatomic,readonly) id<MTLFunction> function;                                      //@synthesize function=_function - In the implementation block
@property (nonatomic,readonly) id<MTLComputePipelineState> computePipelineState;              //@synthesize computePipelineState=_computePipelineState - In the implementation block
@property (nonatomic,readonly) id<MTLCommandQueue> commandQueue;                              //@synthesize commandQueue=_commandQueue - In the implementation block
@property (nonatomic,readonly) CVMetalTextureCacheRef textureCache;                           //@synthesize textureCache=_textureCache - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(CVMetalTextureCacheRef)textureCache;
-(BOOL)requiresDepthData;
-(id)initWithMetalRenderCommand:(id)arg1 ;
-(id<MTLLibrary>)library;
-(opaqueCMSampleBufferRef)render:(RenderData*)arg1 ;
-(id<MTLDevice>)device;
-(id<MTLFunction>)function;
-(id<MTLComputePipelineState>)computePipelineState;
-(id<MTLCommandQueue>)commandQueue;
@end

