/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:12 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <libobjc.A.dylib/WKNavigationDelegate.h>

@protocol SCSearchWebViewSafeBrowsingChecking, SCSearchWebViewNavigationTrackerDelegate;
@class WKWebView, FBKVOController, NSMutableDictionary, NSURL, NSString;

@interface SCSearchWebViewNavigationTracker : NSObject <WKNavigationDelegate> {

	WKWebView* _webView;
	id<SCSearchWebViewSafeBrowsingChecking> _safeBrowsingChecker;
	FBKVOController* _observeController;
	NSMutableDictionary* _mutableNavigationHistory;
	NSMutableDictionary* _mutablePendingActionHandler;
	BOOL _hasCommittedNavigation;
	BOOL _canGoBack;
	id<SCSearchWebViewNavigationTrackerDelegate> _delegate;
	NSURL* _externalLink;

}

@property (assign,nonatomic,__weak) id<SCSearchWebViewNavigationTrackerDelegate> delegate;              //@synthesize delegate=_delegate - In the implementation block
@property (nonatomic,readonly) WKWebView * webView;                                                     //@synthesize webView=_webView - In the implementation block
@property (nonatomic,readonly) BOOL hasCommittedNavigation;                                             //@synthesize hasCommittedNavigation=_hasCommittedNavigation - In the implementation block
@property (nonatomic,readonly) BOOL canGoBack;                                                          //@synthesize canGoBack=_canGoBack - In the implementation block
@property (nonatomic,readonly) NSURL * externalLink;                                                    //@synthesize externalLink=_externalLink - In the implementation block
@property (nonatomic,readonly) NSURL * currentUrl; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(void)_initWebViewKVO;
-(id)_navigationItemForURL:(id)arg1 ;
-(void)_checkSafeBrowsingForURL:(id)arg1 webView:(id)arg2 navigationAction:(id)arg3 ;
-(void)_updateHasCommittedNavigation:(BOOL)arg1 ;
-(void)_handleCheckResultForURL:(id)arg1 webView:(id)arg2 navigationAction:(id)arg3 urlType:(long long)arg4 ;
-(void)_updateNavigationItem:(id)arg1 ;
-(id)initWithWebView:(id)arg1 safeBrowsingChecker:(id)arg2 ;
-(void)back;
-(NSURL *)currentUrl;
-(BOOL)hasCommittedNavigation;
-(NSURL *)externalLink;
-(void)setDelegate:(id<SCSearchWebViewNavigationTrackerDelegate>)arg1 ;
-(void)dealloc;
-(id<SCSearchWebViewNavigationTrackerDelegate>)delegate;
-(WKWebView *)webView;
-(BOOL)canGoBack;
-(void)webView:(id)arg1 decidePolicyForNavigationAction:(id)arg2 decisionHandler:(/*^block*/id)arg3 ;
-(void)webView:(id)arg1 didStartProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didReceiveServerRedirectForProvisionalNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailProvisionalNavigation:(id)arg2 withError:(id)arg3 ;
-(void)webView:(id)arg1 didCommitNavigation:(id)arg2 ;
-(void)webView:(id)arg1 didFailNavigation:(id)arg2 withError:(id)arg3 ;
-(void)_updateProgress;
@end

