/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:35 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/


@protocol SCGalleryProfile, SCNetworker;
@class SCQueuePerformer, SCKeyServiceEncryption, SCKeyServicePersistedKey, SCKeyServiceAuthorizationAttempt, SCKeyServiceListenerAnnouncer, SCKeyServicePassphrasePromptCoordinator, NSMutableDictionary, NSMutableSet, NSMutableArray, SCGalleryUserDefaultsManager;

@interface SCKeyService : NSObject {

	id<SCGalleryProfile> _profile;
	id<SCNetworker> _networker;
	SCQueuePerformer* _performer;
	SCKeyServiceEncryption* _masterKey;
	SCKeyServicePersistedKey* _persistedKey;
	SCKeyServiceAuthorizationAttempt* _authorizationAttempt;
	BOOL _startOnce;
	SCKeyServiceListenerAnnouncer* _announcer;
	SCKeyServicePassphrasePromptCoordinator* _promptCoordinator;
	BOOL _isRetrievingMasterKey;
	NSMutableDictionary* _masterKeyRequestHandlers;
	NSMutableSet* _masterKeyRequestHandlerUUIDsForRetrievingFeedback;
	NSMutableSet* _masterKeyRequestHandlerUUIDsForBlocking;
	NSMutableDictionary* _authorizationRequestHandlers;
	NSMutableArray* _authorizationRequestHandlerQueue;
	SCGalleryUserDefaultsManager* _userDefaultManager;

}
+(void)secureGenerateRandomKey:(id*)arg1 IV:(id*)arg2 ;
-(id)requestMasterKeyWithOptions:(unsigned long long)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)masterKey;
-(void)startFromKeychain;
-(id)allowedFutureAuthorizationDate;
-(void)setMasterKeyWithPassphrase:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(id)requestAuthorizationWithPassphrase:(id)arg1 queue:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)removeAuthorizationRequestForUUID:(id)arg1 ;
-(void)removeMasterKeyRequestForUUID:(id)arg1 ;
-(void)_requestWithAuthorizationRequestHandler:(id)arg1 ;
-(BOOL)_isAuthorizationAttemptAllowed;
-(void)_requestWithAuthorizationRequestHandlerWithPassphrase:(id)arg1 ;
-(BOOL)_retrievePersistedKeyFromKeychain;
-(void)_trackFailedAuthorizationAttemptWithAllowedFutureDate:(id)arg1 ;
-(void)_removeAuthorizationAttemptFromKeychain;
-(void)_announceEmptyAllowedFutureAuthorizationDate;
-(void)_retrieveMasterKeyFromRemoteWithPassprhase:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)_startFromKeychainOnce;
-(void)_registerMasterKeyWithKeyService:(id)arg1 passprhase:(id)arg2 queue:(id)arg3 completionHandler:(/*^block*/id)arg4 ;
-(void)_requestAssertionForPurpose:(long long)arg1 successHandler:(/*^block*/id)arg2 failureHandler:(/*^block*/id)arg3 ;
-(void)_retrieveMasterKeyWithKeyService:(id)arg1 passprhase:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(void)_setPersistedKeyIntoKeychain;
-(void)_deliverWhenMasterKeyAvailable;
-(void)_deliverErrorForPassphraseAuth:(id)arg1 ;
-(id)_allowedFutureDateFromServer:(id)arg1 ;
-(void)_retrieveAuthorizationAttemptFromKeychain;
-(void)_removePersistedKeyFromKeychain;
-(void)_setAuthorizationAttemptIntoKeychain;
-(id)initWithProfile:(id)arg1 networker:(id)arg2 userSettingManager:(id)arg3 userDefaultManager:(id)arg4 ;
-(void)isPersistedKeyPresent:(/*^block*/id)arg1 ;
-(void)cancelPromptForMasterKeyRequestUUIDs:(id)arg1 ;
-(void)resetRateLimit;
-(void)addListener:(id)arg1 ;
-(void)removeListener:(id)arg1 ;
@end

