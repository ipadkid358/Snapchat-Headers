/*
* This header is generated by classdump-dyld 1.0
* on Saturday, May 19, 2018 at 4:52:11 PM Eastern Daylight Time
* Operating System: Version 10.2 (Build 14C92)
* Image Source: /var/containers/Bundle/Application/7AB1B6B1-534C-4BF9-A7EB-BE2BD4C13043/Snapchat.app/Snapchat
* classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos.
*/

#import <Snapchat/Snapchat-Structs.h>
#import <Snapchat/RTCAudioSessionActivationDelegate.h>

@class NSRecursiveLock, AVAudioSession, NSString, AVAudioSessionRouteDescription, NSArray, AVAudioSessionDataSourceDescription;

@interface RTCAudioSession : NSObject <RTCAudioSessionActivationDelegate> {

	int _lockRecursionCount;
	int _webRTCSessionCount;
	BOOL _isAudioEnabled;
	BOOL _isInterrupted;
	NSRecursiveLock* _lock;
	vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate> > >* _delegates;

}

@property (nonatomic,readonly) int activationCount; 
@property (nonatomic,readonly) int webRTCSessionCount; 
@property (readonly) BOOL canPlayOrRecord; 
@property (assign,nonatomic) BOOL isInterrupted; 
@property (nonatomic,readonly) vector<__weak id<RTCAudioSessionDelegate> delegates;              //@synthesize delegates=_delegates - In the implementation block
@property (nonatomic,readonly) AVAudioSession * session; 
@property (nonatomic,readonly) BOOL isActive; 
@property (nonatomic,readonly) BOOL isLocked; 
@property (assign,nonatomic) BOOL useManualAudio; 
@property (assign,nonatomic) BOOL isAudioEnabled; 
@property (readonly) NSString * category; 
@property (readonly) unsigned long long categoryOptions; 
@property (readonly) NSString * mode; 
@property (readonly) BOOL secondaryAudioShouldBeSilencedHint; 
@property (readonly) AVAudioSessionRouteDescription * currentRoute; 
@property (readonly) long long maximumInputNumberOfChannels; 
@property (readonly) long long maximumOutputNumberOfChannels; 
@property (readonly) float inputGain; 
@property (readonly) BOOL inputGainSettable; 
@property (readonly) BOOL inputAvailable; 
@property (readonly) NSArray * inputDataSources; 
@property (readonly) AVAudioSessionDataSourceDescription * inputDataSource; 
@property (readonly) NSArray * outputDataSources; 
@property (readonly) AVAudioSessionDataSourceDescription * outputDataSource; 
@property (readonly) double sampleRate; 
@property (readonly) double preferredSampleRate; 
@property (readonly) long long inputNumberOfChannels; 
@property (readonly) long long outputNumberOfChannels; 
@property (readonly) float outputVolume; 
@property (readonly) double inputLatency; 
@property (readonly) double outputLatency; 
@property (readonly) double IOBufferDuration; 
@property (readonly) double preferredIOBufferDuration; 
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)lockError;
+(id)sharedInstance;
-(BOOL)setConfiguration:(id)arg1 active:(BOOL)arg2 shouldSetActive:(BOOL)arg3 error:(id*)arg4 ;
-(BOOL)checkLock:(id*)arg1 ;
-(BOOL)setConfiguration:(id)arg1 error:(id*)arg2 ;
-(BOOL)setConfiguration:(id)arg1 active:(BOOL)arg2 error:(id*)arg3 ;
-(void)audioSessionDidBeginInterruption:(id)arg1 ;
-(void)audioSession:(id)arg1 didEndInterruption:(BOOL)arg2 ;
-(void)audioSession:(id)arg1 didChangeVolume:(double)arg2 ;
-(BOOL)inputGainSettable;
-(void)handleRouteChangeNotification:(id)arg1 ;
-(void)notifyDidChangeCanPlayOrRecord:(BOOL)arg1 ;
-(void)removeZeroedDelegates;
-(void)notifyDidChangeOutputVolume:(float)arg1 ;
-(void)notifyDidBeginInterruption;
-(void)notifyDidEndInterruptionWithShouldResumeSession:(BOOL)arg1 ;
-(void)notifyMediaServicesWereLost;
-(void)notifyMediaServicesWereReset;
-(void)notifyDidChangeRouteWithReason:(unsigned long long)arg1 previousRoute:(id)arg2 ;
-(void)notifyDidStartPlayOrRecord;
-(void)notifyDidStopPlayOrRecord;
-(BOOL)unconfigureWebRTCSession:(id*)arg1 ;
-(id)configurationErrorWithDescription:(id)arg1 ;
-(void)audioSessionDidActivate:(id)arg1 ;
-(void)audioSessionDidDeactivate:(id)arg1 ;
-(void)setUseManualAudio:(BOOL)arg1 ;
-(BOOL)useManualAudio;
-(void)lockForConfiguration;
-(void)pushDelegate:(id)arg1 ;
-(int)webRTCSessionCount;
-(BOOL)canPlayOrRecord;
-(BOOL)beginWebRTCSession:(id*)arg1 ;
-(BOOL)endWebRTCSession:(id*)arg1 ;
-(BOOL)configureWebRTCSession:(id*)arg1 ;
-(void)notifyDidDetectPlayoutGlitch:(long long)arg1 ;
-(long long)outputNumberOfChannels;
-(id)init;
-(void)dealloc;
-(NSString *)description;
-(BOOL)isActive;
-(NSString *)category;
-(BOOL)isLocked;
-(NSString *)mode;
-(void)setIsActive:(BOOL)arg1 ;
-(double)sampleRate;
-(int)activationCount;
-(void)setIsInterrupted:(BOOL)arg1 ;
-(long long)inputNumberOfChannels;
-(BOOL)setPreferredIOBufferDuration:(double)arg1 error:(id*)arg2 ;
-(double)preferredIOBufferDuration;
-(AVAudioSessionRouteDescription *)currentRoute;
-(AVAudioSession *)session;
-(BOOL)isAudioEnabled;
-(double)IOBufferDuration;
-(void)setIsAudioEnabled:(BOOL)arg1 ;
-(BOOL)inputAvailable;
-(void)unlockForConfiguration;
-(void)audioSessionMediaServicesWereLost:(id)arg1 ;
-(void)audioSessionMediaServicesWereReset:(id)arg1 ;
-(BOOL)setActive:(BOOL)arg1 error:(id*)arg2 ;
-(BOOL)setMode:(id)arg1 error:(id*)arg2 ;
-(BOOL)setCategory:(id)arg1 withOptions:(unsigned long long)arg2 error:(id*)arg3 ;
-(NSArray *)outputDataSources;
-(BOOL)isInterrupted;
-(void)addDelegate:(id)arg1 ;
-(void)removeDelegate:(id)arg1 ;
-(vector<__weak id<RTCAudioSessionDelegate>)delegates;
-(float)outputVolume;
-(double)outputLatency;
-(BOOL)setPreferredSampleRate:(double)arg1 error:(id*)arg2 ;
-(double)inputLatency;
-(double)preferredSampleRate;
-(unsigned long long)categoryOptions;
-(BOOL)setPreferredInputNumberOfChannels:(long long)arg1 error:(id*)arg2 ;
-(BOOL)setInputGain:(float)arg1 error:(id*)arg2 ;
-(BOOL)setInputDataSource:(id)arg1 error:(id*)arg2 ;
-(BOOL)setOutputDataSource:(id)arg1 error:(id*)arg2 ;
-(float)inputGain;
-(NSArray *)inputDataSources;
-(AVAudioSessionDataSourceDescription *)inputDataSource;
-(AVAudioSessionDataSourceDescription *)outputDataSource;
-(BOOL)secondaryAudioShouldBeSilencedHint;
-(long long)maximumInputNumberOfChannels;
-(long long)maximumOutputNumberOfChannels;
-(BOOL)overrideOutputAudioPort:(unsigned long long)arg1 error:(id*)arg2 ;
-(BOOL)setPreferredInput:(id)arg1 error:(id*)arg2 ;
-(BOOL)setPreferredOutputNumberOfChannels:(long long)arg1 error:(id*)arg2 ;
@end

